{"title":"DocumentDB(MongoDB) Setting","slug":"DocumentDB-MongoDB-Setting","date":"2020-12-18T05:36:38.000Z","updated":"2021-02-09T03:51:34.842Z","comments":true,"path":"api/articles/DocumentDB-MongoDB-Setting.json","photos":[],"link":"","excerpt":"","covers":["https://user-images.githubusercontent.com/56995911/107305217-e6e80900-6ac5-11eb-9b86-081655884a9a.png","https://user-images.githubusercontent.com/56995911/107311500-cd4cbe80-6ad1-11eb-8657-60dd6818a3f9.png","https://user-images.githubusercontent.com/56995911/107311634-0d13a600-6ad2-11eb-8d85-aefd481a5fb0.png","https://user-images.githubusercontent.com/56995911/107311743-38969080-6ad2-11eb-8ba1-42c26d3bf022.png","https://user-images.githubusercontent.com/56995911/107311775-4ba96080-6ad2-11eb-99f7-e888ad89c100.png","https://user-images.githubusercontent.com/56995911/107311827-6c71b600-6ad2-11eb-8576-7d2551c1f053.png","https://user-images.githubusercontent.com/56995911/107311894-975c0a00-6ad2-11eb-8ad1-bb52fc3eecba.png","https://user-images.githubusercontent.com/56995911/107311951-b78bc900-6ad2-11eb-91dd-f32bf4b6eaa1.png","https://user-images.githubusercontent.com/56995911/107311981-ca060280-6ad2-11eb-883d-0d92ec57f2bd.png","https://user-images.githubusercontent.com/56995911/107312022-e144f000-6ad2-11eb-8ea9-269406a851ed.png","https://user-images.githubusercontent.com/56995911/107312076-f6ba1a00-6ad2-11eb-9c8c-629e249a503e.png","https://user-images.githubusercontent.com/56995911/107312104-076a9000-6ad3-11eb-98f7-ab6722bccc2e.png","https://user-images.githubusercontent.com/56995911/107312141-1c472380-6ad3-11eb-923f-1b00dcfdb91f.png","https://user-images.githubusercontent.com/56995911/107312202-3123b700-6ad3-11eb-98bb-4de25042a2f4.png","https://user-images.githubusercontent.com/56995911/107312253-4c8ec200-6ad3-11eb-88a0-7978bd757975.png","https://user-images.githubusercontent.com/56995911/107312284-5ca6a180-6ad3-11eb-8e9c-ede43d055fcb.png","https://user-images.githubusercontent.com/56995911/107312307-6c25ea80-6ad3-11eb-9d9e-a04e810fb022.png","https://user-images.githubusercontent.com/56995911/107312451-cc1c9100-6ad3-11eb-9781-23f81607c345.png","https://user-images.githubusercontent.com/56995911/107312498-eeaeaa00-6ad3-11eb-8587-ad2874b069a1.png","https://user-images.githubusercontent.com/56995911/107312526-0128e380-6ad4-11eb-8f6e-be11ad2d7a2e.png","https://user-images.githubusercontent.com/56995911/107312613-29184700-6ad4-11eb-9269-0916ed69f9b5.png","https://user-images.githubusercontent.com/56995911/107312664-44835200-6ad4-11eb-98a6-7a8e5bb20709.png","https://user-images.githubusercontent.com/56995911/107312695-536a0480-6ad4-11eb-934a-8d23d2c4ecca.png","https://user-images.githubusercontent.com/56995911/107312715-61b82080-6ad4-11eb-878e-a5bf796b1719.png"],"content":"<h2 id=\"서문\"><a href=\"#서문\" class=\"headerlink\" title=\"서문\"></a>서문</h2><ul>\n<li>시작에 앞서 DocumentDB를 사용하게 된 사유는 MongoDB &amp; AWS DocumentDB 에 나와있듯이 1000만 Row 이하의 데이터의 경우 DocumentDB가 훨씬 이득이었다.</li>\n<li>이득인 사유<br>1) 1000만 row 이하로 사용하는 서비스가 대부분임.<br>2) 자동 백업, 복구 스토리지 제공(Snapshot)<br>3) 인스턴스 &amp; 클러스터 관리 거의 불필요(설정과 관리는 다른개념)</li>\n<li>툴은 AWS에서도 가이드로 제공해주는 툴 중에 요즘 뜨고 있는 툴이라고 생각되어 Studio 3T를 사용.</li>\n<li>최근 정정(2021-01-20) : Studio 3T는 무료가 아니라 유료 라이센스이며, 간단한 정도라면 MongoDB에서 무료로 제공중인 Compass를 사용하는 것이 좋음.<br><a href=\"https://user-images.githubusercontent.com/56995911/107305217-e6e80900-6ac5-11eb-9b86-081655884a9a.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107305217-e6e80900-6ac5-11eb-9b86-081655884a9a.png\" alt=\"image\"></a></li>\n</ul>\n<h2 id=\"본문\"><a href=\"#본문\" class=\"headerlink\" title=\"본문\"></a>본문</h2><h3 id=\"1-EC2-설정-설치\"><a href=\"#1-EC2-설정-설치\" class=\"headerlink\" title=\"1. EC2 설정(설치)\"></a>1. EC2 설정(설치)</h3><ul>\n<li>깔끔하게 Linux로 가보자.</li>\n<li>(제목은 DocumentDB면서 왜 갑자기 EC2를 설치하냐고 물어볼 수 있는데, Windows가 있어야 카카오톡을 깔 수 있듯이 OS가 있어야한다는 개념으로 생각하면 편하다.)</li>\n</ul>\n<h4 id=\"1-메인화면에서-EC2생성-클릭\"><a href=\"#1-메인화면에서-EC2생성-클릭\" class=\"headerlink\" title=\"1) 메인화면에서 EC2생성 클릭\"></a>1) 메인화면에서 EC2생성 클릭</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107311500-cd4cbe80-6ad1-11eb-8657-60dd6818a3f9.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311500-cd4cbe80-6ad1-11eb-8657-60dd6818a3f9.png\" alt=\"image\"></a></p>\n<h4 id=\"2-EC2엔진-설정\"><a href=\"#2-EC2엔진-설정\" class=\"headerlink\" title=\"2) EC2엔진 설정\"></a>2) EC2엔진 설정</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107311634-0d13a600-6ad2-11eb-8d85-aefd481a5fb0.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311634-0d13a600-6ad2-11eb-8d85-aefd481a5fb0.png\" alt=\"image\"></a></p>\n<ul>\n<li>EC2의 수많은 OS를 선택할 수 있었지만, 난 스펙은 사실 잘 모른다. 잘 돌아가기만 하면 된다고 생각하기에…</li>\n<li>따라서, 가이드와 동일하게 Linux 2 AMI를 사용하기로 한다.</li>\n<li>뒤로 t3.micro를 씀으로 일단은 저렴한 걸로 생성해보고자 한다.</li>\n<li>이후, [Review and Launch] 버튼 클릭해서 총 7단계인 복잡한놈을 빨리 끝내기로 한다.</li>\n</ul>\n<h4 id=\"3-EC2그룹설정\"><a href=\"#3-EC2그룹설정\" class=\"headerlink\" title=\"3) EC2그룹설정\"></a>3) EC2그룹설정</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107311743-38969080-6ad2-11eb-8ba1-42c26d3bf022.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311743-38969080-6ad2-11eb-8ba1-42c26d3bf022.png\" alt=\"image\"></a></p>\n<ul>\n<li><p>다른건 모르겠고, 일단 7단계로 건너뛰어 왔다. </p>\n</li>\n<li><p>AWS에서 가장 중요하게 생각하는 권한과 보안중의 한 축을 담당하는 Security Group을 설정하자.(아래 사진처럼 이름넣고 Source만 수정해주면 끝난다)<br><a href=\"https://user-images.githubusercontent.com/56995911/107311775-4ba96080-6ad2-11eb-99f7-e888ad89c100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311775-4ba96080-6ad2-11eb-99f7-e888ad89c100.png\" alt=\"image\"></a></p>\n</li>\n<li><p>설정이 끝났으면 [Review and Launch]버튼을 가차없이 누른다.</p>\n</li>\n</ul>\n<h4 id=\"4-검토-및-설치\"><a href=\"#4-검토-및-설치\" class=\"headerlink\" title=\"4) 검토 및 설치\"></a>4) 검토 및 설치</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107311827-6c71b600-6ad2-11eb-8576-7d2551c1f053.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311827-6c71b600-6ad2-11eb-8576-7d2551c1f053.png\" alt=\"image\"></a></p>\n<ul>\n<li>설정한 내용들을 확인한 후 [Launch]버튼을 클릭한다.<br><img src=\"https://user-images.githubusercontent.com/56995911/107311894-975c0a00-6ad2-11eb-8ad1-bb52fc3eecba.png\" alt=\"image\"></li>\n<li>시간이 좀 흐른 뒤에 위와 같이 하나의 Linux 서버가 만들어 진 것을 확인할 수 있다.</li>\n</ul>\n<h3 id=\"2-보안그룹-생성\"><a href=\"#2-보안그룹-생성\" class=\"headerlink\" title=\"2. 보안그룹 생성\"></a>2. 보안그룹 생성</h3><ul>\n<li>자, 이제 클러스터(DocumentDB)와 연결할 보안그룹을 만들어보자.</li>\n<li>참고로, 아까 EC2만들면서 만든 보안그룹은 EC2에서 사용하는 보안그룹이다. (착각하지말자)</li>\n</ul>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/107311951-b78bc900-6ad2-11eb-91dd-f32bf4b6eaa1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311951-b78bc900-6ad2-11eb-91dd-f32bf4b6eaa1.png\" alt=\"image\"></a></p>\n<ul>\n<li>보안그룹은 별내용없다. </li>\n<li>[이름입력] → [Custom TCP : 27017] → source 설정 하면 끝난다. 그림으로 대체한다.<br><a href=\"https://user-images.githubusercontent.com/56995911/107311981-ca060280-6ad2-11eb-883d-0d92ec57f2bd.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311981-ca060280-6ad2-11eb-883d-0d92ec57f2bd.png\" alt=\"image\"></a></li>\n</ul>\n<h3 id=\"3-Document-Cluster-생성\"><a href=\"#3-Document-Cluster-생성\" class=\"headerlink\" title=\"3. Document Cluster 생성\"></a>3. Document Cluster 생성</h3><ul>\n<li>EC2인지 뭔지를 지나 결국 목적지에 왔지만, 이제 본게임이라고 생각할 것이다.</li>\n<li>하지만, 걱정말자. 너무 쉽다.</li>\n</ul>\n<h4 id=\"1-클러스터-생성\"><a href=\"#1-클러스터-생성\" class=\"headerlink\" title=\"1) 클러스터 생성\"></a>1) 클러스터 생성</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107312022-e144f000-6ad2-11eb-8ea9-269406a851ed.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312022-e144f000-6ad2-11eb-8ea9-269406a851ed.png\" alt=\"image\"></a></p>\n<ul>\n<li>가이드에 맞춰 검은색으로 칠해진 모든 곳을 입력하자.</li>\n<li>테스트용도라면 Instance class 와 Number of instance 는 가급적 가장 낮은 사양으로 했으면 한다. </li>\n</ul>\n<h4 id=\"2-추가설정\"><a href=\"#2-추가설정\" class=\"headerlink\" title=\"2) 추가설정\"></a>2) 추가설정</h4><p><img src=\"https://user-images.githubusercontent.com/56995911/107312076-f6ba1a00-6ad2-11eb-9c8c-629e249a503e.png\" alt=\"image\"></p>\n<ul>\n<li>버튼클릭하면 어마어마한 옵션설정이 나온다.</li>\n</ul>\n<h5 id=\"i-Network-Settings\"><a href=\"#i-Network-Settings\" class=\"headerlink\" title=\"i) Network Settings\"></a>i) Network Settings</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107312104-076a9000-6ad3-11eb-98f7-ab6722bccc2e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312104-076a9000-6ad3-11eb-98f7-ab6722bccc2e.png\" alt=\"image\"></a></p>\n<ul>\n<li>아까 2번에서 생성했던 보안그룹이 생각나는가? 그걸 여기 쓰면 된다. </li>\n<li>다시말하지만, 처음 EC2에서 보안그룹을 생성했던건 EC2에서 끝난다. 2번에서 생성한 것은 Cluster에서 사용하기 위한 용도이다.</li>\n</ul>\n<h5 id=\"ii-Cluster-Options\"><a href=\"#ii-Cluster-Options\" class=\"headerlink\" title=\"ii) Cluster Options\"></a>ii) Cluster Options</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107312141-1c472380-6ad3-11eb-923f-1b00dcfdb91f.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312141-1c472380-6ad3-11eb-923f-1b00dcfdb91f.png\" alt=\"image\"></a></p>\n<ul>\n<li>이 Cluster Parameter Group 셋팅법은 따로 아래에서 설명하겠다.</li>\n<li>사용하는 이유는, 우린 툴을 쓸거니까…….툴에 맞춘 사양이 들어가야 하니까…..</li>\n</ul>\n<h5 id=\"iii-Etc\"><a href=\"#iii-Etc\" class=\"headerlink\" title=\"iii) Etc\"></a>iii) Etc</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107312202-3123b700-6ad3-11eb-98bb-4de25042a2f4.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312202-3123b700-6ad3-11eb-98bb-4de25042a2f4.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/107312217-3a148880-6ad3-11eb-97d0-23789966611e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312217-3a148880-6ad3-11eb-97d0-23789966611e.png\" alt=\"image\"></a></p>\n<ul>\n<li>기타 등등이라고 명칭한 이유는, 기본값을 쓸거기때문에..</li>\n<li>태그는 설정해주면 검색하기 좋을 것이고, Protection은 클러스터를 보호해주는 역할이다.<br>나중에 체크를 풀어줄 수도 있지만, 인스턴스와 클러스터를 지우지 못하게 방어막을 한번 걸어주는 것이다. </li>\n<li>테스트이므로 풀어주어도 상관없다.</li>\n</ul>\n<h5 id=\"iv-클러스터-확인\"><a href=\"#iv-클러스터-확인\" class=\"headerlink\" title=\"iv) 클러스터 확인\"></a>iv) 클러스터 확인</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107312253-4c8ec200-6ad3-11eb-88a0-7978bd757975.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312253-4c8ec200-6ad3-11eb-88a0-7978bd757975.png\" alt=\"image\"></a></p>\n<h3 id=\"4-EC2-내에서-클러스터-연결-및-설정\"><a href=\"#4-EC2-내에서-클러스터-연결-및-설정\" class=\"headerlink\" title=\"4. EC2 내에서 클러스터 연결 및 설정\"></a>4. EC2 내에서 클러스터 연결 및 설정</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/107312284-5ca6a180-6ad3-11eb-8e9c-ede43d055fcb.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312284-5ca6a180-6ad3-11eb-8e9c-ede43d055fcb.png\" alt=\"image\"></a></p>\n<ul>\n<li><p>인스턴스를 선택하고 Connect하면 웹페이지로 linux서버를 들어갈 수 있는 Terminal이 생긴다.<br><a href=\"https://user-images.githubusercontent.com/56995911/107312307-6c25ea80-6ad3-11eb-9d9e-a04e810fb022.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312307-6c25ea80-6ad3-11eb-9d9e-a04e810fb022.png\" alt=\"image\"></a></p>\n</li>\n<li><p>To install the mongo shell on Amazon Linux</p>\n</li>\n<li><p>1)Create the repository file. At the command line of your EC2 instance, execute the follow command:</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"[mongodb-org-3.6] \\nname=MongoDB Repository\\nbaseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.6/x86_64/\\ngpgcheck=1 \\nenabled=1 \\ngpgkey=https://www.mongodb.org/static/pgp/server-3.6.asc\"</span> | sudo tee /etc/yum.repos.d/mongodb-org-3.6.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"[mongodb-org-4.0] \\nname=MongoDB Repository\\nbaseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/4.0/x86_64/\\ngpgcheck=1 \\nenabled=1 \\ngpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc\"</span> | sudo tee /etc/yum.repos.d/mongodb-org-4.0.repo</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>2)When it is complete, install the mongo shell by executing the following command:</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y mongodb-org-shell</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>3)Download the CA certificate for Amazon DocumentDB</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem</span><br></pre></td></tr></table></figure></div>\n\n\n</li>\n</ul>\n<ul>\n<li>아래 사진의 [Connect to this cluster with the mongo shell] 의 값을 Linux Terminal 환경에서 동작시키면 비밀번호 설정이 나온다<br><a href=\"https://user-images.githubusercontent.com/56995911/107312451-cc1c9100-6ad3-11eb-9781-23f81607c345.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312451-cc1c9100-6ad3-11eb-9781-23f81607c345.png\" alt=\"image\"></a></li>\n<li>사용할 비밀번호를 입력하면  rs0:PRIMARY&gt; 라는Prompt가 나오면서 각종 명령어를 쳐볼 수 있다.</li>\n<li>[Connect to this cluster with an application] 값은 아래 5번에서 사용한다.</li>\n</ul>\n<h3 id=\"5-Studio-3T-에서-사용\"><a href=\"#5-Studio-3T-에서-사용\" class=\"headerlink\" title=\"5. Studio 3T 에서 사용\"></a>5. Studio 3T 에서 사용</h3><ul>\n<li><p>여기서 한참 헤멘거같다.</p>\n</li>\n<li><p>연결이 되지 않으니 EC2인스턴스를 생성했다 지웠다를 반복한듯.<br><a href=\"https://user-images.githubusercontent.com/56995911/107312498-eeaeaa00-6ad3-11eb-8587-ad2874b069a1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312498-eeaeaa00-6ad3-11eb-8587-ad2874b069a1.png\" alt=\"image\"></a></p>\n</li>\n<li><p>메인화면에서 Connect를 누르면 위와 같은 창이 나오는데 [From URI…] 를 선택하고 [Connect to this cluster with an application] 에 나와있는 값에서 비밀번호를 수정하고 확인을 누른다.</p>\n</li>\n<li><p>이후 화면들을 아래와 같이 동일하게 설정해주면 된다.<br><a href=\"https://user-images.githubusercontent.com/56995911/107312526-0128e380-6ad4-11eb-8f6e-be11ad2d7a2e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312526-0128e380-6ad4-11eb-8f6e-be11ad2d7a2e.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/107312540-04bc6a80-6ad4-11eb-8418-997a0a3b1ca2.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312540-04bc6a80-6ad4-11eb-8418-997a0a3b1ca2.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/107312547-0a19b500-6ad4-11eb-8ccc-b3b216131a14.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312547-0a19b500-6ad4-11eb-8ccc-b3b216131a14.png\" alt=\"image\"></a></p>\n</li>\n<li><p>3번째 사진의 값은 아래와 같다<br>1) SSH Address는 1번에서 생성한 EC2의 [Public IPv4 address]<br>2) SSH User name 도 1번에서 생성할 때 사용자 이름으로 넣었던 이름.<br>3) SSH Auth Mode는 EC2생성시 PK생성한 값이 있으므로 Private Key로 설정<br>4) Private Key는 해당 서버 *.pem 파일을 넣음.</p>\n</li>\n</ul>\n<h2 id=\"결론\"><a href=\"#결론\" class=\"headerlink\" title=\"결론\"></a>결론</h2><ul>\n<li>이로써, 구성을 끝냈다.<br><a href=\"https://user-images.githubusercontent.com/56995911/107312613-29184700-6ad4-11eb-9269-0916ed69f9b5.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312613-29184700-6ad4-11eb-9269-0916ed69f9b5.png\" alt=\"image\"></a></li>\n<li>보안적으로 좀 아쉬운 부분은 있지만, 테스트 상으로는 크게 문제가 되지 않을 것으로 보인다.</li>\n</ul>\n<h2 id=\"별첨\"><a href=\"#별첨\" class=\"headerlink\" title=\"별첨\"></a>별첨</h2><h3 id=\"1-Parameter-Group-설정\"><a href=\"#1-Parameter-Group-설정\" class=\"headerlink\" title=\"1.Parameter Group 설정\"></a>1.Parameter Group 설정</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/107312664-44835200-6ad4-11eb-98a6-7a8e5bb20709.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312664-44835200-6ad4-11eb-98a6-7a8e5bb20709.png\" alt=\"image\"></a></p>\n<h4 id=\"1-Create\"><a href=\"#1-Create\" class=\"headerlink\" title=\"1) Create\"></a>1) Create</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107312695-536a0480-6ad4-11eb-934a-8d23d2c4ecca.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312695-536a0480-6ad4-11eb-934a-8d23d2c4ecca.png\" alt=\"image\"></a></p>\n<h4 id=\"2-Setting\"><a href=\"#2-Setting\" class=\"headerlink\" title=\"2) Setting\"></a>2) Setting</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107312715-61b82080-6ad4-11eb-878e-a5bf796b1719.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312715-61b82080-6ad4-11eb-878e-a5bf796b1719.png\" alt=\"image\"></a></p>\n<ul>\n<li>tls와 ttl_monitor를 Disable로 맞춰주어야 한다고 한다.</li>\n<li>이유는 나도 공부를 해서 찾아본 뒤 적도록 하겠다.(암호화 통신을 설정하면 어떻게되지?)</li>\n</ul>\n<h3 id=\"2-관련자료\"><a href=\"#2-관련자료\" class=\"headerlink\" title=\"2. 관련자료\"></a>2. 관련자료</h3><p><a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/connect-ec2.html#connect-ec2.security-group\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/documentdb/latest/developerguide/connect-ec2.html#connect-ec2.security-group</a><br><a href=\"https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/studio3t.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/studio3t.html</a><br><a href=\"https://stackoverflow.com/questions/54384253/aws-documentdb-with-robo-3t-robomongo\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/54384253/aws-documentdb-with-robo-3t-robomongo</a><br><a href=\"https://geekflare.com/nosql-client/\" target=\"_blank\" rel=\"noopener\">https://geekflare.com/nosql-client/</a><br><a href=\"https://aws.amazon.com/ko/blogs/database/part-1-getting-started-with-amazon-documentdb-using-amazon-ec2/\" target=\"_blank\" rel=\"noopener\">https://aws.amazon.com/ko/blogs/database/part-1-getting-started-with-amazon-documentdb-using-amazon-ec2/</a></p>\n","categories":[{"name":"AWS","slug":"AWS","count":2,"path":"api/categories/AWS.json"}],"tags":[{"name":"Document DB","slug":"Document-DB","count":2,"path":"api/tags/Document-DB.json"},{"name":"Mongo","slug":"Mongo","count":2,"path":"api/tags/Mongo.json"}]}