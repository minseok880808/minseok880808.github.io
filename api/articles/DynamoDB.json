{"title":"DynamoDB","slug":"DynamoDB","date":"2020-05-06T02:26:44.000Z","updated":"2020-05-11T01:12:35.496Z","comments":true,"path":"api/articles/DynamoDB.json","photos":[],"link":"","excerpt":"","covers":["https://user-images.githubusercontent.com/62123161/81145311-fd01ef80-8fb0-11ea-9fe7-e2455a219030.png","https://user-images.githubusercontent.com/62123161/81145375-1f940880-8fb1-11ea-927c-1181dffbf9a1.png"],"content":"<h2 id=\"개발환경-구축\"><a href=\"#개발환경-구축\" class=\"headerlink\" title=\"개발환경 구축\"></a>개발환경 구축</h2><p>※ 기본 개발환경</p>\n<ul>\n<li>IntelliJ</li>\n<li>Java, Spring</li>\n<li>AWS Console</li>\n</ul>\n<h2 id=\"DynamoDB-설명\"><a href=\"#DynamoDB-설명\" class=\"headerlink\" title=\"DynamoDB 설명\"></a>DynamoDB 설명</h2><ol>\n<li>다 필요없다. 서버쪽 공부한 사람이라면 No SQL이라는 단어 하나만으로도 설명이 된다.</li>\n<li>RDB보다 아주 상당히 비싸다. 요금 기준이 읽기, 쓰기니까 그냥 한번 Access에도 요금이 발생한다.</li>\n<li>현재는 DynamoDB를 사용하기보다는 RDB를 사용하거나 Kinesis, SQS등 대체자원들을 검토중이다.</li>\n<li>솔직히 NoSQL의 특징을 여기에 쓰기에는 구글에 너무 많고 좋은 내용이 많으니 검색해보기 바란다.(검색의 생활화)</li>\n</ol>\n<h3 id=\"1-테이블-만들기\"><a href=\"#1-테이블-만들기\" class=\"headerlink\" title=\"1) 테이블 만들기\"></a>1) 테이블 만들기</h3><p><a href=\"https://user-images.githubusercontent.com/62123161/81145311-fd01ef80-8fb0-11ea-9fe7-e2455a219030.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81145311-fd01ef80-8fb0-11ea-9fe7-e2455a219030.png\" alt=\"dynamodb_01\"></a></p>\n<ul>\n<li>별내용 없다. Table Name과 PK(PrimaryKey), SK(SortKey)를 지정해주면 된다.</li>\n<li>주의할 점은, Sort키를 잘 지정해야 한다는 것이다. 테이블이 로그성 테이블이 될지, 최신정보를 가질지 여부는 SK에 달려있으며, 조회에도 사용이 된다.(조회를 원활하게 하기 위해서는 SortKey를 지정 안해도된다.)</li>\n</ul>\n<h3 id=\"2-테이블-리스트-화면\"><a href=\"#2-테이블-리스트-화면\" class=\"headerlink\" title=\"2. 테이블 리스트 화면\"></a>2. 테이블 리스트 화면</h3><p><a href=\"https://user-images.githubusercontent.com/62123161/81145375-1f940880-8fb1-11ea-927c-1181dffbf9a1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81145375-1f940880-8fb1-11ea-927c-1181dffbf9a1.png\" alt=\"dynamodb_02\"></a></p>\n<ul>\n<li>테이블 생성은 완료되었으며, 기본 설정 외에 Ondemand 설정, 백업설정, 글로벌테이블, 인덱싱 등 자질구레한 설정들이 있다.</li>\n<li>테이블 성격에 맞게 해당 기능을 설정하면 되고, 기본적으로 Matrix는 제공을 해주니 CloudWatch정도만 추가설정 해주면 Table에 문제가 생겼을 경우 알람을 받을 수 있다.</li>\n</ul>\n<h3 id=\"2-소스\"><a href=\"#2-소스\" class=\"headerlink\" title=\"2) 소스\"></a>2) 소스</h3><h4 id=\"Gradle\"><a href=\"#Gradle\" class=\"headerlink\" title=\"Gradle\"></a>Gradle</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>Dependency</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    implementation <span class=\"string\">'com.amazonaws:aws-lambda-java-core:1.2.0'</span></span><br><span class=\"line\">    implementation <span class=\"string\">'com.amazonaws:aws-lambda-java-events:2.2.6'</span></span><br><span class=\"line\">    compile group: <span class=\"string\">'com.amazonaws'</span>, name: <span class=\"string\">'aws-java-sdk-dynamodb'</span>, version: <span class=\"string\">'1.11.584'</span></span><br><span class=\"line\">    compile group: <span class=\"string\">'org.projectlombok'</span>, name: <span class=\"string\">'lombok'</span>, version: <span class=\"string\">'1.16.20'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"Define\"><a href=\"#Define\" class=\"headerlink\" title=\"Define\"></a>Define</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>기본 Static 설정(사실 Static으로 두지 않아도 된다... 그냥 난 편의상..)</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">static AmazonDynamoDB client = AmazonDynamoDBClientBuilder.standard().withRegion(Regions.US_EAST_1).build();</span><br><span class=\"line\">static DynamoDB dynamoDB = new DynamoDB(client);</span><br><span class=\"line\"> </span><br><span class=\"line\">static String tableName = <span class=\"string\">\"(TABLENAME)\"</span>;</span><br><span class=\"line\">static Map&lt;String, String&gt; mapAttribute = new HashMap&lt;String, String&gt;();</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"GET-Table-Information\"><a href=\"#GET-Table-Information\" class=\"headerlink\" title=\"GET Table Information\"></a>GET Table Information</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>Table 정보 획득</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AmazonDynamoDB client = AmazonDynamoDBClientBuilder.standard().withRegion(Regions.US_EAST_1).build();</span><br><span class=\"line\">DescribeTableRequest request = new DescribeTableRequest().withTableName(tableName);</span><br><span class=\"line\">DescribeTableResult response = client.describeTable(request);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">for</span>(int i= 0; i&lt; response.getTable().getAttributeDefinitions().size();i++)&#123;</span><br><span class=\"line\">    mapAttribute.put(response.getTable().getAttributeDefinitions().get(i).getAttributeName(), response.getTable().getAttributeDefinitions().get(i).getAttributeType());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"Items-Insert\"><a href=\"#Items-Insert\" class=\"headerlink\" title=\"Items Insert\"></a>Items Insert</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>Insert [Table] into (KEY) VALUES (VALUE)</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    private static String createItems(DynamoDB dynamoDB, String tableName, String primaryKey, String primaryValue, String rangeKey, String rangeValue, String createKeyValue) &#123;</span><br><span class=\"line\">        Table table = dynamoDB.getTable(tableName);</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            String[] createArr;</span><br><span class=\"line\">            UpdateItemOutcome outcome=null;</span><br><span class=\"line\">            createArr = createKeyValue.split(<span class=\"string\">\",\"</span>);</span><br><span class=\"line\">            Map&lt;String, AttributeValue&gt; values = new HashMap&lt;String, AttributeValue&gt;();</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">if</span>((createArr.length &amp; 1) == 0) &#123;</span><br><span class=\"line\">                //Even(정상)</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(int i=0; i&lt;createArr.length;i++)&#123;</span><br><span class=\"line\">                    values.put(createArr[i], new AttributeValue().withS(createArr[i+1]));</span><br><span class=\"line\"> </span><br><span class=\"line\">                    i++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                values.put(primaryKey,new AttributeValue().withN(primaryValue));</span><br><span class=\"line\">                values.put(rangeKey, new AttributeValue().withS(rangeValue));</span><br><span class=\"line\"> </span><br><span class=\"line\">                PutItemResult result = client.putItem(new PutItemRequest(tableName, values));</span><br><span class=\"line\">                String str = result.getSdkResponseMetadata().toString();</span><br><span class=\"line\">//                Item item = new Item()</span><br><span class=\"line\">//                        .withPrimaryKey(primaryKey, primaryValue)</span><br><span class=\"line\">//                        .withString(rangeKey, rangeValue);</span><br><span class=\"line\">//</span><br><span class=\"line\">//                table.putItem(item);</span><br><span class=\"line\">                // Confirm</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"Displaying updated item...\"</span>);</span><br><span class=\"line\">                System.out.println(str);</span><br><span class=\"line\">                <span class=\"built_in\">return</span> str;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                //Odd(비정상)</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"UpdateArr Odd...\"</span>);</span><br><span class=\"line\">                <span class=\"built_in\">return</span> <span class=\"string\">\"UpdateArr Odd...\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            System.err.println(<span class=\"string\">\"Cannot create items.\"</span>);</span><br><span class=\"line\">            System.err.println(e.getMessage());</span><br><span class=\"line\">            <span class=\"built_in\">return</span> e.getMessage();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"Items-Update\"><a href=\"#Items-Update\" class=\"headerlink\" title=\"Items Update\"></a>Items Update</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>UPDATE [TABLE] SET (KEY_VALUE)</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//업데이트</span><br><span class=\"line\">private static String updateItem(DynamoDB dynamoDB, String tableName, String primaryKey, String primaryValue, String rangeKey, String rangeValue, String updateKeyValue) &#123;</span><br><span class=\"line\">    Table table = dynamoDB.getTable(tableName);</span><br><span class=\"line\"> </span><br><span class=\"line\">    long time3 = (new Date()).getTime();</span><br><span class=\"line\">    Date date3 = new Date();</span><br><span class=\"line\">    date3.setTime(time3);</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        //2개 이상 업데이트를 진행할 때</span><br><span class=\"line\">        UpdateItemSpec updateItemSpec = new UpdateItemSpec()</span><br><span class=\"line\">                .withPrimaryKey(primaryKey, Integer.parseInt(primaryValue), rangeKey, rangeValue)</span><br><span class=\"line\">                .withReturnValues(ReturnValue.ALL_NEW);</span><br><span class=\"line\">        //split</span><br><span class=\"line\">        String[] updateArr;</span><br><span class=\"line\">        UpdateItemOutcome outcome=null;</span><br><span class=\"line\">        updateArr = updateKeyValue.split(<span class=\"string\">\",\"</span>);</span><br><span class=\"line\">        HashMap&lt;String, String&gt; nameMap = new HashMap&lt;String, String&gt;();</span><br><span class=\"line\">        HashMap&lt;String, Object&gt; valueMap = new HashMap&lt;String, Object&gt;();</span><br><span class=\"line\">        String expressionMessage = <span class=\"string\">\"set \"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((updateArr.length &amp; 1) == 0) &#123;</span><br><span class=\"line\">            //Even(정상)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(int i=0; i&lt;updateArr.length;i++)&#123;</span><br><span class=\"line\">                nameMap.put(<span class=\"string\">\"#\"</span>+updateArr[i], updateArr[i]);</span><br><span class=\"line\">                valueMap.put(<span class=\"string\">\":val\"</span>+updateArr[i],updateArr[i+1]);</span><br><span class=\"line\"> </span><br><span class=\"line\">                expressionMessage += <span class=\"string\">\"#\"</span>+updateArr[i] + <span class=\"string\">\"=\"</span>+<span class=\"string\">\":val\"</span>+updateArr[i];</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(i/2&lt;updateArr.length/2 -1)&#123;</span><br><span class=\"line\">                    expressionMessage += <span class=\"string\">\" , \"</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                i++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            updateItemSpec.withUpdateExpression(expressionMessage)</span><br><span class=\"line\">                        .withNameMap(nameMap)</span><br><span class=\"line\">                        .withValueMap(valueMap);</span><br><span class=\"line\"> </span><br><span class=\"line\">            outcome =  table.updateItem(updateItemSpec);</span><br><span class=\"line\">            // Confirm</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"Displaying updated item...\"</span>);</span><br><span class=\"line\">            System.out.println(outcome.getItem().toJSONPretty());</span><br><span class=\"line\">            <span class=\"built_in\">return</span> outcome.getItem().toJSONPretty();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            //Odd(비정상)</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"UpdateArr Odd...\"</span>);</span><br><span class=\"line\">            <span class=\"built_in\">return</span> <span class=\"string\">\"UpdateArr Odd...\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; catch (Exception e) &#123;</span><br><span class=\"line\">        System.err.println(<span class=\"string\">\"Cannot add an attribute in \"</span> + tableName);</span><br><span class=\"line\">        System.err.println(e.getMessage());</span><br><span class=\"line\">        <span class=\"built_in\">return</span> e.getMessage();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"Items-Select-WHERE\"><a href=\"#Items-Select-WHERE\" class=\"headerlink\" title=\"Items Select(WHERE)\"></a>Items Select(WHERE)</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>SELECT * FROM [TABLE] WHERE <String></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//Select(조건)</span><br><span class=\"line\">private static String selectWhereItem(DynamoDB dynamoDB, String tableName, String primaryKey, String primaryValue, String rangeKey, String rangeValue, String <span class=\"built_in\">where</span>) &#123;</span><br><span class=\"line\">    Table table = dynamoDB.getTable(tableName);</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        Item item = table.getItem(primaryKey,Integer.parseInt(primaryValue),rangeKey,rangeValue,<span class=\"built_in\">where</span>,null);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Displaying retrieved items...\"</span>);</span><br><span class=\"line\">        System.out.println(item.toJSONPretty());</span><br><span class=\"line\">        <span class=\"built_in\">return</span> item.toString();</span><br><span class=\"line\">    &#125; catch (Exception e) &#123;</span><br><span class=\"line\">        System.err.println(<span class=\"string\">\"Cannot retrieve items.\"</span>);</span><br><span class=\"line\">        System.err.println(e.getMessage());</span><br><span class=\"line\">        <span class=\"built_in\">return</span> e.getMessage();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"Items-Select\"><a href=\"#Items-Select\" class=\"headerlink\" title=\"Items Select\"></a>Items Select</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>SELECT * FROM [TABLE] </span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//Select(전체)</span><br><span class=\"line\">private static String selectItem(DynamoDB dynamoDB, String tableName, String primaryKey, String primaryValue, String rangeKey, String rangeValue) &#123;</span><br><span class=\"line\">    Table table = dynamoDB.getTable(tableName);</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        Item item = table.getItem(primaryKey,Integer.parseInt(primaryValue),rangeKey,rangeValue);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Displaying retrieved items...\"</span>);</span><br><span class=\"line\">        System.out.println(item.toJSONPretty());</span><br><span class=\"line\">        <span class=\"built_in\">return</span> item.toString();</span><br><span class=\"line\">    &#125; catch (Exception e) &#123;</span><br><span class=\"line\">        System.err.println(<span class=\"string\">\"Cannot retrieve items.\"</span>);</span><br><span class=\"line\">        System.err.println(e.getMessage());</span><br><span class=\"line\">        <span class=\"built_in\">return</span> e.getMessage();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"Items-Delete-당연히-조건-전체삭제는-테이블-Drop-Create-하는게-훨씬낫다\"><a href=\"#Items-Delete-당연히-조건-전체삭제는-테이블-Drop-Create-하는게-훨씬낫다\" class=\"headerlink\" title=\"Items Delete(당연히 조건- 전체삭제는 테이블 Drop/Create 하는게 훨씬낫다)\"></a>Items Delete(당연히 조건- 전체삭제는 테이블 Drop/Create 하는게 훨씬낫다)</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>DELETE FROM [TABLE] WHERE <String></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//삭제</span><br><span class=\"line\">    public static String deleteItem(DynamoDB dynamoDB, String tableName, String primaryKey, String primaryValue, String rangeKey, String rangeValue) &#123;</span><br><span class=\"line\">        Table table = dynamoDB.getTable(tableName);</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            DeleteItemSpec deleteItemSpec = new DeleteItemSpec()</span><br><span class=\"line\">                    .withPrimaryKey(primaryKey, Integer.parseInt(primaryValue), rangeKey, rangeValue)</span><br><span class=\"line\">//                    .withConditionExpression(<span class=\"string\">\"#ip = :val\"</span>)</span><br><span class=\"line\">//                    .withNameMap(new NameMap().with(<span class=\"string\">\"#ip\"</span>, <span class=\"string\">\"InProduction\"</span>))</span><br><span class=\"line\">//                    .withValueMap(new ValueMap().withBoolean(<span class=\"string\">\":val\"</span>, <span class=\"literal\">false</span>))</span><br><span class=\"line\">                    .withReturnValues(ReturnValue.ALL_OLD);</span><br><span class=\"line\">            DeleteItemOutcome outcome = table.deleteItem(deleteItemSpec);</span><br><span class=\"line\"> </span><br><span class=\"line\">            // Confirm</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"Displaying deleted item...\"</span>);</span><br><span class=\"line\">            System.out.println(outcome.getItem().toJSONPretty());</span><br><span class=\"line\">            <span class=\"built_in\">return</span> outcome.getItem().toJSONPretty();</span><br><span class=\"line\">        &#125; catch (Exception e) &#123;</span><br><span class=\"line\">            System.err.println(<span class=\"string\">\"Cannot delete item in \"</span> + tableName);</span><br><span class=\"line\">            System.err.println(e.getMessage());</span><br><span class=\"line\">            <span class=\"built_in\">return</span> e.getMessage();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"3-결론\"><a href=\"#3-결론\" class=\"headerlink\" title=\"3) 결론\"></a>3) 결론</h3><ul>\n<li>솔직히, 비용만 아니면 이보다 더 좋을수 없다고 느낄정도로 퍼포먼스가 최상이다.</li>\n<li>원가절감을 최우선 과제중 하나로 생각하는 경동에서는 원가절감하자 그냥 ㅡㅡ… 개발자가 고생해서 퍼포먼스를 비슷한 수준까지 끌어올려야지 어떻게하겠나.</li>\n</ul>\n","categories":[{"name":"tip","slug":"tip","count":17,"path":"api/categories/tip.json"}],"tags":[{"name":"AWS","slug":"AWS","count":14,"path":"api/tags/AWS.json"},{"name":"dynamo","slug":"dynamo","count":1,"path":"api/tags/dynamo.json"},{"name":"noSQL","slug":"noSQL","count":1,"path":"api/tags/noSQL.json"}]}