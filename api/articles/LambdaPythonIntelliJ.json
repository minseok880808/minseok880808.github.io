{"title":"Python 개발을 위한 IntelliJ 설정","slug":"LambdaPythonIntelliJ","date":"2020-05-11T05:26:08.000Z","updated":"2020-05-11T07:32:16.664Z","comments":true,"path":"api/articles/LambdaPythonIntelliJ.json","photos":[],"link":"","excerpt":"","covers":["https://user-images.githubusercontent.com/62123161/81527423-2ba70e00-9395-11ea-919a-eb4abd661e5d.png","https://user-images.githubusercontent.com/62123161/81527422-2b0e7780-9395-11ea-9f50-d801c3d11225.png","https://user-images.githubusercontent.com/62123161/81527416-2a75e100-9395-11ea-815d-fabac97f59f4.png","https://user-images.githubusercontent.com/62123161/81527426-2c3fa480-9395-11ea-990d-e56f2c82150d.png","https://user-images.githubusercontent.com/62123161/81527425-2c3fa480-9395-11ea-9063-c2786f3f9c3b.png"],"content":"<h2 id=\"개발환경-구축\"><a href=\"#개발환경-구축\" class=\"headerlink\" title=\"개발환경 구축\"></a>개발환경 구축</h2><p>※ 기본 개발환경</p>\n<ul>\n<li>IntelliJ, Django</li>\n<li>Python</li>\n<li>AWS Console, SAM(Serverless Application Model), RDS(MySQL)</li>\n</ul>\n<h2 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h2><ul>\n<li>파이썬 개발을 진행하고자 하면, 설정이 50%다. </li>\n<li>설정이 꼬여버리면 어떻게든 개발이 진행되지 않으므로, 설정에 유의하자. (돈이 상관없다면 Cloud9을 사용하는 것도 좋다.)</li>\n</ul>\n<h2 id=\"설정\"><a href=\"#설정\" class=\"headerlink\" title=\"설정\"></a>설정</h2><h3 id=\"IntelliJ-설치\"><a href=\"#IntelliJ-설치\" class=\"headerlink\" title=\"IntelliJ 설치\"></a>IntelliJ 설치</h3><ul>\n<li>원하는 버전을 설치해도 상관없겠지만, 1년씩 정기구독하면서 업데이트를 지원받는 IntelliJ IDEA Ultimate 를 사용하려 하였다.</li>\n<li>물론 Visual Studio도 지원을 해준다. 난 개인적으로 IDE는 IntelliJ 를 사용하고자 하였고, 이를 여기에 기록으로 남긴다.<br><a href=\"https://user-images.githubusercontent.com/62123161/81527423-2ba70e00-9395-11ea-919a-eb4abd661e5d.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81527423-2ba70e00-9395-11ea-919a-eb4abd661e5d.png\" alt=\"LambdaPythonIntelliJ_01\"></a><br>IntelliJ에서는 아래와 같은 링크에서 보고 따라하기만 하면된다. Plugin 설치임.<br>(<a href=\"https://whitefrost-developer.tistory.com/7\" target=\"_blank\" rel=\"noopener\">https://whitefrost-developer.tistory.com/7</a>)</li>\n</ul>\n<h3 id=\"Python-설치\"><a href=\"#Python-설치\" class=\"headerlink\" title=\"Python 설치\"></a>Python 설치</h3><ul>\n<li>작성일자까지 확인해본 바로는 현재 Python은 3.8.2버전이 마지막 버전이다. </li>\n<li>설치방법은 아래 참고하자.<ol>\n<li><a href=\"http://www.python.org에서\" target=\"_blank\" rel=\"noopener\">www.python.org에서</a> 다운로드 메뉴 - Python 3.5이상 선택해서 다운로드</li>\n<li>설치 과정에서 Add Python 3.5 to Path 반드시 체크</li>\n<li>설치 확인 윈도우키 + R을 눌러서 나오는 창에 powershell이라고 치고, 확인을 눌러서 powershell실행<br><a href=\"https://user-images.githubusercontent.com/62123161/81527422-2b0e7780-9395-11ea-9f50-d801c3d11225.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81527422-2b0e7780-9395-11ea-9f50-d801c3d11225.png\" alt=\"LambdaPythonIntelliJ_02\"></a></li>\n</ol>\n</li>\n</ul>\n<h3 id=\"SAM-설치\"><a href=\"#SAM-설치\" class=\"headerlink\" title=\"SAM 설치\"></a>SAM 설치</h3><p><a href=\"https://github.com/awslabs/aws-sam-cli/releases\" target=\"_blank\" rel=\"noopener\">https://github.com/awslabs/aws-sam-cli/releases</a></p>\n<h3 id=\"RDS-및-Dynamo-설정\"><a href=\"#RDS-및-Dynamo-설정\" class=\"headerlink\" title=\"RDS 및 Dynamo 설정\"></a>RDS 및 Dynamo 설정</h3><p>MySQL 설정 : <a href=\"https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/CHAP_MySQL.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/CHAP_MySQL.html</a><br>DynamoDB 설정 : <a href=\"https://aws.amazon.com/ko/dynamodb/getting-started/\" target=\"_blank\" rel=\"noopener\">https://aws.amazon.com/ko/dynamodb/getting-started/</a></p>\n<h4 id=\"MySQL-기타설정-Optional\"><a href=\"#MySQL-기타설정-Optional\" class=\"headerlink\" title=\"MySQL 기타설정(Optional)\"></a>MySQL 기타설정(Optional)</h4><ul>\n<li>우선 기본적으로 ap-northeast-2(Seoul)에 설정하면, 당연히 SysDate()나 Now() 함수를 호출하여 현재 한국의 시간을 받아올 수 있을 줄 알았다.</li>\n<li>말도 안되겠지만, 시간을 조회하면 UTC+0이 들어온다. (그리니치 천문대 : 영국)</li>\n<li>그래서 아래와 같은 세팅을 해주어야 한다.<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>Timezone 체크 쿼리(SQL)</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SELECT @@global.time_zone, @@session.time_zone;  --현재 시스템과 세션에 설정된 타임존 보기</span><br><span class=\"line\">SET time_zone = <span class=\"string\">'Asia/Seoul'</span>; --현재 시스템의 타임존 바꿔버리기.</span><br></pre></td></tr></table></figure></div>\n위 내용은 가장 간단해서 쓴거고.. 다른방법도 있다.(어차피 RDS환경에서 다른방법은 답이없을듯.)<br>쓸거면 여기 링크 참고(<a href=\"https://jwkim96.tistory.com/23\" target=\"_blank\" rel=\"noopener\">https://jwkim96.tistory.com/23</a>)</li>\n</ul>\n<h3 id=\"Django-설치-Optional\"><a href=\"#Django-설치-Optional\" class=\"headerlink\" title=\"Django 설치(Optional)\"></a>Django 설치(Optional)</h3><p>공식 Document : <a href=\"https://docs.djangoproject.com/en/3.0/topics/install/\" target=\"_blank\" rel=\"noopener\">https://docs.djangoproject.com/en/3.0/topics/install/</a><br>문서보고 설치하면 된다.</p>\n<h2 id=\"개발\"><a href=\"#개발\" class=\"headerlink\" title=\"개발\"></a>개발</h2><p>모든 설정은 끝났다. 이제 개발만 하면되겟지만, 디버깅 모드에 관해서만 남기고 글을 마무리한다.<br>위 내용 중에 IntelliJ 설정이 완료가 되었다면 아래와 같은 화면을 볼 수 있을 것이다.</p>\n<h3 id=\"IntelliJ-프로젝트-생성\"><a href=\"#IntelliJ-프로젝트-생성\" class=\"headerlink\" title=\"IntelliJ 프로젝트 생성\"></a>IntelliJ 프로젝트 생성</h3><p><a href=\"https://user-images.githubusercontent.com/62123161/81527416-2a75e100-9395-11ea-815d-fabac97f59f4.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81527416-2a75e100-9395-11ea-815d-fabac97f59f4.png\" alt=\"LambdaPythonIntelliJ_03\"></a></p>\n<ol>\n<li>Django를 선택해준다.<ul>\n<li>SQL Support 선택하지 않은 이유 : 보통 우리는 대부분의 서비스를 DB와 같이 쓴다. 하지만, 당장 pymysql만을 사용하겠다라고 하면 체크할 필요는 없을 것으로 판단이 되며,</li>\n<li>필요한 항목이 있을 경우 그때그때 import 해서 쓰면 된다는 생각이 들었기에 따로 체크하지 않는다.(물론 체크해서 사용해도 상관없다. 그냥 프로그램이 조금더 무거워질수도 있겠지..큰차이는 없다)</li>\n</ul>\n</li>\n<li>Next 클릭</li>\n<li>기존의 Flash Project Template가 없을것이다. 그냥 Next.</li>\n<li>프로젝트의 이름과 경로등이 정확히 들어갔는지 확인하고 Finish.</li>\n</ol>\n<h3 id=\"IntelliJ-프로젝트-디버깅\"><a href=\"#IntelliJ-프로젝트-디버깅\" class=\"headerlink\" title=\"IntelliJ 프로젝트 디버깅\"></a>IntelliJ 프로젝트 디버깅</h3><p><img src=\"https://user-images.githubusercontent.com/62123161/81527426-2c3fa480-9395-11ea-990d-e56f2c82150d.png\" alt=\"LambdaPythonIntelliJ_04\"></p>\n<ul>\n<li>이전 과정을 거치고 나면 위와 같은 화면을 마주하게 될 것이다.</li>\n<li>manage.py가 기본 Default main소스라고 보면 된다.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/62123161/81527425-2c3fa480-9395-11ea-9063-c2786f3f9c3b.png\" alt=\"LambdaPythonIntelliJ_05\"></p>\n<ul>\n<li>디버깅이 잘 적용되는걸 볼 수 있다.</li>\n<li>저 os관련된 라이브러리는 크게 필요없으니 지워도된다. 알아서 정리해서 써보시길..</li>\n</ul>\n","categories":[{"name":"tip","slug":"tip","count":19,"path":"api/categories/tip.json"}],"tags":[{"name":"AWS","slug":"AWS","count":14,"path":"api/tags/AWS.json"},{"name":"python","slug":"python","count":2,"path":"api/tags/python.json"},{"name":"IntelliJ","slug":"IntelliJ","count":1,"path":"api/tags/IntelliJ.json"}]}