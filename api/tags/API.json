{"name":"api","slug":"api","count":2,"posts":[{"title":"node.js TypeORM, Sequelize Test","slug":"node-js-TypeORM-Sequelize-Test","date":"2020-11-18T23:32:52.000Z","updated":"2020-11-23T01:29:12.138Z","comments":true,"pin":null,"path":"api/articles/node-js-TypeORM-Sequelize-Test.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/62123161/99920422-c16d1e00-2d66-11eb-8e89-c64081815bfe.png","content":"<h2 id=\"API에서-Sequelize-사용하기\"><a href=\"#API에서-Sequelize-사용하기\" class=\"headerlink\" title=\"API에서 Sequelize 사용하기\"></a>API에서 Sequelize 사용하기</h2><hr>\n<h4 id=\"1-Install\"><a href=\"#1-Install\" class=\"headerlink\" title=\"1. Install\"></a>1. Install</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g --save mysql2</span><br><span class=\"line\"></span><br><span class=\"line\">npm install -g --save sequelize</span><br><span class=\"line\">npm install -g --save sequelize-cli</span><br><span class=\"line\">npm install -g --save sequelize-auto</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"2-Sequelize-설정\"><a href=\"#2-Sequelize-설정\" class=\"headerlink\" title=\"2. Sequelize 설정\"></a>2. Sequelize 설정</h4> <div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sequelize-auto -o [MODEL_PATH] -d [TABLE] -h [DATABASE_ADDRESS] -u [USERID] -x [PASSWORD] -p [DATABASE_PORT] -e [DATABASE_TYPE]</span><br></pre></td></tr></table></figure></div>\n<h5 id=\"1-o-mapper-model\"><a href=\"#1-o-mapper-model\" class=\"headerlink\" title=\"1) -o : mapper model\"></a>1) -o : mapper model</h5><h5 id=\"2-d-table\"><a href=\"#2-d-table\" class=\"headerlink\" title=\"2) -d : table\"></a>2) -d : table</h5><h5 id=\"3-h-database\"><a href=\"#3-h-database\" class=\"headerlink\" title=\"3) -h : database\"></a>3) -h : database</h5><h5 id=\"4-u-userId\"><a href=\"#4-u-userId\" class=\"headerlink\" title=\"4) -u : userId\"></a>4) -u : userId</h5><h5 id=\"5-x-password\"><a href=\"#5-x-password\" class=\"headerlink\" title=\"5) -x : password\"></a>5) -x : password</h5><h5 id=\"6-p-port\"><a href=\"#6-p-port\" class=\"headerlink\" title=\"6) -p : port\"></a>6) -p : port</h5><h5 id=\"7-e-database-type\"><a href=\"#7-e-database-type\" class=\"headerlink\" title=\"7) -e : database type\"></a>7) -e : database type</h5><h4 id=\"3-model-mapper\"><a href=\"#3-model-mapper\" class=\"headerlink\" title=\"3. model mapper\"></a>3. model mapper</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JAVASCRIPT\"><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* jshint indent: 2 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">sequelize, DataTypes</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> sequelize.define(<span class=\"string\">'userInfo'</span>, &#123;</span><br><span class=\"line\">    seq: &#123;</span><br><span class=\"line\">      autoIncrement: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      type: DataTypes.INTEGER(<span class=\"number\">11</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      primaryKey: <span class=\"literal\">true</span></span><br><span class=\"line\">      <span class=\"comment\">/*get() &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        const rawValue = this.getDataValue(seq);</span></span><br><span class=\"line\"><span class=\"comment\">        return rawValue ? rawValue.toUpperCase() : null;</span></span><br><span class=\"line\"><span class=\"comment\">      &#125;*/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    id: &#123;</span><br><span class=\"line\">      type: DataTypes.STRING(<span class=\"number\">30</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    password: &#123;</span><br><span class=\"line\">      type: DataTypes.STRING(<span class=\"number\">100</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    email: &#123;</span><br><span class=\"line\">      type: DataTypes.STRING(<span class=\"number\">50</span>),</span><br><span class=\"line\">      allowNull: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    loginDate: &#123;</span><br><span class=\"line\">      type: DataTypes.DATEONLY,</span><br><span class=\"line\">      allowNull: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    registDate: &#123;</span><br><span class=\"line\">      type: DataTypes.DATEONLY,</span><br><span class=\"line\">      allowNull: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">    sequelize,</span><br><span class=\"line\">    tableName: <span class=\"string\">'userInfo'</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"4-model-index-code\"><a href=\"#4-model-index-code\" class=\"headerlink\" title=\"4. model index code\"></a>4. model index code</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JAVASCRIPT\"><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"comment\">//프로젝트의 파일을 읽기위한 용도</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"comment\">//프로젝트 파일의 경로를 얻기 위한 용도</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> Sequelize = <span class=\"built_in\">require</span>(<span class=\"string\">'sequelize'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> basename = path.basename(__filename);</span><br><span class=\"line\"><span class=\"keyword\">const</span> env = process.env.NODE_ENV;</span><br><span class=\"line\"><span class=\"comment\">//DB 연결정보를 환경변수로 가변설정</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = <span class=\"built_in\">require</span>(__dirname + <span class=\"string\">'/../config/dbConfig.json'</span>)[env];</span><br><span class=\"line\"><span class=\"keyword\">const</span> db = &#123;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// nodejs에서 mysql 접근을 쉽게 할 수 있도록 하는 라이브러리 사용(ORM 맵핑을 위해 사용한 것으로 파악)</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> sequelize = <span class=\"keyword\">new</span> Sequelize(config.database, config.username, config.password, config);</span><br><span class=\"line\"><span class=\"comment\">// <span class=\"doctag\">TODO:</span> 1. 직접 선언형태의 방법을 사용하는 방법.</span></span><br><span class=\"line\">db.userInfo = <span class=\"built_in\">require</span>(<span class=\"string\">'../model/userInfo'</span>)(sequelize, Sequelize);</span><br><span class=\"line\">db.deviceInfo = <span class=\"built_in\">require</span>(<span class=\"string\">'../model/deviceInfo'</span>)(sequelize, Sequelize);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// <span class=\"doctag\">TODO:</span> 2. 자동으로 파일에서 로드하여 필요한 객체를 받아오는 방법.</span></span><br><span class=\"line\"><span class=\"comment\">//https://blog.csdn.net/weixin_34324081/article/details/91445015</span></span><br><span class=\"line\"><span class=\"comment\">//fs를 통해 자동으로 로드되서 실행되고(ORM) 생성된 모델 객체가 db객체 아래에 마운트됨..</span></span><br><span class=\"line\">fs</span><br><span class=\"line\">    .readdirSync(__dirname)</span><br><span class=\"line\">    .filter(<span class=\"function\"><span class=\"params\">file</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (file.indexOf(<span class=\"string\">'.'</span>) !== <span class=\"number\">0</span>) &amp;&amp; (file !== basename) &amp;&amp; (file.slice(<span class=\"number\">-3</span>) === <span class=\"string\">'.js'</span>);</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .forEach(<span class=\"function\"><span class=\"params\">file</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> model = <span class=\"built_in\">require</span>(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);</span><br><span class=\"line\">        db[model.name] = model;</span><br><span class=\"line\">        <span class=\"comment\">//console.log(model.name);</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.keys(db).forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">modelName</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (db[modelName].associate) &#123;</span><br><span class=\"line\">        db[modelName].associate(db);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">db.sequelize = sequelize;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = db;</span><br></pre></td></tr></table></figure></div>\n\n<h2 id=\"API에서-TypeORM-사용하기\"><a href=\"#API에서-TypeORM-사용하기\" class=\"headerlink\" title=\"API에서 TypeORM 사용하기\"></a>API에서 TypeORM 사용하기</h2><h4 id=\"1-Install-1\"><a href=\"#1-Install-1\" class=\"headerlink\" title=\"1. Install\"></a>1. Install</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save @nestjs/typeorm</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"2-TypeORM-Repository-활용\"><a href=\"#2-TypeORM-Repository-활용\" class=\"headerlink\" title=\"2. TypeORM.Repository 활용\"></a>2. TypeORM.Repository 활용</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JAVASCRIPT\"><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Repository, EntityRepository &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"typeorm\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; User &#125; <span class=\"keyword\">from</span> <span class=\"string\">'../user/entities/user.entity'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@EntityRepository(User)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserRepository</span> <span class=\"keyword\">extends</span> <span class=\"title\">Repository</span>&lt;<span class=\"title\">User</span>&gt;</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"3-model-mapper-1\"><a href=\"#3-model-mapper-1\" class=\"headerlink\" title=\"3. model mapper\"></a>3. model mapper</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JAVASCRIPT\"><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Entity, Column, PrimaryColumn &#125; <span class=\"keyword\">from</span> <span class=\"string\">'typeorm'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapping &#125; <span class=\"keyword\">from</span> <span class=\"string\">'auto-mapping'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">@Entity(<span class=\"string\">'TBL_USERsss'</span>, &#123; <span class=\"attr\">synchronize</span>: <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">  @PrimaryColumn(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'user_id'</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  id: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'user_pwd'</span>, <span class=\"attr\">length</span>: <span class=\"number\">128</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  password: string;</span><br><span class=\"line\">  <span class=\"comment\">//@ForeignKey(() =&gt; Profile)</span></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'usergroup_id'</span>, <span class=\"attr\">default</span>: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"number\">1</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">Number</span> &#125;)</span><br><span class=\"line\">  userGroupId: number;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'user_status'</span>, <span class=\"attr\">length</span>: <span class=\"number\">1</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  userStatus: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'user_name'</span>, <span class=\"attr\">length</span>: <span class=\"number\">50</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  name: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'user_mobileno'</span>, <span class=\"attr\">length</span>: <span class=\"number\">13</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  mobile: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'user_email'</span>, <span class=\"attr\">length</span>: <span class=\"number\">50</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  email: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'user_birthday'</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  birthday: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'mobile_model'</span>, <span class=\"attr\">length</span>: <span class=\"number\">30</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  mobileModel: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'os_type'</span>, <span class=\"attr\">length</span>: <span class=\"number\">1</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  os: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'os_ver'</span>, <span class=\"attr\">length</span>: <span class=\"number\">30</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  osVer: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'app_ver'</span>, <span class=\"attr\">length</span>: <span class=\"number\">8</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  appVer: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'user_logindt'</span>, <span class=\"attr\">default</span>: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"string\">`now()`</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">Date</span> &#125;)</span><br><span class=\"line\">  loginDate: <span class=\"built_in\">Date</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'user_loginip'</span>, <span class=\"attr\">length</span>: <span class=\"number\">45</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  loginIp: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'insert_dt'</span>, <span class=\"attr\">default</span>: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"string\">`now()`</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">Date</span> &#125;)</span><br><span class=\"line\">  insertDate: <span class=\"built_in\">Date</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123;<span class=\"attr\">name</span>:<span class=\"string\">'insert_ip'</span>, <span class=\"attr\">length</span>: <span class=\"number\">45</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span>&#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  insertIp: string;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123; <span class=\"attr\">name</span>: <span class=\"string\">'update_dt'</span>, <span class=\"attr\">default</span>: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"string\">`now()`</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">Date</span> &#125;)</span><br><span class=\"line\">  updateDate: <span class=\"built_in\">Date</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Column(&#123; <span class=\"attr\">name</span>: <span class=\"string\">'update_ip'</span>, <span class=\"attr\">length</span>: <span class=\"number\">45</span>, <span class=\"attr\">nullable</span>: <span class=\"literal\">false</span> &#125;)</span><br><span class=\"line\">  @mapping(&#123; <span class=\"attr\">type</span>: <span class=\"built_in\">String</span> &#125;)</span><br><span class=\"line\">  updateIp: string;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"4-Type-ORM-Method\"><a href=\"#4-Type-ORM-Method\" class=\"headerlink\" title=\"4. Type ORM Method\"></a>4. Type ORM Method</h4><p><a href=\"https://velog.io/@josworks27/typeORM-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" target=\"_blank\" rel=\"noopener\">https://velog.io/@josworks27/typeORM-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0</a></p>\n<ul>\n<li>save, findone등 여러 method들이 있다. 활용하면 간단한 SQL은 충분히 날려볼 수 있다.</li>\n</ul>\n<h2 id=\"성능비교\"><a href=\"#성능비교\" class=\"headerlink\" title=\"성능비교\"></a>성능비교</h2><p><a href=\"https://user-images.githubusercontent.com/62123161/99920422-c16d1e00-2d66-11eb-8e89-c64081815bfe.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/99920422-c16d1e00-2d66-11eb-8e89-c64081815bfe.png\" alt=\"image\"></a></p>\n<ul>\n<li>너무 차이가 나기에 편리함vs성능 둘 중 어느 것을 택할지는 비지니스 성격에 맞춰야 할 것으로 보임.</li>\n</ul>\n","text":"API에서 Sequelize 사용하기1. Install1<br>2<br>3<br>4<br>5<br>npm install -g --save mysql2<br><br>npm install -g --save sequelize<br>npm install -g","link":"","raw":null,"photos":[],"categories":[{"name":"nodejs","slug":"nodejs","count":3,"path":"api/categories/nodejs.json"}],"tags":[{"name":"node","slug":"node","count":3,"path":"api/tags/node.json"},{"name":"api","slug":"api","count":2,"path":"api/tags/api.json"},{"name":"ORM","slug":"ORM","count":1,"path":"api/tags/ORM.json"},{"name":"sequelize","slug":"sequelize","count":1,"path":"api/tags/sequelize.json"}]},{"title":"nest.js API Template","slug":"nest-js-API-Template","date":"2020-11-20T07:04:10.000Z","updated":"2020-11-23T01:31:25.294Z","comments":true,"pin":null,"path":"api/articles/nest-js-API-Template.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/62123161/99770052-9dcd8c00-2b4a-11eb-9beb-f6922414758d.png","content":"<h2 id=\"API-Template-구조도\"><a href=\"#API-Template-구조도\" class=\"headerlink\" title=\"API Template 구조도\"></a>API Template 구조도</h2><p><a href=\"https://user-images.githubusercontent.com/62123161/99770052-9dcd8c00-2b4a-11eb-9beb-f6922414758d.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/99770052-9dcd8c00-2b4a-11eb-9beb-f6922414758d.png\" alt=\"image\"></a></p>\n<h2 id=\"Tree\"><a href=\"#Tree\" class=\"headerlink\" title=\"Tree\"></a>Tree</h2><p>project/<br>　　└─ src<br>　　　　├─ config<br>　　　　│　　├─ constant<br>　　　　│　　│　　├─ config<br>　　　　│　　│　　├─ implement<br>　　　　│　　│　　└─ interface<br>　　　　│　　├─ database<br>　　　　│　　│　　├─ config<br>　　　　│　　│　　├─ implement<br>　　　　│　　│　　├─ interface<br>　　　　│　　│　　├─ module<br>　　　　│　　│　　└─ pool<br>　　　　│　　├─ smtp<br>　　　　│　　│　　├─ config<br>　　　　│　　│　　├─ implement<br>　　　　│　　│　　└─ interface<br>　　　　│　　index.config.ts<br>　　　　├─ device<br>　　　　│　　├─ controller<br>　　　　│　　├─ module<br>　　　　│　　└─ service<br>　　　　├─ interceptors<br>　　　　│　　└─ basic.interceptor<br>　　　　├─ mappers<br>　　　　│　　├─ client.xml<br>　　　　│　　├─ code.xml<br>　　　　│　　├─ device.setting.xml<br>　　　　│　　├─ device.xml<br>　　　　│　　├─ email.xml<br>　　　　│　　├─ otp.xml<br>　　　　│　　├─ term.xml<br>　　　　│　　├─ user.dormancy.xml<br>　　　　│　　└─ user.xml<br>　　　　├─ packets<br>　　　　│　　├─ request<br>　　　　│　　│　　├─ login.user<br>　　　　│　　│　　├─ join.user<br>　　　　│　　│　　└─ …<br>　　　　│　　├─ response<br>　　　　│　　│　　├─ common.response.code.json<br>　　　　│　　│　　├─ common.response.code<br>　　　　│　　│　　└─ common.response<br>　　　　│　　└─ validator<br>　　　　│　　　　　├─ login.user.validation<br>　　　　│　　　　　├─ join.user.validation<br>　　　　│　　　　　└─ …<br>　　　　├─ public<br>　　　　│　　├─ confirm_member_account_mail.html<br>　　　　│　　├─ find_member_account_mail.html<br>　　　　│　　├─ find_member_password_mail.html<br>　　　　│　　└─ navien.png<br>　　　　├─ smtp<br>　　　　│　　└─ email.service<br>　　　　├─ user<br>　　　　│　　├─ controller<br>　　　　│　　├─ module<br>　　　　│　　└─ service<br>　　　　├─ utilities<br>　　　　│　　├─ common.util<br>　　　　│　　├─ crypto.util<br>　　　　│　　└─ database.util<br>　　　　├─ validate<br>　　　　│　　├─ module<br>　　　　│　　└─ service<br>　　　app.module<br>　　　main</p>\n<h4 id=\"Node-js를-도입함에-있어-당장-언어에-대해-공부하기보다는-기존-객체지향에-친숙한-언어를-써서-접근하길-원했음\"><a href=\"#Node-js를-도입함에-있어-당장-언어에-대해-공부하기보다는-기존-객체지향에-친숙한-언어를-써서-접근하길-원했음\" class=\"headerlink\" title=\"Node.js를 도입함에 있어 당장 언어에 대해 공부하기보다는 기존 객체지향에 친숙한 언어를 써서 접근하길 원했음.\"></a>Node.js를 도입함에 있어 당장 언어에 대해 공부하기보다는 기존 객체지향에 친숙한 언어를 써서 접근하길 원했음.</h4><h4 id=\"이에-필요한-템플릿을-찾기-시작했고-Nest-js를-발견하게-되었음\"><a href=\"#이에-필요한-템플릿을-찾기-시작했고-Nest-js를-발견하게-되었음\" class=\"headerlink\" title=\"이에 필요한 템플릿을 찾기 시작했고, Nest.js를 발견하게 되었음.\"></a>이에 필요한 템플릿을 찾기 시작했고, Nest.js를 발견하게 되었음.</h4><h4 id=\"annotation도-유사하게-활용이-가능하며-언어-스타일이-Java와-매우-비슷함\"><a href=\"#annotation도-유사하게-활용이-가능하며-언어-스타일이-Java와-매우-비슷함\" class=\"headerlink\" title=\"annotation도 유사하게 활용이 가능하며, 언어 스타일이 Java와 매우 비슷함.\"></a>annotation도 유사하게 활용이 가능하며, 언어 스타일이 Java와 매우 비슷함.</h4><hr>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JAVASCRIPT\"><figure class=\"iseeu highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;Injectable&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"@nestjs/common\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;ConstantImplement&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"./constant.implement\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;Env&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"../index.config\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author                  <span class=\"variable\">jms</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@since                   </span>2020-10-29</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description             </span>공통설정 환경별 분기</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">@Injectable()</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConstantConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  public constConfig() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> (Env) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">'local'</span>:</span><br><span class=\"line\">        result = ConstantImplement.local;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">'dev'</span>:</span><br><span class=\"line\">        result = ConstantImplement.dev;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"string\">'prod'</span>:</span><br><span class=\"line\">        result = ConstantImplement.prod;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        result = ConstantImplement.dev;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"위-bash처럼-만들어주면-Nest-js가-내용을-그대로-node-js-형태로-만들어줌\"><a href=\"#위-bash처럼-만들어주면-Nest-js가-내용을-그대로-node-js-형태로-만들어줌\" class=\"headerlink\" title=\"위 bash처럼 만들어주면, Nest.js가 내용을 그대로 node.js 형태로 만들어줌.\"></a>위 bash처럼 만들어주면, Nest.js가 내용을 그대로 node.js 형태로 만들어줌.</h4><h4 id=\"nest형태로-서버에-올리기-싫다면-dist폴더로-추출된-Export-파일들을-그대로-서버로-올려주면-된다\"><a href=\"#nest형태로-서버에-올리기-싫다면-dist폴더로-추출된-Export-파일들을-그대로-서버로-올려주면-된다\" class=\"headerlink\" title=\"nest형태로 서버에 올리기 싫다면, dist폴더로 추출된 Export 파일들을 그대로 서버로 올려주면 된다.\"></a>nest형태로 서버에 올리기 싫다면, dist폴더로 추출된 Export 파일들을 그대로 서버로 올려주면 된다.</h4><h4 id=\"개인적으로-언어의-장벽이-높다고-판단이-되거나-신규-언어에-대한-학습-시간이-없을-경우-빠르게-생산할-경우에-대해-nest는-좋은-선택지가-될-수-있다고-봄\"><a href=\"#개인적으로-언어의-장벽이-높다고-판단이-되거나-신규-언어에-대한-학습-시간이-없을-경우-빠르게-생산할-경우에-대해-nest는-좋은-선택지가-될-수-있다고-봄\" class=\"headerlink\" title=\"개인적으로 언어의 장벽이 높다고 판단이 되거나, 신규 언어에 대한 학습 시간이 없을 경우, 빠르게 생산할 경우에 대해 nest는 좋은 선택지가 될 수 있다고 봄.\"></a>개인적으로 언어의 장벽이 높다고 판단이 되거나, 신규 언어에 대한 학습 시간이 없을 경우, 빠르게 생산할 경우에 대해 nest는 좋은 선택지가 될 수 있다고 봄.</h4><hr>\n<h3 id=\"주요-기능\"><a href=\"#주요-기능\" class=\"headerlink\" title=\"주요 기능\"></a>주요 기능</h3><h4 id=\"1-사용자\"><a href=\"#1-사용자\" class=\"headerlink\" title=\"1. 사용자\"></a>1. 사용자</h4><h5 id=\"1-회원가입\"><a href=\"#1-회원가입\" class=\"headerlink\" title=\"　　1) 회원가입\"></a>　　1) 회원가입</h5><h5 id=\"2-로그인\"><a href=\"#2-로그인\" class=\"headerlink\" title=\"　　2) 로그인\"></a>　　2) 로그인</h5><h5 id=\"3-이메일-인증\"><a href=\"#3-이메일-인증\" class=\"headerlink\" title=\"　　3) 이메일 인증\"></a>　　3) 이메일 인증</h5><h5 id=\"4-인증정보-갱신\"><a href=\"#4-인증정보-갱신\" class=\"headerlink\" title=\"　　4) 인증정보 갱신\"></a>　　4) 인증정보 갱신</h5><h5 id=\"5-회원탈퇴\"><a href=\"#5-회원탈퇴\" class=\"headerlink\" title=\"　　5) 회원탈퇴\"></a>　　5) 회원탈퇴</h5><h5 id=\"6-사용자-정보-복구-휴면\"><a href=\"#6-사용자-정보-복구-휴면\" class=\"headerlink\" title=\"　　6) 사용자 정보 복구(휴면)\"></a>　　6) 사용자 정보 복구(휴면)</h5><h5 id=\"7-사용자-정보-조회\"><a href=\"#7-사용자-정보-조회\" class=\"headerlink\" title=\"　　7) 사용자 정보 조회\"></a>　　7) 사용자 정보 조회</h5><h5 id=\"8-사용자-정보-변경\"><a href=\"#8-사용자-정보-변경\" class=\"headerlink\" title=\"　　8) 사용자 정보 변경\"></a>　　8) 사용자 정보 변경</h5><h5 id=\"9-로그인-ID-찾기\"><a href=\"#9-로그인-ID-찾기\" class=\"headerlink\" title=\"　　9) 로그인 ID 찾기\"></a>　　9) 로그인 ID 찾기</h5><h5 id=\"10-사용자-비밀번호-초기화-찾기\"><a href=\"#10-사용자-비밀번호-초기화-찾기\" class=\"headerlink\" title=\"　　10) 사용자 비밀번호 초기화(찾기)\"></a>　　10) 사용자 비밀번호 초기화(찾기)</h5><h5 id=\"11-이용약관-동의\"><a href=\"#11-이용약관-동의\" class=\"headerlink\" title=\"　　11) 이용약관 동의\"></a>　　11) 이용약관 동의</h5><hr>\n<h4 id=\"2-디바이스\"><a href=\"#2-디바이스\" class=\"headerlink\" title=\"2. 디바이스\"></a>2. 디바이스</h4><h5 id=\"1-디바이스-리스트\"><a href=\"#1-디바이스-리스트\" class=\"headerlink\" title=\"　　1) 디바이스 리스트\"></a>　　1) 디바이스 리스트</h5><h5 id=\"2-디바이스-이름-수정\"><a href=\"#2-디바이스-이름-수정\" class=\"headerlink\" title=\"　　2) 디바이스 이름 수정\"></a>　　2) 디바이스 이름 수정</h5><h5 id=\"3-디바이스-푸시-설정정보-조회\"><a href=\"#3-디바이스-푸시-설정정보-조회\" class=\"headerlink\" title=\"　　3) 디바이스 푸시 설정정보 조회\"></a>　　3) 디바이스 푸시 설정정보 조회</h5><h5 id=\"4-디바이스-푸시-설정정보-변경\"><a href=\"#4-디바이스-푸시-설정정보-변경\" class=\"headerlink\" title=\"　　4) 디바이스 푸시 설정정보 변경\"></a>　　4) 디바이스 푸시 설정정보 변경</h5><h5 id=\"5-디바이스-등록\"><a href=\"#5-디바이스-등록\" class=\"headerlink\" title=\"　　5) 디바이스 등록\"></a>　　5) 디바이스 등록</h5><h5 id=\"6-디바이스-삭제\"><a href=\"#6-디바이스-삭제\" class=\"headerlink\" title=\"　　6) 디바이스 삭제\"></a>　　6) 디바이스 삭제</h5><hr>\n<h3 id=\"사용-Library\"><a href=\"#사용-Library\" class=\"headerlink\" title=\"사용 Library\"></a>사용 Library</h3><h5 id=\"1-로그-nest-winston\"><a href=\"#1-로그-nest-winston\" class=\"headerlink\" title=\"　　1) 로그 : nest-winston\"></a>　　1) 로그 : nest-winston</h5><h5 id=\"2-AWS-aws-sdk\"><a href=\"#2-AWS-aws-sdk\" class=\"headerlink\" title=\"　　2) AWS : aws-sdk\"></a>　　2) AWS : aws-sdk</h5><h5 id=\"3-parameter-검증-joi\"><a href=\"#3-parameter-검증-joi\" class=\"headerlink\" title=\"　　3) parameter 검증 : joi\"></a>　　3) parameter 검증 : joi</h5><h5 id=\"4-단방향Hash-bcryptjs\"><a href=\"#4-단방향Hash-bcryptjs\" class=\"headerlink\" title=\"　　4) 단방향Hash : bcryptjs\"></a>　　4) 단방향Hash : bcryptjs</h5><h5 id=\"5-시간-moment\"><a href=\"#5-시간-moment\" class=\"headerlink\" title=\"　　5) 시간 : moment\"></a>　　5) 시간 : moment</h5><h5 id=\"6-JWT-Token-jsonwebtoken\"><a href=\"#6-JWT-Token-jsonwebtoken\" class=\"headerlink\" title=\"　　6) JWT Token : jsonwebtoken\"></a>　　6) JWT Token : jsonwebtoken</h5><h5 id=\"7-이메일-발송-nestjs-modules-mailer\"><a href=\"#7-이메일-발송-nestjs-modules-mailer\" class=\"headerlink\" title=\"　　7) 이메일 발송 : @nestjs-modules/mailer\"></a>　　7) 이메일 발송 : @nestjs-modules/mailer</h5><h5 id=\"8-양방향-암호화-AES256-crypto\"><a href=\"#8-양방향-암호화-AES256-crypto\" class=\"headerlink\" title=\"　　8) 양방향 암호화 AES256 : crypto\"></a>　　8) 양방향 암호화 AES256 : crypto</h5><h5 id=\"9-Database-pool-mysql2\"><a href=\"#9-Database-pool-mysql2\" class=\"headerlink\" title=\"　　9) Database pool : mysql2\"></a>　　9) Database pool : mysql2</h5><h5 id=\"10-Database-mapper-mybatis-mapper\"><a href=\"#10-Database-mapper-mybatis-mapper\" class=\"headerlink\" title=\"　　10) Database mapper : mybatis-mapper\"></a>　　10) Database mapper : mybatis-mapper</h5><h5 id=\"11-파일시스템-fs\"><a href=\"#11-파일시스템-fs\" class=\"headerlink\" title=\"　　11) 파일시스템 : fs\"></a>　　11) 파일시스템 : fs</h5><h5 id=\"12-임의String생성-rand-token\"><a href=\"#12-임의String생성-rand-token\" class=\"headerlink\" title=\"　　12) 임의String생성 : rand-token\"></a>　　12) 임의String생성 : rand-token</h5><hr>\n<h5 id=\"결국은-2주만에-모든-기능을-만들었다-솔직히-Nest를-활용했기-때문에-빠르게-끝냈을-것으로-보이며-순수-Node-js를-사용했다면-최소-1달-이상은-걸렸을-것이라고-확신한다\"><a href=\"#결국은-2주만에-모든-기능을-만들었다-솔직히-Nest를-활용했기-때문에-빠르게-끝냈을-것으로-보이며-순수-Node-js를-사용했다면-최소-1달-이상은-걸렸을-것이라고-확신한다\" class=\"headerlink\" title=\"결국은 2주만에 모든 기능을 만들었다. 솔직히 Nest를 활용했기 때문에 빠르게 끝냈을 것으로 보이며, 순수 Node.js를 사용했다면 최소 1달 이상은 걸렸을 것이라고 확신한다.\"></a>결국은 2주만에 모든 기능을 만들었다. 솔직히 Nest를 활용했기 때문에 빠르게 끝냈을 것으로 보이며, 순수 Node.js를 사용했다면 최소 1달 이상은 걸렸을 것이라고 확신한다.</h5><h5 id=\"앱과-디바이스쪽-테스트에서도-좋은-성능을-기대한다\"><a href=\"#앱과-디바이스쪽-테스트에서도-좋은-성능을-기대한다\" class=\"headerlink\" title=\"앱과 디바이스쪽 테스트에서도 좋은 성능을 기대한다.\"></a>앱과 디바이스쪽 테스트에서도 좋은 성능을 기대한다.</h5>","text":"API Template 구조도 [Figure] 위 bash처럼 만들어주면, Nest.js가 내용을 그대로 node.js 형태로 만들어줌.nest형태로 서버에 올리기 싫다면, dist폴더로 추출된 Export 파일들을 그대로 서버로 올려주면 된다.개인적","link":"","raw":null,"photos":[],"categories":[{"name":"nodejs","slug":"nodejs","count":3,"path":"api/categories/nodejs.json"}],"tags":[{"name":"node","slug":"node","count":3,"path":"api/tags/node.json"},{"name":"api","slug":"api","count":2,"path":"api/tags/api.json"},{"name":"template","slug":"template","count":1,"path":"api/tags/template.json"}]}]}\">\"fcstTime\"</span>).asText().equals(currHour) &amp;&amp; weatherJson.get(<span class=\"string\">\"category\"</span>).asText().equals(<span class=\"string\">\"REH\"</span>))&#123;</span><br><span class=\"line\">                        REH=(weatherJson.get(<span class=\"string\">\"fcstValue\"</span>).asText());</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    //동서바람성분</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(weatherJson.get(<span class=\"string\">\"fcstTime\"</span>).asText().equals(currHour) &amp;&amp; weatherJson.get(<span class=\"string\">\"category\"</span>).asText().equals(<span class=\"string\">\"UUU\"</span>))&#123;</span><br><span class=\"line\">                        UUU=(weatherJson.get(<span class=\"string\">\"fcstValue\"</span>).asText());</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    //남북바람성분</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(weatherJson.get(<span class=\"string\">\"fcstTime\"</span>).asText().equals(currHour) &amp;&amp; weatherJson.get(<span class=\"string\">\"category\"</span>).asText().equals(<span class=\"string\">\"VVV\"</span>))&#123;</span><br><span class=\"line\">                        VVV=(weatherJson.get(<span class=\"string\">\"fcstValue\"</span>).asText());</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    //풍향</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(weatherJson.get(<span class=\"string\">\"fcstTime\"</span>).asText().equals(currHour) &amp;&amp; weatherJson.get(<span class=\"string\">\"category\"</span>).asText().equals(<span class=\"string\">\"VEC\"</span>))&#123;</span><br><span class=\"line\">                        VEC=(weatherJson.get(<span class=\"string\">\"fcstValue\"</span>).asText());</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    //풍속</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(weatherJson.get(<span class=\"string\">\"fcstTime\"</span>).asText().equals(currHour) &amp;&amp; weatherJson.get(<span class=\"string\">\"category\"</span>).asText().equals(<span class=\"string\">\"WSD\"</span>))&#123;</span><br><span class=\"line\">                        WSD=(weatherJson.get(<span class=\"string\">\"fcstValue\"</span>).asText());</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                //TODO 7.1 WeatherStatusDay 테이블 채워줄 값</span><br><span class=\"line\">                NewWeatherStatusDay newWeatherStatusDay = new NewWeatherStatusDay();</span><br><span class=\"line\">                newWeatherStatusDay.setRegionCode(region.getRegionCode());</span><br><span class=\"line\">                newWeatherStatusDay.setState(region.getState());</span><br><span class=\"line\">                newWeatherStatusDay.setCity(region.getCity());</span><br><span class=\"line\">                newWeatherStatusDay.setDong(region.getDong());</span><br><span class=\"line\">                newWeatherStatusDay.setT1H(T1H);</span><br><span class=\"line\">                newWeatherStatusDay.setRN1(RN1);</span><br><span class=\"line\">                newWeatherStatusDay.setSKY(SKY);</span><br><span class=\"line\">                newWeatherStatusDay.setUUU(UUU);</span><br><span class=\"line\">                newWeatherStatusDay.setVVV(VVV);</span><br><span class=\"line\">                newWeatherStatusDay.setREH(REH);</span><br><span class=\"line\">                newWeatherStatusDay.setPTY(PTY);</span><br><span class=\"line\">                newWeatherStatusDay.setLGT(LGT);</span><br><span class=\"line\">                newWeatherStatusDay.setVEC(VEC);</span><br><span class=\"line\">                newWeatherStatusDay.setWSD(WSD);</span><br><span class=\"line\">                newWeatherStatusDay.setUpdateTime(currDate);</span><br><span class=\"line\"></span><br><span class=\"line\">                //TODO 7.2 WeatherStatusLog 테이블 채워줄 값</span><br><span class=\"line\">                NewWeatherStatusLog newWeatherStatusLog = new NewWeatherStatusLog();</span><br><span class=\"line\">                newWeatherStatusLog.setRegionCode(region.getRegionCode());</span><br><span class=\"line\">                newWeatherStatusLog.setState(region.getState());</span><br><span class=\"line\">                newWeatherStatusLog.setCity(region.getCity());</span><br><span class=\"line\">                newWeatherStatusLog.setDong(region.getDong());</span><br><span class=\"line\">                newWeatherStatusLog.setT1H(T1H);</span><br><span class=\"line\">                newWeatherStatusLog.setRN1(RN1);</span><br><span class=\"line\">                newWeatherStatusLog.setSKY(SKY);</span><br><span class=\"line\">                newWeatherStatusLog.setUUU(UUU);</span><br><span class=\"line\">                newWeatherStatusLog.setVVV(VVV);</span><br><span class=\"line\">                newWeatherStatusLog.setREH(REH);</span><br><span class=\"line\">                newWeatherStatusLog.setPTY(PTY);</span><br><span class=\"line\">                newWeatherStatusLog.setLGT(LGT);</span><br><span class=\"line\">                newWeatherStatusLog.setVEC(VEC);</span><br><span class=\"line\">                newWeatherStatusLog.setWSD(WSD);</span><br><span class=\"line\">                newWeatherStatusLog.setRegTime(currDate);</span><br><span class=\"line\"></span><br><span class=\"line\">                //TODO 7.3 전송!</span><br><span class=\"line\">                newWeatherStatusDayRepository.save(newWeatherStatusDay);</span><br><span class=\"line\">                newWeatherStatusLogRepository.save(newWeatherStatusLog);</span><br><span class=\"line\"></span><br><span class=\"line\">                //TODO 8. Thread Sleep;</span><br><span class=\"line\">                Thread.sleep(10);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"Error : \"</span>+resultCode.asText());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; catch (Exception e)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"StackTrace : \"</span>+e.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//    @Scheduled(cron = <span class=\"string\">\"* * * * * *\"</span>) //https://javafactory.tistory.com/1386 //디버깅용...바로시작</span><br><span class=\"line\">    @Scheduled(cron = <span class=\"string\">\"0 5 20 * * *\"</span>) //https://javafactory.tistory.com/1386 //매일 오후 8시 5분 0초에 시작함.</span><br><span class=\"line\">    public void <span class=\"function\"><span class=\"title\">yDayBatch</span></span>()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        //TODO 1. 정의된 지역정보 모두 받아오기.</span><br><span class=\"line\">        List&lt;NewWeatherRegionCode&gt; newWeatherRegionCodeList = newWeatherRegionCodeRepository.findAll();</span><br><span class=\"line\">        //TODO 2. 지역정보 3700개 중에서 구단위만 Sorting 하여 따로 저장.</span><br><span class=\"line\">        List&lt;NewWeatherRegionCode&gt; newWeatherRegionCodeList_gu = newWeatherRegionCodeList.stream()</span><br><span class=\"line\">                .filter(newWeatherRegionCode -&gt; StringUtils.isEmpty(newWeatherRegionCode.getDong()))</span><br><span class=\"line\">                .filter(newWeatherRegionCode -&gt; !StringUtils.isEmpty(newWeatherRegionCode.getCity()))</span><br><span class=\"line\">                .filter(newWeatherRegionCode -&gt; newWeatherRegionCode.getRegionCode()&gt;=20000) //구 Kweather 지역은 제외(총 250개)</span><br><span class=\"line\">                .collect(Collectors.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">        //TODO 3. 어느 Region에 설치하든 한국시간을 따라가게 만들려고..(RDS는 이상하게 시스템 시간이 GMT+00:00을 기본값으로 갖고있음.)</span><br><span class=\"line\">        ZonedDateTime nowSeoul = ZonedDateTime.now(ZoneId.of(<span class=\"string\">\"Asia/Seoul\"</span>));</span><br><span class=\"line\">        Date currDate = new Date();</span><br><span class=\"line\"></span><br><span class=\"line\">        //TODO 9. WeatherStatusYDay 테이블 채우기(먼저 이전 시간대 데이터 갖고오기)</span><br><span class=\"line\">        //TODO 9.1 조회하려는 Region의 리스트 받아오기.</span><br><span class=\"line\">        List&lt;Integer&gt; regionList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(NewWeatherRegionCode region : newWeatherRegionCodeList_gu)&#123;</span><br><span class=\"line\">            regionList.add(region.getRegionCode());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        //초기화</span><br><span class=\"line\">        newWeatherStatusYDayRepository.deleteAll();</span><br><span class=\"line\">        long currentDateTime = System.currentTimeMillis();</span><br><span class=\"line\">        long before30MinuteDateTime = currentDateTime - Day - 30*Minute; //TODO 여기에 Day추가해야함.-&gt;완료.</span><br><span class=\"line\">        long before90MinuteDateTime = currentDateTime - Day - 90*Minute; //(현시간) - (하루) - (30분 or 90분)</span><br><span class=\"line\"></span><br><span class=\"line\">        //로그테이블에서 1일전 데이터 찾기</span><br><span class=\"line\">        List&lt;NewWeatherStatusLog&gt; newWeatherStatusLogList = newWeatherStatusLogRepository.findAll();</span><br><span class=\"line\">        List&lt;NewWeatherStatusLog&gt; oldDataList = newWeatherStatusLogList.stream()</span><br><span class=\"line\">//                .filter(newWeatherStatusLog -&gt; newWeatherStatusLog.getRegionCode().equals(<span class=\"built_in\">integer</span>))</span><br><span class=\"line\">                //러프하게 30~90분 이전의 데이터를 검색함.(만약, 없으면 어떻게하지? 이전리스트 전부받아서 가장 최근걸로 해야되나?)</span><br><span class=\"line\">                .filter(newWeatherStatusLog -&gt; newWeatherStatusLog.getRegTime().getTime() &lt;= before30MinuteDateTime &amp;&amp; newWeatherStatusLog.getRegTime().getTime() &gt; before90MinuteDateTime)</span><br><span class=\"line\">                .sorted((o1, o2) -&gt; o2.getRegTime().compareTo(o1.getRegTime())) //order by desc(내림차순)</span><br><span class=\"line\">//                .<span class=\"built_in\">limit</span>(1) //Top N</span><br><span class=\"line\">                .collect(Collectors.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">        //최신테이블에서 현재 데이터 찾기</span><br><span class=\"line\">        List&lt;NewWeatherStatusDay&gt; newWeatherStatusDayList = newWeatherStatusDayRepository.findAll();</span><br><span class=\"line\">        List&lt;NewWeatherStatusDay&gt; newDataList = newWeatherStatusDayList.stream()</span><br><span class=\"line\">//                .filter(NewWeatherStatusDay -&gt; NewWeatherStatusDay.getRegionCode().equals(<span class=\"built_in\">integer</span>))</span><br><span class=\"line\">//                .<span class=\"built_in\">limit</span>(1) //Top N</span><br><span class=\"line\">                .collect(Collectors.toList());</span><br><span class=\"line\">        //TODO 9.2 Region으로 WeatherStatusLog 테이블에서 데이터 추출(가장최근 30분~90분사이에 있는 데이터 중 가장 최근 것 1개만)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(Integer <span class=\"built_in\">integer</span> : regionList)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            //TODO 9.3 newWeatherStatusLogList1에서 받은 데이터 중 온도(T1H)와 현재 가진데이터 비교</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(oldDataList.size() &gt; 0 &amp;&amp; newDataList.size() &gt; 0)&#123;</span><br><span class=\"line\">                // oldDataList에서 지역코드로 값 검색</span><br><span class=\"line\">                List&lt;NewWeatherStatusLog&gt; oldList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(int i = 0; i &lt; oldDataList.size(); i++)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(oldDataList.get(i).getRegionCode().equals(<span class=\"built_in\">integer</span>))&#123;</span><br><span class=\"line\">                        oldList.add(oldDataList.get(i));</span><br><span class=\"line\">                        <span class=\"built_in\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                // newDataList에서 지역코드로 값 검색</span><br><span class=\"line\">                List&lt;NewWeatherStatusDay&gt; newList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(int i = 0; i &lt; newDataList.size(); i++)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(newDataList.get(i).getRegionCode().equals(<span class=\"built_in\">integer</span>))&#123;</span><br><span class=\"line\">                        newList.add(newDataList.get(i));</span><br><span class=\"line\">                        <span class=\"built_in\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                String bf_T1H = oldList.get(0).getT1H(); //과거데이터</span><br><span class=\"line\">                String nw_T1H = newList.get(0).getT1H(); //최근데이터</span><br><span class=\"line\">                int differnce = (Integer.parseInt(bf_T1H) - Integer.parseInt(nw_T1H)); // +4 이상이면 푸시발송해야함.(푸시는 아직 구현안됨)</span><br><span class=\"line\"></span><br><span class=\"line\">                NewWeatherStatusYDay newWeatherStatusYDay = new NewWeatherStatusYDay();</span><br><span class=\"line\">                newWeatherStatusYDay.setRegionCode(<span class=\"built_in\">integer</span>);</span><br><span class=\"line\">                newWeatherStatusYDay.setState(oldList.get(0).getState());</span><br><span class=\"line\">                newWeatherStatusYDay.setCity(oldList.get(0).getCity());</span><br><span class=\"line\">                newWeatherStatusYDay.setDong(oldList.get(0).getDong());</span><br><span class=\"line\">                newWeatherStatusYDay.setTodayTemp(nw_T1H);</span><br><span class=\"line\">                newWeatherStatusYDay.setYesterdayTemp(bf_T1H);</span><br><span class=\"line\">                newWeatherStatusYDay.setDifference(Integer.toString(differnce));</span><br><span class=\"line\">                newWeatherStatusYDay.setUpdateTime(currDate);</span><br><span class=\"line\"></span><br><span class=\"line\">                //TODO 9.4 WeatherStatusYDay 전송</span><br><span class=\"line\">                newWeatherStatusYDayRepository.save(newWeatherStatusYDay);</span><br><span class=\"line\"></span><br><span class=\"line\">                //TODO 9.5 푸시발송--&gt; 현재는 구현하려면 핑거푸시를 뚫어야한다.(최신대 차장님꺼 쓸거 아니라면..)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Scheduled(cron = <span class=\"string\">\"* 30 2 * * *\"</span>) //https://javafactory.tistory.com/1386 //매일 새벽 2시 30분 90일이상 된 자료 지움.</span><br><span class=\"line\">    public void <span class=\"function\"><span class=\"title\">deleteThreeMonthExpireData</span></span>()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        //3달전의 연월일시분초 -&gt; Millisecond(Unix time)</span><br><span class=\"line\">        Calendar calendar = Calendar.getInstance(new SimpleTimeZone(0x1ee6280, <span class=\"string\">\"KST\"</span>));</span><br><span class=\"line\">//        calendar.set(Calendar.HOUR_OF_DAY, 13);</span><br><span class=\"line\">//        calendar.set(Calendar.MINUTE, 10);</span><br><span class=\"line\">//        calendar.set(Calendar.SECOND, 0);</span><br><span class=\"line\">        calendar.add(Calendar.DATE, -90);</span><br><span class=\"line\">        long calenderMillis = calendar.getTimeInMillis();</span><br><span class=\"line\"></span><br><span class=\"line\">        //TODO 1. 삭제대상 조회</span><br><span class=\"line\">        List&lt;NewWeatherStatusLog&gt; newWeatherStatusLogList = newWeatherStatusLogRepository.findAll().stream()</span><br><span class=\"line\">                .filter(newWeatherStatusLog -&gt; newWeatherStatusLog.getRegTime().getTime() &lt;= calenderMillis)</span><br><span class=\"line\">                .filter(newWeatherRegionCode -&gt; newWeatherRegionCode.getRegionCode()&lt;=20000) //구 Kweather 지역은 제외(총 250개)</span><br><span class=\"line\">                .collect(Collectors.toList());</span><br><span class=\"line\"></span><br><span class=\"line\">        newWeatherStatusLogRepository.deleteAll(newWeatherStatusLogList);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"Java-Spring-Boot-API용\"><a href=\"#Java-Spring-Boot-API용\" class=\"headerlink\" title=\"Java(Spring Boot) API용\"></a>Java(Spring Boot) API용</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Autowired</span><br><span class=\"line\">    private NewWeatherRegionCodeService newWeatherRegionCodeService;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private NewWeatherStatusDayService newWeatherStatusDayService;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private NewWeatherStatusLogService newWeatherStatusLogService;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private NewWeatherVersionService newWeatherVersionService;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 지역 정보 조회</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @<span class=\"built_in\">return</span></span><br><span class=\"line\">     */</span><br><span class=\"line\">    public Response <span class=\"function\"><span class=\"title\">requestRegionCode</span></span>() &#123;</span><br><span class=\"line\">        List&lt;NewWeatherRegionCode&gt; newWeatherRegionCodeList = newWeatherRegionCodeService.findAllWeatherRegionCode();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newWeatherRegionCodeList.size() == 0) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">return</span> ErrorCode.getErrorResponse(ErrorCode.COMMON_NO_DATA);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Response response = SuccessCode.getSuccessResponse();</span><br><span class=\"line\">        ResRegionCode resRegionCode = new ResRegionCode();</span><br><span class=\"line\">        NewWeatherVersionEntity newWeatherVersionEntity = newWeatherVersionService.findNewWeatherVersion();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newWeatherVersionEntity != null) &#123;</span><br><span class=\"line\">            resRegionCode.setVersion(newWeatherVersionEntity.getServiceVersion());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        // state 별 그룹핑</span><br><span class=\"line\">        Map&lt;String, List&lt;NewWeatherRegionCity&gt;&gt; map = newWeatherRegionCodeList</span><br><span class=\"line\">                .stream()</span><br><span class=\"line\">                .collect(Collectors.groupingBy(</span><br><span class=\"line\">                        newWeatherRegionCode -&gt; newWeatherRegionCode.getState(),</span><br><span class=\"line\">                        LinkedHashMap::new,</span><br><span class=\"line\">                        Collectors.mapping(newWeatherRegionCode -&gt; &#123;</span><br><span class=\"line\">                                    NewWeatherRegionCity regionCity = new NewWeatherRegionCity();</span><br><span class=\"line\">                                    regionCity.setCity(newWeatherRegionCode.getCity());</span><br><span class=\"line\">                                    regionCity.setRegionCode(newWeatherRegionCode.getRegionCode());</span><br><span class=\"line\">                                    regionCity.setNx(newWeatherRegionCode.getNx());</span><br><span class=\"line\">                                    regionCity.setNy(newWeatherRegionCode.getNy());</span><br><span class=\"line\">                                    <span class=\"built_in\">return</span> regionCity;</span><br><span class=\"line\">                                &#125;,</span><br><span class=\"line\">                                Collectors.toList())));</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;NewWeatherRegionState&gt; newWeatherRegionStateList = new ArrayList&lt;&gt;();</span><br><span class=\"line\">        NewWeatherRegionState newWeatherRegionState;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String key : map.keySet()) &#123;</span><br><span class=\"line\">            newWeatherRegionState = new NewWeatherRegionState();</span><br><span class=\"line\">            newWeatherRegionState.setState(key);</span><br><span class=\"line\">            newWeatherRegionState.setCities(map.get(key));</span><br><span class=\"line\">            newWeatherRegionStateList.add(newWeatherRegionState);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        resRegionCode.setRegionCodeList(newWeatherRegionStateList);</span><br><span class=\"line\">        response.setData(resRegionCode);</span><br><span class=\"line\">        <span class=\"built_in\">return</span> response;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 코드로 기상 정보 조회</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param regionCode</span><br><span class=\"line\">     * @<span class=\"built_in\">return</span></span><br><span class=\"line\">     */</span><br><span class=\"line\">    public Response requestInfoByCode(Integer regionCode) &#123;</span><br><span class=\"line\">        NewWeatherStatusDay newWeatherStatusDay = newWeatherStatusDayService.findWeatherStatusDayById(regionCode);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newWeatherStatusDay == null) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">return</span> ErrorCode.getErrorResponse(ErrorCode.COMMON_NO_DATA);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Response response = SuccessCode.getSuccessResponse();</span><br><span class=\"line\">        ResWeatherInfo resWeatherInfo = new ResWeatherInfo();</span><br><span class=\"line\">        resWeatherInfo.setWeatherInfo(newWeatherStatusDay);</span><br><span class=\"line\">        response.setData(resWeatherInfo);</span><br><span class=\"line\">        <span class=\"built_in\">return</span> response;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 지역 이름으로 기상 정보 조회</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param state</span><br><span class=\"line\">     * @param city</span><br><span class=\"line\">     * @<span class=\"built_in\">return</span></span><br><span class=\"line\">     */</span><br><span class=\"line\">    public Response requestInfoByStateAndCity(String state, String city) &#123;</span><br><span class=\"line\">        // 충북, 충남, 전북, 전남, 경북, 경남 예외처리</span><br><span class=\"line\">        String fState = BusinessLogicUtils.shortNameOfStateToFullName(state);</span><br><span class=\"line\">        NewWeatherStatusDay newWeatherStatusDay = newWeatherStatusDayService.findWeatherStatusDayByStateAndCity(</span><br><span class=\"line\">                fState, city);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newWeatherStatusDay == null) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">return</span> ErrorCode.getErrorResponse(ErrorCode.COMMON_NO_DATA);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Response response = SuccessCode.getSuccessResponse();</span><br><span class=\"line\">        ResWeatherInfo resWeatherInfo = new ResWeatherInfo();</span><br><span class=\"line\">        resWeatherInfo.setWeatherInfo(newWeatherStatusDay);</span><br><span class=\"line\">        response.setData(resWeatherInfo);</span><br><span class=\"line\">        <span class=\"built_in\">return</span> response;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 기상 정보 이력 조회</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param reqWeatherHistory</span><br><span class=\"line\">     * @<span class=\"built_in\">return</span></span><br><span class=\"line\">     */</span><br><span class=\"line\">    public Response <span class=\"built_in\">history</span>(ReqWeatherHistory reqWeatherHistory) &#123;</span><br><span class=\"line\">        List&lt;NewWeatherStatusLog&gt; newWeatherStatusLogList = newWeatherStatusLogService.findAllWeatherStatus(</span><br><span class=\"line\">                reqWeatherHistory.getRegionCode(), reqWeatherHistory.getStartMillis(), reqWeatherHistory.getEndMillis());</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newWeatherStatusLogList.size() == 0) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">return</span> ErrorCode.getErrorResponse(ErrorCode.COMMON_NO_DATA);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Response response = SuccessCode.getSuccessResponse();</span><br><span class=\"line\">        response.setData(newWeatherStatusLogList);</span><br><span class=\"line\">        <span class=\"built_in\">return</span> response;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n\n\n<h3 id=\"기상청-Database-DDL\"><a href=\"#기상청-Database-DDL\" class=\"headerlink\" title=\"기상청 Database DDL\"></a>기상청 Database DDL</h3><ol>\n<li><p>Create Database</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*-------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">Create Database</span><br><span class=\"line\">-------------------------------------------------------------------------------------------------------------------------------------------------------*/</span><br><span class=\"line\">-- CREATE SCHEMA `WEATHER` DEFAULT CHARACTER SET utf8mb4 ;</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>Create Table</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*-------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">Set Using Schema</span><br><span class=\"line\">-------------------------------------------------------------------------------------------------------------------------------------------------------*/</span><br><span class=\"line\">USE WEATHER;</span><br><span class=\"line\"> </span><br><span class=\"line\">/*-------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">Drop Table</span><br><span class=\"line\">-------------------------------------------------------------------------------------------------------------------------------------------------------*/</span><br><span class=\"line\">DROP TABLE IF EXISTS `KMA_WEATHER_STATUS_DAY`;</span><br><span class=\"line\">DROP TABLE IF EXISTS `KMA_WEATHER_STATUS_YDAY`;</span><br><span class=\"line\">DROP TABLE IF EXISTS `KMA_WEATHER_STATUS_LOG`;</span><br><span class=\"line\">DROP TABLE IF EXISTS `WEATHER_VERSION`;</span><br><span class=\"line\">DROP TABLE IF EXISTS `KMA_WEATHER_REGION_CD`;</span><br><span class=\"line\"> </span><br><span class=\"line\">DROP TABLE IF EXISTS `APP_UPDATE`;</span><br><span class=\"line\">DROP TABLE IF EXISTS `APP_DOCUMENTS`;</span><br><span class=\"line\">DROP TABLE IF EXISTS `SERVER_MAINTENANCE`;</span><br><span class=\"line\"> </span><br><span class=\"line\">/*-------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">Create Table</span><br><span class=\"line\">-------------------------------------------------------------------------------------------------------------------------------------------------------*/</span><br><span class=\"line\">CREATE TABLE `KMA_WEATHER_REGION_CD` (</span><br><span class=\"line\">    `REGION_CODE`   int(11) NOT NULL,</span><br><span class=\"line\">    `STATE` varchar(20) NOT NULL,</span><br><span class=\"line\">    `CITY`  varchar(20) NOT NULL,</span><br><span class=\"line\">    `DONG`  varchar(20) NULL,</span><br><span class=\"line\">    `NX`    smallint(4) NOT NULL,</span><br><span class=\"line\">    `NY`    smallint(4) NOT NULL,</span><br><span class=\"line\">    `REGISTER_AT`   timestamp(3)    NOT NULL,</span><br><span class=\"line\">    `LAST_MODIFY_AT`    timestamp(3)    NOT NULL    DEFAULT CURRENT_TIMESTAMP(3)</span><br><span class=\"line\">) default charset=utf8mb4 collate=utf8mb4_general_ci;</span><br><span class=\"line\"> </span><br><span class=\"line\">CREATE TABLE `KMA_WEATHER_STATUS_DAY` (</span><br><span class=\"line\">    `REGION_CODE`   int(11) NOT NULL,</span><br><span class=\"line\">    `STATE` varchar(20) NOT NULL,</span><br><span class=\"line\">    `CITY`  varchar(20) NOT NULL,</span><br><span class=\"line\">    `DONG`  varchar(20) NOT NULL,</span><br><span class=\"line\">    `T1H`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `RN1`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `SKY`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `UUU`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `VVV`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `REH`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `PTY`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `LGT`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `VEC`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `WSD`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `REGISTER_AT`   timestamp(3)    NOT NULL,</span><br><span class=\"line\">    `LAST_MODIFY_AT`    timestamp(3)    NOT NULL    DEFAULT CURRENT_TIMESTAMP(3)</span><br><span class=\"line\">) default charset=utf8mb4 collate=utf8mb4_general_ci;</span><br><span class=\"line\"> </span><br><span class=\"line\">CREATE TABLE `KMA_WEATHER_STATUS_YDAY` (</span><br><span class=\"line\">    `REGION_CODE`   int(11) NOT NULL,</span><br><span class=\"line\">    `STATE` varchar(20) NOT NULL,</span><br><span class=\"line\">    `CITY`  varchar(20) NOT NULL,</span><br><span class=\"line\">    `DONG`  varchar(20) NOT NULL,</span><br><span class=\"line\">    `TODAY_TEMP`    decimal(3,1)    NULL,</span><br><span class=\"line\">    `YESTERDAY_TEMP`    decimal(3,1)    NULL,</span><br><span class=\"line\">    `TEMP_DIFF` decimal(3,1)    NULL,</span><br><span class=\"line\">    `REGISTER_AT`   timestamp(3)    NOT NULL,</span><br><span class=\"line\">    `LAST_MODIFY_AT`    timestamp(3)    NOT NULL    DEFAULT CURRENT_TIMESTAMP(3)</span><br><span class=\"line\">) default charset=utf8mb4 collate=utf8mb4_general_ci;</span><br><span class=\"line\"> </span><br><span class=\"line\">CREATE TABLE `WEATHER_VERSION` (</span><br><span class=\"line\">    `SERVICE_SEQ`   int(11) NOT NULL auto_increment COMMENT <span class=\"string\">'Auto Increment'</span>,</span><br><span class=\"line\">    `SERVICE_NAME`  varchar(100)    NULL,</span><br><span class=\"line\">    `SERVICE_VERSION`   varchar(100)    NULL,</span><br><span class=\"line\">    `DESCRIPTION`   varchar(100)    NULL,</span><br><span class=\"line\">    `REGISTER_AT`   timestamp(3)    NOT NULL,</span><br><span class=\"line\">    `LAST_MODIFY_AT`    timestamp(3)    NOT NULL    DEFAULT CURRENT_TIMESTAMP(3),</span><br><span class=\"line\">     CONSTRAINT `PK_WEATHER_VERSION` PRIMARY KEY (`SERVICE_SEQ`)</span><br><span class=\"line\">) default charset=utf8mb4 collate=utf8mb4_general_ci;</span><br><span class=\"line\"> </span><br><span class=\"line\">CREATE TABLE `KMA_WEATHER_STATUS_LOG` (</span><br><span class=\"line\">    `REGISTER_AT`   timestamp(3)    NOT NULL,</span><br><span class=\"line\">    `REGION_CODE`   int(11) NOT NULL,</span><br><span class=\"line\">    `STATE` varchar(20) NOT NULL,</span><br><span class=\"line\">    `CITY`  varchar(20) NOT NULL,</span><br><span class=\"line\">    `DONG`  varchar(20) NOT NULL,</span><br><span class=\"line\">    `T1H`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `RN1`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `SKY`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `UUU`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `VVV`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `REH`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `PTY`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `LGT`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `VEC`   varchar(10) NOT NULL,</span><br><span class=\"line\">    `WSD`   varchar(10) NOT NULL</span><br><span class=\"line\">) default charset=utf8mb4 collate=utf8mb4_general_ci;</span><br><span class=\"line\"> </span><br><span class=\"line\">CREATE TABLE `APP_UPDATE` (</span><br><span class=\"line\">    `APP_TARGET`    varchar(100)    NOT NULL,</span><br><span class=\"line\">    `APP_OS_TYPE`   tinyint(1)  NOT NULL,</span><br><span class=\"line\">    `APP_VERSION`   varchar(100)    NOT NULL,</span><br><span class=\"line\">    `FORCE_UPDATE`  tinyint(1)  NOT NULL,</span><br><span class=\"line\">    `REGISTER_AT`   timestamp(3)    NOT NULL,</span><br><span class=\"line\">    `LAST_MODIFY_AT`    timestamp(3)    NOT NULL    DEFAULT CURRENT_TIMESTAMP(3)</span><br><span class=\"line\">) default charset=utf8mb4 collate=utf8mb4_general_ci;</span><br><span class=\"line\"> </span><br><span class=\"line\">CREATE TABLE `APP_DOCUMENTS` (</span><br><span class=\"line\">    `SERVICE_CODE`  int(11) NOT NULL,</span><br><span class=\"line\">    `DOC_TYPE`  varchar(1)  NOT NULL    COMMENT <span class=\"string\">'문서 구분(P:개인정보취급방침, T:이용약관)'</span>,</span><br><span class=\"line\">    `REGISTER_AT`   timestamp(3)    NOT NULL,</span><br><span class=\"line\">    `DOC_TITLE` varchar(100)    NOT NULL,</span><br><span class=\"line\">    `DOC_CONTENTS`  text    NOT NULL    COMMENT <span class=\"string\">'앱에 표시'</span>,</span><br><span class=\"line\">    `LAST_MODIFY_AT`    timestamp(3)    NOT NULL    DEFAULT CURRENT_TIMESTAMP(3)</span><br><span class=\"line\">) default charset=utf8mb4 collate=utf8mb4_general_ci;</span><br><span class=\"line\"> </span><br><span class=\"line\">CREATE TABLE `SERVER_MAINTENANCE` (</span><br><span class=\"line\">    `SM_SEQ`    int(11) NOT NULL  auto_increment    COMMENT <span class=\"string\">'Auto Increment'</span>,</span><br><span class=\"line\">    `SM_YN` tinyint(1)  NOT NULL,</span><br><span class=\"line\">    `SM_TITLE`  varchar(100)    NULL,</span><br><span class=\"line\">    `SM_MSG`    varchar(100)    NULL,</span><br><span class=\"line\">    `SM_PERIOD` varchar(100)    NULL,</span><br><span class=\"line\">    `REGISTER_AT`   timestamp(3)    NOT NULL,</span><br><span class=\"line\">    `LAST_MODIFY_AT`    timestamp(3)    NOT NULL    DEFAULT CURRENT_TIMESTAMP(3),</span><br><span class=\"line\">    CONSTRAINT `PK_SERVER_MAINTENANCE` PRIMARY KEY (`SM_SEQ`)</span><br><span class=\"line\">) default charset=utf8mb4 collate=utf8mb4_general_ci;</span><br></pre></td></tr></table></figure></div></li>\n</ol>\n","text":"2016년 C#에 이어 Python으로 개발을 진행했었다.<br>특별한 시나리오는 없다.AWS Cloudwatch의 CRON 설정을 통해 매 시간 전국의 날씨 상황정보를 받아옴.DataBase에 저장API를 통하여 날씨 정보를 제공(추후) TAC 청정","link":"","raw":null,"photos":[],"categories":[{"name":"tip","slug":"tip","count":4,"path":"api/categories/tip.json"}],"tags":[{"name":"기상청","slug":"기상청","count":1,"path":"api/tags/기상청.json"},{"name":"Weather","slug":"Weather","count":1,"path":"api/tags/Weather.json"},{"name":"API","slug":"API","count":1,"path":"api/tags/API.json"}]}]}