{"name":"ECS","slug":"ECS","count":3,"posts":[{"title":"ECS","slug":"ECS","date":"2021-03-01T01:32:32.000Z","updated":"2021-03-26T02:45:30.947Z","comments":true,"pin":null,"path":"api/articles/ECS.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/56995911/108791589-c68a7500-75c2-11eb-895d-07dc43f35c83.png","content":"<h3 id=\"ECSElastic-Container-Service란\"><a href=\"#ECSElastic-Container-Service란\" class=\"headerlink\" title=\"ECSElastic Container Service란 ?\"></a>ECS<sup>Elastic Container Service</sup>란 ?</h3><ul>\n<li>도커<sup>Docker</sup>는 응용프로그램들을 소프트웨어 컨테이너안에 배치시키고 이를 신속하게 구축, 테스트, 배포 가능한 소프트웨어 플랫폼</li>\n<li>컨테이너 가상화에 기반한 서비스</li>\n<li>엘라스틱 컨테이너 서비스<sup>Elastic Container Service</sup> 는 이런 Docker컨테이너를 관리해주는 오케스트레이션 도구.</li>\n<li>비슷한 오케스트레이션 도구로는 도커에서 만든 스웜<sup>Swarm</sup>, 구글<sup>Google</sup>의 노하우가 담겨있는 쿠버네티스<sup>Kubernetes</sup>, 하시코프의 노마드<sup>Nomad</sup> 등이 있음.</li>\n<li>Fargate 시작유형 / EC2 시작유형 으로 분리되어 있음.</li>\n</ul>\n<h3 id=\"ECSElastic-Container-Service사용시-이점\"><a href=\"#ECSElastic-Container-Service사용시-이점\" class=\"headerlink\" title=\"ECSElastic Container Service사용시 이점 ?\"></a>ECS<sup>Elastic Container Service</sup>사용시 이점 ?</h3><ul>\n<li>간단한 API 호출을 사용하여 컨테이너 기반 애플리케이션을 시작 및 중지할 수 있다.</li>\n<li>중앙 집중식 서비스를 사용하여 클러스터 상태를 확인할 수 있다</li>\n<li>다수의 친숙한 EC2 기능에 액세스할 수 있다.</li>\n<li>일관된 배포 및 구축 환경을 생성하고, 배치 및 ETL(Extract-Transform-Load) 워크로드를 관리 및 크기 조정하고, 마이크로 서비스 모델에 정교한 애플리케이션 아키텍처를 구축할 수 있다.</li>\n</ul>\n<h3 id=\"클러스터Cluster와-클러스터-인스턴스Cluster-Instance\"><a href=\"#클러스터Cluster와-클러스터-인스턴스Cluster-Instance\" class=\"headerlink\" title=\"클러스터Cluster와 클러스터 인스턴스Cluster Instance\"></a>클러스터<sup>Cluster</sup>와 클러스터 인스턴스<sup>Cluster Instance</sup></h3><p><a href=\"https://user-images.githubusercontent.com/56995911/108791589-c68a7500-75c2-11eb-895d-07dc43f35c83.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/108791589-c68a7500-75c2-11eb-895d-07dc43f35c83.png\" alt=\"image\"></a></p>\n<h4 id=\"클러스터Cluster\"><a href=\"#클러스터Cluster\" class=\"headerlink\" title=\"클러스터Cluster\"></a>클러스터<sup>Cluster</sup></h4><ul>\n<li>ECS의 가장 기본 단위는 Cluster</li>\n<li>도커 컨테이너를 실행할 수 있는 가상의 공간</li>\n<li>EC2와 다른점은 컴퓨팅자원을 기본적으로 갖고있지 않다는 것.</li>\n<li>A라는 기능(프로젝트)을 수행하는 컨테이너들은 A클러스트 내에서만 동작하고, B프로젝트 컨테이너들은 B클러스터 내에서만 동작하는 방식.</li>\n</ul>\n<h4 id=\"클러스터-인스턴스Cluster-Instance\"><a href=\"#클러스터-인스턴스Cluster-Instance\" class=\"headerlink\" title=\"클러스터 인스턴스Cluster Instance\"></a>클러스터 인스턴스<sup>Cluster Instance</sup></h4><ul>\n<li>클러스터에 연결된 EC2인스턴스</li>\n<li>EC2의 ecs-client라는 서비스를 활용해 특정 Cluster로 연결이 가능함.</li>\n<li>ecs-client는 컨테이너 인스턴스의 자원을 모니터링, 관리 등 적절하게 실행하는 역할을 해줌.</li>\n</ul>\n<h3 id=\"태스크Task와-태스크-디피니션Task-definition\"><a href=\"#태스크Task와-태스크-디피니션Task-definition\" class=\"headerlink\" title=\"태스크Task와 태스크 디피니션Task definition\"></a>태스크<sup>Task</sup>와 태스크 디피니션<sup>Task definition</sup></h3><p><a href=\"https://user-images.githubusercontent.com/56995911/108791719-1c5f1d00-75c3-11eb-9b0c-721c0dedccf1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/108791719-1c5f1d00-75c3-11eb-9b0c-721c0dedccf1.png\" alt=\"image\"></a></p>\n<h4 id=\"태스크Task\"><a href=\"#태스크Task\" class=\"headerlink\" title=\"태스크Task\"></a>태스크<sup>Task</sup></h4><ul>\n<li>ECS에서 컨테이너를 실행하는 최소단위.</li>\n<li>컨테이너가 2개이상 모였을때 태스크로 구성가능함.</li>\n<li>같은 태스크 내에 있는 컨테이너들은 모두 같은 컨테이너 인스턴스에서 실행되는것이 보장됨.</li>\n</ul>\n<h4 id=\"태스크-디피니션Task-definition\"><a href=\"#태스크-디피니션Task-definition\" class=\"headerlink\" title=\"태스크 디피니션Task definition\"></a>태스크 디피니션<sup>Task definition</sup></h4><ul>\n<li>컨테이너 네트워크모드, 테스크 Role, 도커이미지, 실행명령어, CPU제한, 메모리 제한 등의 설정을 해주는 태스크관리 역할을 함.</li>\n<li>매번 설정을 해주기 번거로우니 미리 설정의 집합을 하나의 단위로 정의해놓고 사용.</li>\n<li>Task는 클러스터에 종속적이지만, Task Definition(리비전)은 클러스터에 종속되지 않음.<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"family\"</span>: <span class=\"string\">\"webserver\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"containerDefinitions\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"string\">\"name\"</span>: <span class=\"string\">\"web\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"image\"</span>: <span class=\"string\">\"nginx\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"memory\"</span>: <span class=\"string\">\"100\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"cpu\"</span>: <span class=\"string\">\"99\"</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">\"requiresCompatibilities\"</span>: [</span><br><span class=\"line\">        <span class=\"string\">\"FARGATE\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">\"networkMode\"</span>: <span class=\"string\">\"awsvpc\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"memory\"</span>: <span class=\"string\">\"512\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"cpu\"</span>: <span class=\"string\">\"256\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n</li>\n</ul>\n<h3 id=\"서비스Service\"><a href=\"#서비스Service\" class=\"headerlink\" title=\"서비스Service\"></a>서비스<sup>Service</sup></h3><p><a href=\"https://user-images.githubusercontent.com/56995911/108792157-fab26580-75c3-11eb-9946-8ca66a93547c.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/108792157-fab26580-75c3-11eb-9946-8ca66a93547c.png\" alt=\"image\"></a></p>\n<ol>\n<li>Task Definition을 사용하여 1회성으로 실행하는 방법.<br>1) 한번 실행되고 종료되며, 데몬위에서 프로세스로 돌아가는 상황에서 종료 스크립트가 없으면 컨테이너가 남아있을 수 있음.<br>2) 특수한 경우가 아니면 사용되지 않음.</li>\n<li>서비스를 정의하는 방법<br>1) 리플리카 타입</li>\n</ol>\n<ul>\n<li>테스크의 갯수를 지정해주면 자동으로 실행되도록 관리해줌.</li>\n<li>웹서버들에서 사용됨.<br>2) 데몬 타입</li>\n<li>모든 컨테이너 인스턴스에 해당 테스크가 하나씩 실행됨.</li>\n</ul>\n<h3 id=\"엘라스틱-컨테이너-레지스트리Elastic-Conatiner-Registry\"><a href=\"#엘라스틱-컨테이너-레지스트리Elastic-Conatiner-Registry\" class=\"headerlink\" title=\"엘라스틱 컨테이너 레지스트리Elastic Conatiner Registry\"></a>엘라스틱 컨테이너 레지스트리<sup>Elastic Conatiner Registry</sup></h3><ul>\n<li>줄여서 ECR</li>\n<li>도커이미지를 관리해줌.</li>\n<li>콘솔에서 보여줄 수 있으며, 바로 이미지를 불러올 수 있음.</li>\n<li>일반적으로는 Docker hub가 있지만, 무료로는 프라이빗한 이미지는 1개뿐이 저장이 되지 않음.</li>\n</ul>\n<h3 id=\"컨테이너-에이전트Container-Agent\"><a href=\"#컨테이너-에이전트Container-Agent\" class=\"headerlink\" title=\"컨테이너 에이전트Container Agent\"></a>컨테이너 에이전트<sup>Container Agent<sup></h3><ul>\n<li>ECS 클러스터의 각 인프라 Resource에서 실행.</li>\n<li>현재 실행중인 작업과 Resource 사용률에 대한 정보를 ECS로 전송하고 ECS는 Event가 들어올때마다 작업을 시작 or 중지.</li>\n</ul>\n<h3 id=\"AuroraDB가-ECS내에-들어가있지-않은-이유\"><a href=\"#AuroraDB가-ECS내에-들어가있지-않은-이유\" class=\"headerlink\" title=\"AuroraDB가 ECS내에 들어가있지 않은 이유\"></a>AuroraDB가 ECS내에 들어가있지 않은 이유</h3><ul>\n<li>Container는 쉽게 생성하고 쉽게 지울 수 있다.</li>\n<li>이점이 데이터베이스에서는 반대로 적용이 되어야 하기에 컨테이너로 올리지 않았을 것으로 추정</li>\n<li>로드밸런서를 굳이 Instance내에서 갖고있기보다는 오히려 RDS관리가 더 편했을 것으로 보임.</li>\n</ul>\n<h3 id=\"Bastion-Host가-NLB에만-있는-이유\"><a href=\"#Bastion-Host가-NLB에만-있는-이유\" class=\"headerlink\" title=\"Bastion Host가 NLB에만 있는 이유\"></a>Bastion Host가 NLB에만 있는 이유</h3><ul>\n<li>우선, Bastion의 용도는 외부 공격이나 수상한 접근에 방화벽을 세워 막아주는 일종의 게이트웨이 호스트 서버라고 보면 됨.</li>\n<li>ALB단으로 들어오는 요청사항에 대해서는 기본적으로 API-Gateway에서 어느정도 걸러줄 것으로 보고 따로 세우지 않았다고 판단됨.</li>\n<li>HTTPS가 일정부분 보안을 책임져주는 것도 한몫한 것으로 보임.</li>\n</ul>\n<h3 id=\"AZ가용영역을-2개로만-간-이유\"><a href=\"#AZ가용영역을-2개로만-간-이유\" class=\"headerlink\" title=\"AZ가용영역을 2개로만 간 이유?\"></a>AZ가용영역을 2개로만 간 이유?</h3><ul>\n<li>굳이 가용영역을 3개로 무리해서 확장할 필요가 없었을 것으로 보임.</li>\n</ul>\n","text":"ECSElastic Container Service란 ?도커Docker는 응용프로그램들을 소프트웨어 컨테이너안에 배치시키고 이를 신속하게 구축, 테스트, 배포 가능한 소프트웨어 플랫폼컨테이너 가상화에 기반한 서비스엘라스틱 컨테이너 서비스Elastic ","link":"","raw":null,"photos":[],"categories":[{"name":"aws","slug":"aws","count":17,"path":"api/categories/aws.json"}],"tags":[{"name":"AWS","slug":"AWS","count":19,"path":"api/tags/AWS.json"},{"name":"ECS","slug":"ECS","count":3,"path":"api/tags/ECS.json"},{"name":"EC2","slug":"EC2","count":1,"path":"api/tags/EC2.json"}]},{"title":"ECS-Fargate","slug":"ECS-Fargate","date":"2021-03-26T02:45:47.000Z","updated":"2021-03-26T03:04:01.118Z","comments":true,"pin":null,"path":"api/articles/ECS-Fargate.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/56995911/112570172-e498fe80-8e28-11eb-9ad5-26085f9e5a9e.png","content":"<h2 id=\"미리-드리는-말\"><a href=\"#미리-드리는-말\" class=\"headerlink\" title=\"미리 드리는 말\"></a>미리 드리는 말</h2><ul>\n<li>예제로 생성되는 컨테이너는 Public Docker File 이며, ECS에서 각 서비스별로 사용할때는 ECR에 Container Image를 등록하여 활용하는 것이 좋음.</li>\n<li>컨테이너 파일을 미리 만들어 둔 것이 있다면 해당 컨테이너를 사용해도 아래 예제는 정상적으로 돌아감.<br>(단, Port 설정 / Bound 설정 등 네트워크 설정들은 해주어야 함)</li>\n</ul>\n<h3 id=\"1-Cluster-생성\"><a href=\"#1-Cluster-생성\" class=\"headerlink\" title=\"1. Cluster 생성\"></a>1. Cluster 생성</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/112570172-e498fe80-8e28-11eb-9ad5-26085f9e5a9e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112570172-e498fe80-8e28-11eb-9ad5-26085f9e5a9e.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112570232-04302700-8e29-11eb-9957-2eed9e2840a9.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112570232-04302700-8e29-11eb-9957-2eed9e2840a9.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112570272-1611ca00-8e29-11eb-86f2-613946650c95.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112570272-1611ca00-8e29-11eb-86f2-613946650c95.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112570312-27f36d00-8e29-11eb-8e64-39ca72f758ab.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112570312-27f36d00-8e29-11eb-8e64-39ca72f758ab.png\" alt=\"image\"></a></p>\n<ul>\n<li>클러스터는 ECS의 기본단위이며, Task들이 돌아갈 수 있는 일종의 EC2인스턴스같은 환경이라고 이해하면 됨.</li>\n<li>따라서, 아무것도 없는 EC2를 먼저 띄우듯이 빈 껍데기인 Cluster를 먼저 생성해줌.</li>\n</ul>\n<h3 id=\"2-Task-Definition-설정\"><a href=\"#2-Task-Definition-설정\" class=\"headerlink\" title=\"2. Task Definition 설정\"></a>2. Task Definition 설정</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/112570468-7143bc80-8e29-11eb-895a-9cacc52a8bc1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112570468-7143bc80-8e29-11eb-895a-9cacc52a8bc1.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112570506-80c30580-8e29-11eb-93a5-e9eb98e71cd0.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112570506-80c30580-8e29-11eb-93a5-e9eb98e71cd0.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112570585-a3edb500-8e29-11eb-86c3-26949eec9f33.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112570585-a3edb500-8e29-11eb-86c3-26949eec9f33.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112570604-b1a33a80-8e29-11eb-86b2-277ae062f59e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112570604-b1a33a80-8e29-11eb-86b2-277ae062f59e.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112570638-c41d7400-8e29-11eb-8b46-8f1347984181.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112570638-c41d7400-8e29-11eb-8b46-8f1347984181.png\" alt=\"image\"></a></p>\n<ul>\n<li>실제 Task들이 어떻게 구동할지 어떤환경에서 구동이 되는지를 설정해주는 것.</li>\n<li>Task Definition 은 ECS에 종속적이지 않음.</li>\n<li>Docker Example : docker.io/library/nginx</li>\n<li>예제샘플 도커 주소 : <a href=\"https://hub.docker.com/search?q=nginx&amp;type=image\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/search?q=nginx&amp;type=image</a></li>\n</ul>\n<h3 id=\"3-서비스-생성\"><a href=\"#3-서비스-생성\" class=\"headerlink\" title=\"3. 서비스 생성\"></a>3. 서비스 생성</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/112571035-89680b80-8e2a-11eb-9a68-387db7307657.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112571035-89680b80-8e2a-11eb-9a68-387db7307657.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112571055-971d9100-8e2a-11eb-951c-10ec489422c5.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112571055-971d9100-8e2a-11eb-951c-10ec489422c5.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112571083-a43a8000-8e2a-11eb-9551-cc284e26431d.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112571083-a43a8000-8e2a-11eb-9551-cc284e26431d.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112571113-b4525f80-8e2a-11eb-8842-e2aedf23fcde.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112571113-b4525f80-8e2a-11eb-8842-e2aedf23fcde.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112571136-c16f4e80-8e2a-11eb-96a2-23d7c4a9d9c7.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112571136-c16f4e80-8e2a-11eb-96a2-23d7c4a9d9c7.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112571145-c9c78980-8e2a-11eb-9083-5ee82e568d03.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112571145-c9c78980-8e2a-11eb-9083-5ee82e568d03.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112571316-29259980-8e2b-11eb-8813-9c99f1bc322e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112571316-29259980-8e2b-11eb-8813-9c99f1bc322e.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/112571373-3c386980-8e2b-11eb-869e-8d040c97fb38.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112571373-3c386980-8e2b-11eb-869e-8d040c97fb38.png\" alt=\"image\"></a></p>\n<h3 id=\"4-테스트\"><a href=\"#4-테스트\" class=\"headerlink\" title=\"4. 테스트\"></a>4. 테스트</h3><ul>\n<li>public IP : 3.36.59.154 로 인터넷 접속하면 화면이 아래와 같이 뜸.<br><a href=\"https://user-images.githubusercontent.com/56995911/112571419-52462a00-8e2b-11eb-89d5-41961b23018c.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112571419-52462a00-8e2b-11eb-89d5-41961b23018c.png\" alt=\"image\"></a></li>\n</ul>\n","text":"미리 드리는 말예제로 생성되는 컨테이너는 Public Docker File 이며, ECS에서 각 서비스별로 사용할때는 ECR에 Container Image를 등록하여 활용하는 것이 좋음.컨테이너 파일을 미리 만들어 둔 것이 있다면 해당 컨테이너를 사용","link":"","raw":null,"photos":[],"categories":[{"name":"aws","slug":"aws","count":17,"path":"api/categories/aws.json"}],"tags":[{"name":"AWS","slug":"AWS","count":19,"path":"api/tags/AWS.json"},{"name":"ECS","slug":"ECS","count":3,"path":"api/tags/ECS.json"},{"name":"Fargate","slug":"Fargate","count":1,"path":"api/tags/Fargate.json"}]},{"title":"Fargate","slug":"Fargate","date":"2021-03-01T01:45:56.000Z","updated":"2021-02-23T01:50:19.654Z","comments":true,"pin":null,"path":"api/articles/Fargate.json","excerpt":"","keywords":null,"cover":null,"content":"<h3 id=\"Fargate란\"><a href=\"#Fargate란\" class=\"headerlink\" title=\"Fargate란?\"></a>Fargate란?</h3><ul>\n<li>ECS<sup>Elastic Container Service</sup> 의 하나의 옵션이었음.</li>\n<li>기존 ECS는 EC2의 인스턴스 클러스터를 관리, 사용률 모니터링 등을 사용자가 수행해야 했지만, EC2 자원관리를 AWS에 맡겨 서버의 프로비저닝이나 스케일링에 대해 생각하지 않고 컨테이너, Application에 집중해서 구축 할 수 있는 장점이 있음.</li>\n<li>서버를 관리하지 않는다는 관점에서 Lambda랑 비슷하기에 컨테이너버전의 Serverless라고 불리기도 함. (람다와 달리 성능, 시간제한같은게 없다.)</li>\n</ul>\n<h3 id=\"가격\"><a href=\"#가격\" class=\"headerlink\" title=\"가격?\"></a>가격?</h3><ul>\n<li>t2.Micro 보다 비싼편 ($0.00511USD/hour)</li>\n<li>다만, CPU를 0.25(1/4)로 사용이 가능하기에 어느정도 절약은 가능.</li>\n</ul>\n<h3 id=\"적용방법\"><a href=\"#적용방법\" class=\"headerlink\" title=\"적용방법\"></a>적용방법</h3><ol>\n<li>IAM 계정 생성</li>\n<li>도커 이미지 생성 및 ECR에 등록</li>\n</ol>\n<ul>\n<li>aws cli 환경설정</li>\n<li>Docker 이미지용 Application 작성</li>\n<li>ECR에 repository 생성</li>\n<li>ECR에 repository에 Docker Image 올리기</li>\n</ul>\n<ol start=\"3\">\n<li>작업 정의</li>\n</ol>\n<ul>\n<li>작업 정의 생성</li>\n<li>작업 정의에 컨테이너 추가</li>\n</ul>\n<ol start=\"4\">\n<li>클러스터 및 서비스 생성</li>\n</ol>\n<ul>\n<li>클러스터 생성</li>\n<li>서비스 생성</li>\n<li>서비스 확인</li>\n</ul>\n","text":"Fargate란?ECSElastic Container Service 의 하나의 옵션이었음.기존 ECS는 EC2의 인스턴스 클러스터를 관리, 사용률 모니터링 등을 사용자가 수행해야 했지만, EC2 자원관리를 AWS에 맡겨 서버의 프로비저닝이나 스케일링에","link":"","raw":null,"photos":[],"categories":[{"name":"aws","slug":"aws","count":17,"path":"api/categories/aws.json"}],"tags":[{"name":"AWS","slug":"AWS","count":19,"path":"api/tags/AWS.json"},{"name":"ECS","slug":"ECS","count":3,"path":"api/tags/ECS.json"},{"name":"fargate","slug":"fargate","count":1,"path":"api/tags/fargate.json"}]}]}