{"name":"Document DB","slug":"Document-DB","count":3,"posts":[{"title":"DocumentDB(MongoDB) Setting","slug":"DocumentDB-MongoDB-Setting","date":"2020-12-18T05:36:38.000Z","updated":"2021-02-09T03:51:34.842Z","comments":true,"pin":null,"path":"api/articles/DocumentDB-MongoDB-Setting.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/56995911/107305217-e6e80900-6ac5-11eb-9b86-081655884a9a.png","content":"<h2 id=\"서문\"><a href=\"#서문\" class=\"headerlink\" title=\"서문\"></a>서문</h2><ul>\n<li>시작에 앞서 DocumentDB를 사용하게 된 사유는 MongoDB &amp; AWS DocumentDB 에 나와있듯이 1000만 Row 이하의 데이터의 경우 DocumentDB가 훨씬 이득이었다.</li>\n<li>이득인 사유<br>1) 1000만 row 이하로 사용하는 서비스가 대부분임.<br>2) 자동 백업, 복구 스토리지 제공(Snapshot)<br>3) 인스턴스 &amp; 클러스터 관리 거의 불필요(설정과 관리는 다른개념)</li>\n<li>툴은 AWS에서도 가이드로 제공해주는 툴 중에 요즘 뜨고 있는 툴이라고 생각되어 Studio 3T를 사용.</li>\n<li>최근 정정(2021-01-20) : Studio 3T는 무료가 아니라 유료 라이센스이며, 간단한 정도라면 MongoDB에서 무료로 제공중인 Compass를 사용하는 것이 좋음.<br><a href=\"https://user-images.githubusercontent.com/56995911/107305217-e6e80900-6ac5-11eb-9b86-081655884a9a.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107305217-e6e80900-6ac5-11eb-9b86-081655884a9a.png\" alt=\"image\"></a></li>\n</ul>\n<h2 id=\"본문\"><a href=\"#본문\" class=\"headerlink\" title=\"본문\"></a>본문</h2><h3 id=\"1-EC2-설정-설치\"><a href=\"#1-EC2-설정-설치\" class=\"headerlink\" title=\"1. EC2 설정(설치)\"></a>1. EC2 설정(설치)</h3><ul>\n<li>깔끔하게 Linux로 가보자.</li>\n<li>(제목은 DocumentDB면서 왜 갑자기 EC2를 설치하냐고 물어볼 수 있는데, Windows가 있어야 카카오톡을 깔 수 있듯이 OS가 있어야한다는 개념으로 생각하면 편하다.)</li>\n</ul>\n<h4 id=\"1-메인화면에서-EC2생성-클릭\"><a href=\"#1-메인화면에서-EC2생성-클릭\" class=\"headerlink\" title=\"1) 메인화면에서 EC2생성 클릭\"></a>1) 메인화면에서 EC2생성 클릭</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107311500-cd4cbe80-6ad1-11eb-8657-60dd6818a3f9.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311500-cd4cbe80-6ad1-11eb-8657-60dd6818a3f9.png\" alt=\"image\"></a></p>\n<h4 id=\"2-EC2엔진-설정\"><a href=\"#2-EC2엔진-설정\" class=\"headerlink\" title=\"2) EC2엔진 설정\"></a>2) EC2엔진 설정</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107311634-0d13a600-6ad2-11eb-8d85-aefd481a5fb0.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311634-0d13a600-6ad2-11eb-8d85-aefd481a5fb0.png\" alt=\"image\"></a></p>\n<ul>\n<li>EC2의 수많은 OS를 선택할 수 있었지만, 난 스펙은 사실 잘 모른다. 잘 돌아가기만 하면 된다고 생각하기에…</li>\n<li>따라서, 가이드와 동일하게 Linux 2 AMI를 사용하기로 한다.</li>\n<li>뒤로 t3.micro를 씀으로 일단은 저렴한 걸로 생성해보고자 한다.</li>\n<li>이후, [Review and Launch] 버튼 클릭해서 총 7단계인 복잡한놈을 빨리 끝내기로 한다.</li>\n</ul>\n<h4 id=\"3-EC2그룹설정\"><a href=\"#3-EC2그룹설정\" class=\"headerlink\" title=\"3) EC2그룹설정\"></a>3) EC2그룹설정</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107311743-38969080-6ad2-11eb-8ba1-42c26d3bf022.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311743-38969080-6ad2-11eb-8ba1-42c26d3bf022.png\" alt=\"image\"></a></p>\n<ul>\n<li><p>다른건 모르겠고, 일단 7단계로 건너뛰어 왔다. </p>\n</li>\n<li><p>AWS에서 가장 중요하게 생각하는 권한과 보안중의 한 축을 담당하는 Security Group을 설정하자.(아래 사진처럼 이름넣고 Source만 수정해주면 끝난다)<br><a href=\"https://user-images.githubusercontent.com/56995911/107311775-4ba96080-6ad2-11eb-99f7-e888ad89c100.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311775-4ba96080-6ad2-11eb-99f7-e888ad89c100.png\" alt=\"image\"></a></p>\n</li>\n<li><p>설정이 끝났으면 [Review and Launch]버튼을 가차없이 누른다.</p>\n</li>\n</ul>\n<h4 id=\"4-검토-및-설치\"><a href=\"#4-검토-및-설치\" class=\"headerlink\" title=\"4) 검토 및 설치\"></a>4) 검토 및 설치</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107311827-6c71b600-6ad2-11eb-8576-7d2551c1f053.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311827-6c71b600-6ad2-11eb-8576-7d2551c1f053.png\" alt=\"image\"></a></p>\n<ul>\n<li>설정한 내용들을 확인한 후 [Launch]버튼을 클릭한다.<br><img src=\"https://user-images.githubusercontent.com/56995911/107311894-975c0a00-6ad2-11eb-8ad1-bb52fc3eecba.png\" alt=\"image\"></li>\n<li>시간이 좀 흐른 뒤에 위와 같이 하나의 Linux 서버가 만들어 진 것을 확인할 수 있다.</li>\n</ul>\n<h3 id=\"2-보안그룹-생성\"><a href=\"#2-보안그룹-생성\" class=\"headerlink\" title=\"2. 보안그룹 생성\"></a>2. 보안그룹 생성</h3><ul>\n<li>자, 이제 클러스터(DocumentDB)와 연결할 보안그룹을 만들어보자.</li>\n<li>참고로, 아까 EC2만들면서 만든 보안그룹은 EC2에서 사용하는 보안그룹이다. (착각하지말자)</li>\n</ul>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/107311951-b78bc900-6ad2-11eb-91dd-f32bf4b6eaa1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311951-b78bc900-6ad2-11eb-91dd-f32bf4b6eaa1.png\" alt=\"image\"></a></p>\n<ul>\n<li>보안그룹은 별내용없다. </li>\n<li>[이름입력] → [Custom TCP : 27017] → source 설정 하면 끝난다. 그림으로 대체한다.<br><a href=\"https://user-images.githubusercontent.com/56995911/107311981-ca060280-6ad2-11eb-883d-0d92ec57f2bd.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107311981-ca060280-6ad2-11eb-883d-0d92ec57f2bd.png\" alt=\"image\"></a></li>\n</ul>\n<h3 id=\"3-Document-Cluster-생성\"><a href=\"#3-Document-Cluster-생성\" class=\"headerlink\" title=\"3. Document Cluster 생성\"></a>3. Document Cluster 생성</h3><ul>\n<li>EC2인지 뭔지를 지나 결국 목적지에 왔지만, 이제 본게임이라고 생각할 것이다.</li>\n<li>하지만, 걱정말자. 너무 쉽다.</li>\n</ul>\n<h4 id=\"1-클러스터-생성\"><a href=\"#1-클러스터-생성\" class=\"headerlink\" title=\"1) 클러스터 생성\"></a>1) 클러스터 생성</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107312022-e144f000-6ad2-11eb-8ea9-269406a851ed.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312022-e144f000-6ad2-11eb-8ea9-269406a851ed.png\" alt=\"image\"></a></p>\n<ul>\n<li>가이드에 맞춰 검은색으로 칠해진 모든 곳을 입력하자.</li>\n<li>테스트용도라면 Instance class 와 Number of instance 는 가급적 가장 낮은 사양으로 했으면 한다. </li>\n</ul>\n<h4 id=\"2-추가설정\"><a href=\"#2-추가설정\" class=\"headerlink\" title=\"2) 추가설정\"></a>2) 추가설정</h4><p><img src=\"https://user-images.githubusercontent.com/56995911/107312076-f6ba1a00-6ad2-11eb-9c8c-629e249a503e.png\" alt=\"image\"></p>\n<ul>\n<li>버튼클릭하면 어마어마한 옵션설정이 나온다.</li>\n</ul>\n<h5 id=\"i-Network-Settings\"><a href=\"#i-Network-Settings\" class=\"headerlink\" title=\"i) Network Settings\"></a>i) Network Settings</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107312104-076a9000-6ad3-11eb-98f7-ab6722bccc2e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312104-076a9000-6ad3-11eb-98f7-ab6722bccc2e.png\" alt=\"image\"></a></p>\n<ul>\n<li>아까 2번에서 생성했던 보안그룹이 생각나는가? 그걸 여기 쓰면 된다. </li>\n<li>다시말하지만, 처음 EC2에서 보안그룹을 생성했던건 EC2에서 끝난다. 2번에서 생성한 것은 Cluster에서 사용하기 위한 용도이다.</li>\n</ul>\n<h5 id=\"ii-Cluster-Options\"><a href=\"#ii-Cluster-Options\" class=\"headerlink\" title=\"ii) Cluster Options\"></a>ii) Cluster Options</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107312141-1c472380-6ad3-11eb-923f-1b00dcfdb91f.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312141-1c472380-6ad3-11eb-923f-1b00dcfdb91f.png\" alt=\"image\"></a></p>\n<ul>\n<li>이 Cluster Parameter Group 셋팅법은 따로 아래에서 설명하겠다.</li>\n<li>사용하는 이유는, 우린 툴을 쓸거니까…….툴에 맞춘 사양이 들어가야 하니까…..</li>\n</ul>\n<h5 id=\"iii-Etc\"><a href=\"#iii-Etc\" class=\"headerlink\" title=\"iii) Etc\"></a>iii) Etc</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107312202-3123b700-6ad3-11eb-98bb-4de25042a2f4.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312202-3123b700-6ad3-11eb-98bb-4de25042a2f4.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/107312217-3a148880-6ad3-11eb-97d0-23789966611e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312217-3a148880-6ad3-11eb-97d0-23789966611e.png\" alt=\"image\"></a></p>\n<ul>\n<li>기타 등등이라고 명칭한 이유는, 기본값을 쓸거기때문에..</li>\n<li>태그는 설정해주면 검색하기 좋을 것이고, Protection은 클러스터를 보호해주는 역할이다.<br>나중에 체크를 풀어줄 수도 있지만, 인스턴스와 클러스터를 지우지 못하게 방어막을 한번 걸어주는 것이다. </li>\n<li>테스트이므로 풀어주어도 상관없다.</li>\n</ul>\n<h5 id=\"iv-클러스터-확인\"><a href=\"#iv-클러스터-확인\" class=\"headerlink\" title=\"iv) 클러스터 확인\"></a>iv) 클러스터 확인</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107312253-4c8ec200-6ad3-11eb-88a0-7978bd757975.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312253-4c8ec200-6ad3-11eb-88a0-7978bd757975.png\" alt=\"image\"></a></p>\n<h3 id=\"4-EC2-내에서-클러스터-연결-및-설정\"><a href=\"#4-EC2-내에서-클러스터-연결-및-설정\" class=\"headerlink\" title=\"4. EC2 내에서 클러스터 연결 및 설정\"></a>4. EC2 내에서 클러스터 연결 및 설정</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/107312284-5ca6a180-6ad3-11eb-8e9c-ede43d055fcb.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312284-5ca6a180-6ad3-11eb-8e9c-ede43d055fcb.png\" alt=\"image\"></a></p>\n<ul>\n<li><p>인스턴스를 선택하고 Connect하면 웹페이지로 linux서버를 들어갈 수 있는 Terminal이 생긴다.<br><a href=\"https://user-images.githubusercontent.com/56995911/107312307-6c25ea80-6ad3-11eb-9d9e-a04e810fb022.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312307-6c25ea80-6ad3-11eb-9d9e-a04e810fb022.png\" alt=\"image\"></a></p>\n</li>\n<li><p>To install the mongo shell on Amazon Linux</p>\n</li>\n<li><p>1)Create the repository file. At the command line of your EC2 instance, execute the follow command:</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"[mongodb-org-3.6] \\nname=MongoDB Repository\\nbaseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.6/x86_64/\\ngpgcheck=1 \\nenabled=1 \\ngpgkey=https://www.mongodb.org/static/pgp/server-3.6.asc\"</span> | sudo tee /etc/yum.repos.d/mongodb-org-3.6.repo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"[mongodb-org-4.0] \\nname=MongoDB Repository\\nbaseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/4.0/x86_64/\\ngpgcheck=1 \\nenabled=1 \\ngpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc\"</span> | sudo tee /etc/yum.repos.d/mongodb-org-4.0.repo</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>2)When it is complete, install the mongo shell by executing the following command:</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y mongodb-org-shell</span><br></pre></td></tr></table></figure></div>\n</li>\n<li><p>3)Download the CA certificate for Amazon DocumentDB</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem</span><br></pre></td></tr></table></figure></div>\n\n\n</li>\n</ul>\n<ul>\n<li>아래 사진의 [Connect to this cluster with the mongo shell] 의 값을 Linux Terminal 환경에서 동작시키면 비밀번호 설정이 나온다<br><a href=\"https://user-images.githubusercontent.com/56995911/107312451-cc1c9100-6ad3-11eb-9781-23f81607c345.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312451-cc1c9100-6ad3-11eb-9781-23f81607c345.png\" alt=\"image\"></a></li>\n<li>사용할 비밀번호를 입력하면  rs0:PRIMARY&gt; 라는Prompt가 나오면서 각종 명령어를 쳐볼 수 있다.</li>\n<li>[Connect to this cluster with an application] 값은 아래 5번에서 사용한다.</li>\n</ul>\n<h3 id=\"5-Studio-3T-에서-사용\"><a href=\"#5-Studio-3T-에서-사용\" class=\"headerlink\" title=\"5. Studio 3T 에서 사용\"></a>5. Studio 3T 에서 사용</h3><ul>\n<li><p>여기서 한참 헤멘거같다.</p>\n</li>\n<li><p>연결이 되지 않으니 EC2인스턴스를 생성했다 지웠다를 반복한듯.<br><a href=\"https://user-images.githubusercontent.com/56995911/107312498-eeaeaa00-6ad3-11eb-8587-ad2874b069a1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312498-eeaeaa00-6ad3-11eb-8587-ad2874b069a1.png\" alt=\"image\"></a></p>\n</li>\n<li><p>메인화면에서 Connect를 누르면 위와 같은 창이 나오는데 [From URI…] 를 선택하고 [Connect to this cluster with an application] 에 나와있는 값에서 비밀번호를 수정하고 확인을 누른다.</p>\n</li>\n<li><p>이후 화면들을 아래와 같이 동일하게 설정해주면 된다.<br><a href=\"https://user-images.githubusercontent.com/56995911/107312526-0128e380-6ad4-11eb-8f6e-be11ad2d7a2e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312526-0128e380-6ad4-11eb-8f6e-be11ad2d7a2e.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/107312540-04bc6a80-6ad4-11eb-8418-997a0a3b1ca2.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312540-04bc6a80-6ad4-11eb-8418-997a0a3b1ca2.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/107312547-0a19b500-6ad4-11eb-8ccc-b3b216131a14.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312547-0a19b500-6ad4-11eb-8ccc-b3b216131a14.png\" alt=\"image\"></a></p>\n</li>\n<li><p>3번째 사진의 값은 아래와 같다<br>1) SSH Address는 1번에서 생성한 EC2의 [Public IPv4 address]<br>2) SSH User name 도 1번에서 생성할 때 사용자 이름으로 넣었던 이름.<br>3) SSH Auth Mode는 EC2생성시 PK생성한 값이 있으므로 Private Key로 설정<br>4) Private Key는 해당 서버 *.pem 파일을 넣음.</p>\n</li>\n</ul>\n<h2 id=\"결론\"><a href=\"#결론\" class=\"headerlink\" title=\"결론\"></a>결론</h2><ul>\n<li>이로써, 구성을 끝냈다.<br><a href=\"https://user-images.githubusercontent.com/56995911/107312613-29184700-6ad4-11eb-9269-0916ed69f9b5.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312613-29184700-6ad4-11eb-9269-0916ed69f9b5.png\" alt=\"image\"></a></li>\n<li>보안적으로 좀 아쉬운 부분은 있지만, 테스트 상으로는 크게 문제가 되지 않을 것으로 보인다.</li>\n</ul>\n<h2 id=\"별첨\"><a href=\"#별첨\" class=\"headerlink\" title=\"별첨\"></a>별첨</h2><h3 id=\"1-Parameter-Group-설정\"><a href=\"#1-Parameter-Group-설정\" class=\"headerlink\" title=\"1.Parameter Group 설정\"></a>1.Parameter Group 설정</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/107312664-44835200-6ad4-11eb-98a6-7a8e5bb20709.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312664-44835200-6ad4-11eb-98a6-7a8e5bb20709.png\" alt=\"image\"></a></p>\n<h4 id=\"1-Create\"><a href=\"#1-Create\" class=\"headerlink\" title=\"1) Create\"></a>1) Create</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107312695-536a0480-6ad4-11eb-934a-8d23d2c4ecca.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312695-536a0480-6ad4-11eb-934a-8d23d2c4ecca.png\" alt=\"image\"></a></p>\n<h4 id=\"2-Setting\"><a href=\"#2-Setting\" class=\"headerlink\" title=\"2) Setting\"></a>2) Setting</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107312715-61b82080-6ad4-11eb-878e-a5bf796b1719.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107312715-61b82080-6ad4-11eb-878e-a5bf796b1719.png\" alt=\"image\"></a></p>\n<ul>\n<li>tls와 ttl_monitor를 Disable로 맞춰주어야 한다고 한다.</li>\n<li>이유는 나도 공부를 해서 찾아본 뒤 적도록 하겠다.(암호화 통신을 설정하면 어떻게되지?)</li>\n</ul>\n<h3 id=\"2-관련자료\"><a href=\"#2-관련자료\" class=\"headerlink\" title=\"2. 관련자료\"></a>2. 관련자료</h3><p><a href=\"https://docs.aws.amazon.com/documentdb/latest/developerguide/connect-ec2.html#connect-ec2.security-group\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/documentdb/latest/developerguide/connect-ec2.html#connect-ec2.security-group</a><br><a href=\"https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/studio3t.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/studio3t.html</a><br><a href=\"https://stackoverflow.com/questions/54384253/aws-documentdb-with-robo-3t-robomongo\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/54384253/aws-documentdb-with-robo-3t-robomongo</a><br><a href=\"https://geekflare.com/nosql-client/\" target=\"_blank\" rel=\"noopener\">https://geekflare.com/nosql-client/</a><br><a href=\"https://aws.amazon.com/ko/blogs/database/part-1-getting-started-with-amazon-documentdb-using-amazon-ec2/\" target=\"_blank\" rel=\"noopener\">https://aws.amazon.com/ko/blogs/database/part-1-getting-started-with-amazon-documentdb-using-amazon-ec2/</a></p>\n","text":"서문시작에 앞서 DocumentDB를 사용하게 된 사유는 MongoDB &amp; AWS DocumentDB 에 나와있듯이 1000만 Row 이하의 데이터의 경우 DocumentDB가 훨씬 이득이었다.이득인 사유<br>1) 1000만 row 이하로 사","link":"","raw":null,"photos":[],"categories":[{"name":"AWS","slug":"AWS","count":3,"path":"api/categories/AWS.json"}],"tags":[{"name":"Document DB","slug":"Document-DB","count":3,"path":"api/tags/Document-DB.json"},{"name":"Mongo","slug":"Mongo","count":3,"path":"api/tags/Mongo.json"}]},{"title":"MongoDB Compass Guide","slug":"MongoDB-Compass-Guide","date":"2021-02-09T05:29:14.000Z","updated":"2021-02-09T05:48:25.666Z","comments":true,"pin":null,"path":"api/articles/MongoDB-Compass-Guide.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/56995911/107320066-515b7200-6ae3-11eb-8007-1266bbad72a9.png","content":"<h2 id=\"서문\"><a href=\"#서문\" class=\"headerlink\" title=\"서문\"></a>서문</h2><p>Document DB 사용을 원활하게 하기 위하여 MongoDB Compass를 활용해보기로 한다.<br>Studio 3T와 달리 무료이며 MongoDB에서 기본적으로 제공하는 툴이다.(<a href=\"https://www.mongodb.com/try/download/compass\" target=\"_blank\" rel=\"noopener\">https://www.mongodb.com/try/download/compass</a>)<br>연결설정방법을 가이드한다.<br>Collection을 생성하고 index 작업 및 CRUD 작업에 대하여 툴에서 사용하는 방법을 가이드한다.<br>모든 가이드의 출처는 <a href=\"https://docs.mongodb.com/compass/master/를\" target=\"_blank\" rel=\"noopener\">https://docs.mongodb.com/compass/master/를</a> 참고하여 작성하였다.</p>\n<h2 id=\"본문\"><a href=\"#본문\" class=\"headerlink\" title=\"본문\"></a>본문</h2><h3 id=\"1-시작\"><a href=\"#1-시작\" class=\"headerlink\" title=\"1. 시작\"></a>1. 시작</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/107320066-515b7200-6ae3-11eb-8007-1266bbad72a9.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320066-515b7200-6ae3-11eb-8007-1266bbad72a9.png\" alt=\"image\"></a></p>\n<ul>\n<li>URI를 통해 접속하는 방법이 Default로 나온다.</li>\n<li>URI는 앞서 설명한 Studio 3T에서 나오긴한다.</li>\n<li>URI를 쉽게 추출하고 싶다면 Studio 3T를 사용해야하며, 반드시 비밀번호 포함과 각종옵션 추가 체크를 해주어야 한다.</li>\n</ul>\n<h3 id=\"2-Connection-Setting-Step-by-Step\"><a href=\"#2-Connection-Setting-Step-by-Step\" class=\"headerlink\" title=\"2. Connection Setting(Step by Step)\"></a>2. Connection Setting(Step by Step)</h3><h4 id=\"1-Studio-3T-URI를-활용하는-방법\"><a href=\"#1-Studio-3T-URI를-활용하는-방법\" class=\"headerlink\" title=\"1) Studio 3T URI를 활용하는 방법\"></a>1) Studio 3T URI를 활용하는 방법</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><figcaption><span>3T URI</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongodb:&#x2F;&#x2F;administrator:##KDnetworkER1@docdb-2021-01-08-06-18-46.cluster-ccjhfbfchw3b.ap-northeast-2.docdb.amazonaws.com:27017&#x2F;admin?authSource&#x3D;admin&amp;connectTimeoutMS&#x3D;10000&amp;readPreference&#x3D;secondaryPreferred&amp;authMechanism&#x3D;SCRAM-SHA-1&amp;appname&#x3D;MongoDB%20Compass&amp;ssl&#x3D;true</span><br></pre></td></tr></table></figure></div>\n\n<h5 id=\"i-MongoDB-홈페이지에-나와있듯이-구조는-아래와-같다-https-docs-mongodb-com-manual-reference-connection-string\"><a href=\"#i-MongoDB-홈페이지에-나와있듯이-구조는-아래와-같다-https-docs-mongodb-com-manual-reference-connection-string\" class=\"headerlink\" title=\"i) MongoDB 홈페이지에 나와있듯이, 구조는 아래와 같다.(https://docs.mongodb.com/manual/reference/connection-string/)\"></a>i) MongoDB 홈페이지에 나와있듯이, 구조는 아래와 같다.(<a href=\"https://docs.mongodb.com/manual/reference/connection-string/\" target=\"_blank\" rel=\"noopener\">https://docs.mongodb.com/manual/reference/connection-string/</a>)</h5><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mongodb://[username:password@]host1[:port1][,...hostN[:portN]][/[defaultauthdb][?options]]</span><br></pre></td></tr></table></figure></div>\n\n<h5 id=\"ii-완성된-URI를-Connect-위의-TextBox에-삽입한다\"><a href=\"#ii-완성된-URI를-Connect-위의-TextBox에-삽입한다\" class=\"headerlink\" title=\"ii) 완성된 URI를 Connect 위의 TextBox에 삽입한다.\"></a>ii) 완성된 URI를 Connect 위의 TextBox에 삽입한다.</h5><h5 id=\"iii-화면상단에-Fill-in-connection-fields-individually-를-선택한-뒤-상세-옵션설정을-한다\"><a href=\"#iii-화면상단에-Fill-in-connection-fields-individually-를-선택한-뒤-상세-옵션설정을-한다\" class=\"headerlink\" title=\"iii) 화면상단에 Fill in connection fields individually 를 선택한 뒤 상세 옵션설정을 한다.\"></a>iii) 화면상단에 Fill in connection fields individually 를 선택한 뒤 상세 옵션설정을 한다.</h5><h5 id=\"iv-URI를-통해-기본적인-Connection-옵션은-이미-채워져있음을-확인할-수-있다\"><a href=\"#iv-URI를-통해-기본적인-Connection-옵션은-이미-채워져있음을-확인할-수-있다\" class=\"headerlink\" title=\"iv) URI를 통해 기본적인 Connection 옵션은 이미 채워져있음을 확인할 수 있다.\"></a>iv) URI를 통해 기본적인 Connection 옵션은 이미 채워져있음을 확인할 수 있다.</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107320190-97b0d100-6ae3-11eb-8067-803c25ea900d.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320190-97b0d100-6ae3-11eb-8067-803c25ea900d.png\" alt=\"image\"></a></p>\n<h5 id=\"v-SSL-SSH-설정부가-제일-중요하다-아래와-같이-설정해주도록-한다-SSH-Passphrase는-설정하지-않아도-된다\"><a href=\"#v-SSL-SSH-설정부가-제일-중요하다-아래와-같이-설정해주도록-한다-SSH-Passphrase는-설정하지-않아도-된다\" class=\"headerlink\" title=\"v) SSL, SSH 설정부가 제일 중요하다. 아래와 같이 설정해주도록 한다. (SSH Passphrase는 설정하지 않아도 된다)\"></a>v) SSL, SSH 설정부가 제일 중요하다. 아래와 같이 설정해주도록 한다. (SSH Passphrase는 설정하지 않아도 된다)</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107320230-aa2b0a80-6ae3-11eb-9b83-150b7c98c41f.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320230-aa2b0a80-6ae3-11eb-9b83-150b7c98c41f.png\" alt=\"image\"></a></p>\n<h5 id=\"vi-접속이-완료됨을-확인할-수-있다\"><a href=\"#vi-접속이-완료됨을-확인할-수-있다\" class=\"headerlink\" title=\"vi) 접속이 완료됨을 확인할 수 있다.\"></a>vi) 접속이 완료됨을 확인할 수 있다.</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107320268-b8792680-6ae3-11eb-94c9-df61de612654.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320268-b8792680-6ae3-11eb-94c9-df61de612654.png\" alt=\"image\"></a></p>\n<h4 id=\"2-수동입력방법-Studio-3T-에서-URI의-지원을-받을-수-없을-경우-사용\"><a href=\"#2-수동입력방법-Studio-3T-에서-URI의-지원을-받을-수-없을-경우-사용\" class=\"headerlink\" title=\"2) 수동입력방법(Studio 3T 에서 URI의 지원을 받을 수 없을 경우 사용)\"></a>2) 수동입력방법(Studio 3T 에서 URI의 지원을 받을 수 없을 경우 사용)</h4><h5 id=\"i-host-정보-입력\"><a href=\"#i-host-정보-입력\" class=\"headerlink\" title=\"i) host 정보 입력\"></a>i) host 정보 입력</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107320338-d9da1280-6ae3-11eb-8004-bd9aa916a146.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320338-d9da1280-6ae3-11eb-8004-bd9aa916a146.png\" alt=\"image\"></a></p>\n<h5 id=\"ii-추가옵션-선택\"><a href=\"#ii-추가옵션-선택\" class=\"headerlink\" title=\"ii) 추가옵션 선택\"></a>ii) 추가옵션 선택</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107320375-e9595b80-6ae3-11eb-8228-8500160bb361.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320375-e9595b80-6ae3-11eb-8228-8500160bb361.png\" alt=\"image\"></a></p>\n<h3 id=\"3-Database-생성\"><a href=\"#3-Database-생성\" class=\"headerlink\" title=\"3. Database 생성\"></a>3. Database 생성</h3><h4 id=\"1-UI로-생성하는-방법\"><a href=\"#1-UI로-생성하는-방법\" class=\"headerlink\" title=\"1) UI로 생성하는 방법\"></a>1) UI로 생성하는 방법</h4><p><a href=\"https://user-images.githubusercontent.com/56995911/107320410-fe35ef00-6ae3-11eb-9056-0d7f0acf3a00.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320410-fe35ef00-6ae3-11eb-9056-0d7f0acf3a00.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/107320436-0857ed80-6ae4-11eb-81ec-bc996b81a4d3.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320436-0857ed80-6ae4-11eb-81ec-bc996b81a4d3.png\" alt=\"image\"></a></p>\n<h4 id=\"2-프로그램으로-생성\"><a href=\"#2-프로그램으로-생성\" class=\"headerlink\" title=\"2) 프로그램으로 생성\"></a>2) 프로그램으로 생성</h4><h5 id=\"i-https-docs-aws-amazon-com-ko-kr-documentdb-latest-developerguide-connect-programmatically-html\"><a href=\"#i-https-docs-aws-amazon-com-ko-kr-documentdb-latest-developerguide-connect-programmatically-html\" class=\"headerlink\" title=\"i) https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/connect_programmatically.html\"></a>i) <a href=\"https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/connect_programmatically.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/connect_programmatically.html</a></h5><h3 id=\"4-Collection-생성\"><a href=\"#4-Collection-생성\" class=\"headerlink\" title=\"4. Collection 생성\"></a>4. Collection 생성</h3><h4 id=\"1-UI로-생성하는-방법-1\"><a href=\"#1-UI로-생성하는-방법-1\" class=\"headerlink\" title=\"1) UI로 생성하는 방법\"></a>1) UI로 생성하는 방법</h4><h5 id=\"i-Capped-Collection은-컬렉션에-크기제한을-두는것이므로-예제상에서는-따로-제한을-두지-않음\"><a href=\"#i-Capped-Collection은-컬렉션에-크기제한을-두는것이므로-예제상에서는-따로-제한을-두지-않음\" class=\"headerlink\" title=\"i) Capped Collection은 컬렉션에 크기제한을 두는것이므로 예제상에서는 따로 제한을 두지 않음.\"></a>i) Capped Collection은 컬렉션에 크기제한을 두는것이므로 예제상에서는 따로 제한을 두지 않음.</h5><ul>\n<li>Use Custom Collection은 컬렉션 내에 프로파일들에 대한 각 형을 정해주는것. 예→ varchar(45), datetime, boolean 등..<br><a href=\"https://user-images.githubusercontent.com/56995911/107320539-363d3200-6ae4-11eb-85ad-5222a7e039bc.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320539-363d3200-6ae4-11eb-85ad-5222a7e039bc.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/107320548-3f2e0380-6ae4-11eb-843a-ee8c7bde20e6.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320548-3f2e0380-6ae4-11eb-843a-ee8c7bde20e6.png\" alt=\"image\"></a></li>\n</ul>\n<h4 id=\"2-프로그램으로-생성-1\"><a href=\"#2-프로그램으로-생성-1\" class=\"headerlink\" title=\"2) 프로그램으로 생성\"></a>2) 프로그램으로 생성</h4><h5 id=\"i-https-docs-aws-amazon-com-ko-kr-documentdb-latest-developerguide-connect-programmatically-html-1\"><a href=\"#i-https-docs-aws-amazon-com-ko-kr-documentdb-latest-developerguide-connect-programmatically-html-1\" class=\"headerlink\" title=\"i) https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/connect_programmatically.html\"></a>i) <a href=\"https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/connect_programmatically.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/connect_programmatically.html</a></h5><h3 id=\"5-Indexing-생성\"><a href=\"#5-Indexing-생성\" class=\"headerlink\" title=\"5. Indexing 생성\"></a>5. Indexing 생성</h3><ul>\n<li>우선, Collection을 생성하면 기본으로 _id 라는 키값이 자동으로 잡힌다. </li>\n<li>아마도 DocumentDB내에서 자체 인덱싱을 위해 쓰는 것으로 보여지며, 이걸 생성안한다고 하면 Collection이 아예 생성되지 않는다.</li>\n</ul>\n<h4 id=\"1-UI로-생성하는-방법-2\"><a href=\"#1-UI로-생성하는-방법-2\" class=\"headerlink\" title=\"1) UI로 생성하는 방법\"></a>1) UI로 생성하는 방법</h4><h5 id=\"i-생성하고자-하는-Collection-마우스우클릭-→-Add-Index-Drop-Index-는-삭제\"><a href=\"#i-생성하고자-하는-Collection-마우스우클릭-→-Add-Index-Drop-Index-는-삭제\" class=\"headerlink\" title=\"i) 생성하고자 하는 Collection (마우스우클릭)→ (Add Index..)  [Drop Index 는 삭제]\"></a>i) 생성하고자 하는 Collection (마우스우클릭)→ (Add Index..)  [Drop Index 는 삭제]</h5><h4 id=\"2-Linux에서-Cmd로-생성하는-방법\"><a href=\"#2-Linux에서-Cmd로-생성하는-방법\" class=\"headerlink\" title=\"2) Linux에서 Cmd로 생성하는 방법\"></a>2) Linux에서 Cmd로 생성하는 방법</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\"> </span><br><span class=\"line\">db.[COLLECTION_NAME].createIndex(&#123;[KEY]:-1&#125;, &#123;background: <span class=\"literal\">true</span>&#125;); //1은 ascending, -1은 descending / background는 아래 설명</span><br></pre></td></tr></table></figure></div>\n\n<p><a href=\"https://user-images.githubusercontent.com/56995911/107320639-743a5600-6ae4-11eb-8a50-60fd25e705eb.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320639-743a5600-6ae4-11eb-8a50-60fd25e705eb.png\" alt=\"image\"></a></p>\n<h3 id=\"6-CRUD\"><a href=\"#6-CRUD\" class=\"headerlink\" title=\"6. CRUD\"></a>6. CRUD</h3><h4 id=\"1-SELECT\"><a href=\"#1-SELECT\" class=\"headerlink\" title=\"1) SELECT\"></a>1) SELECT</h4><h5 id=\"i-UI를-통한-Select\"><a href=\"#i-UI를-통한-Select\" class=\"headerlink\" title=\"i) UI를 통한 Select\"></a>i) UI를 통한 Select</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107320692-8ddb9d80-6ae4-11eb-89d4-888e5ab4f634.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320692-8ddb9d80-6ae4-11eb-89d4-888e5ab4f634.png\" alt=\"image\"></a></p>\n<ul>\n<li><p>Filter : 조건검색, SQL의 WHERE절</p>\n</li>\n<li><p>Project : 표시항목, SQL의 * 이나 컬럼이름(1: 표시, 0:생략)</p>\n</li>\n<li><p>Sort : 순서정렬, SQL의 ORDER BY(1:오름차순, -1:내림차순)</p>\n</li>\n<li><p>Max Time MS : Millisecond이며 Default 5000이 맞음. 60초까지 넣을 필욘 없지만 쿼리복잡도에 따라 시간이 더 필요할 경우 늘려주면됨.</p>\n</li>\n<li><p>Skip : 페이징처리 할때 좋음. (갯수에 따라 pass되고 나머지 것이 표시됨)</p>\n</li>\n<li><p>LIMIT : 출력하고자 하는 한계를 설정, MySQL의 LIMIT / MSSQL의 TOP 과 비슷한 기능.</p>\n</li>\n</ul>\n<h4 id=\"2-UPDATE\"><a href=\"#2-UPDATE\" class=\"headerlink\" title=\"2) UPDATE\"></a>2) UPDATE</h4><h5 id=\"i-다수-Update\"><a href=\"#i-다수-Update\" class=\"headerlink\" title=\"i) 다수 Update\"></a>i) 다수 Update</h5><ul>\n<li>업데이트 예정</li>\n</ul>\n<h5 id=\"ii-일부-Update\"><a href=\"#ii-일부-Update\" class=\"headerlink\" title=\"ii) 일부 Update\"></a>ii) 일부 Update</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107320766-aea3f300-6ae4-11eb-9b88-913be1391b2d.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320766-aea3f300-6ae4-11eb-9b88-913be1391b2d.png\" alt=\"image\"></a></p>\n<ul>\n<li>수정하고자 하는 행을 더블클릭만 하고 Update 버튼으로 적용하면 된다.</li>\n</ul>\n<h4 id=\"3-INSERT\"><a href=\"#3-INSERT\" class=\"headerlink\" title=\"3) INSERT\"></a>3) INSERT</h4><h5 id=\"i-다수-Insert\"><a href=\"#i-다수-Insert\" class=\"headerlink\" title=\"i) 다수 Insert\"></a>i) 다수 Insert</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107320816-c67b7700-6ae4-11eb-90fa-381795b739c2.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320816-c67b7700-6ae4-11eb-90fa-381795b739c2.png\" alt=\"image\"></a></p>\n<ul>\n<li>JSON File을 만들어서 동시에 Insert 시킬 수 있음.(Json Array)</li>\n</ul>\n<h5 id=\"ii-단일-Insert\"><a href=\"#ii-단일-Insert\" class=\"headerlink\" title=\"ii) 단일 Insert\"></a>ii) 단일 Insert</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107320838-d7c48380-6ae4-11eb-8376-5ab019f2913a.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320838-d7c48380-6ae4-11eb-8376-5ab019f2913a.png\" alt=\"image\"></a></p>\n<h4 id=\"4-DELETE\"><a href=\"#4-DELETE\" class=\"headerlink\" title=\"4) DELETE\"></a>4) DELETE</h4><h5 id=\"i-일부-Delete\"><a href=\"#i-일부-Delete\" class=\"headerlink\" title=\"i) 일부 Delete\"></a>i) 일부 Delete</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107320881-ee6ada80-6ae4-11eb-829a-26a9eaabaa32.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107320881-ee6ada80-6ae4-11eb-829a-26a9eaabaa32.png\" alt=\"image\"></a></p>\n","text":"서문Document DB 사용을 원활하게 하기 위하여 MongoDB Compass를 활용해보기로 한다.<br>Studio 3T와 달리 무료이며 MongoDB에서 기본적으로 제공하는 툴이다.(https://www.mongodb.com/try/downlo","link":"","raw":null,"photos":[],"categories":[{"name":"AWS","slug":"AWS","count":3,"path":"api/categories/AWS.json"}],"tags":[{"name":"Document DB","slug":"Document-DB","count":3,"path":"api/tags/Document-DB.json"},{"name":"Mongo","slug":"Mongo","count":3,"path":"api/tags/Mongo.json"}]},{"title":"Studio 3T Guide","slug":"Studio-3T-Guide","date":"2021-02-09T03:45:15.000Z","updated":"2021-02-09T05:22:03.856Z","comments":true,"pin":null,"path":"api/articles/Studio-3T-Guide.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/56995911/107318394-09871b80-6ae0-11eb-854a-cad27c7a6b0e.png","content":"<h2 id=\"서문\"><a href=\"#서문\" class=\"headerlink\" title=\"서문\"></a>서문</h2><ul>\n<li>Document DB 사용을 원활하게 하기 위하여 Studio 3T를 활용해보기로 한다.</li>\n<li>우선, 해당 툴은 유료툴인데 돈이 아깝지 않은 성능을 보여준다.</li>\n<li>Collection을 생성하고 index 작업 및 CRUD 작업에 대하여 툴에서 사용하는 방법과 Back-End에서 사용하는 법을 정의한다.</li>\n</ul>\n<h2 id=\"본문\"><a href=\"#본문\" class=\"headerlink\" title=\"본문\"></a>본문</h2><h3 id=\"1-시작\"><a href=\"#1-시작\" class=\"headerlink\" title=\"1. 시작\"></a>1. 시작</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/107318394-09871b80-6ae0-11eb-854a-cad27c7a6b0e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107318394-09871b80-6ae0-11eb-854a-cad27c7a6b0e.png\" alt=\"image\"></a></p>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/107318424-173ca100-6ae0-11eb-8645-27c3613ba3c7.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107318424-173ca100-6ae0-11eb-8645-27c3613ba3c7.png\" alt=\"image\"></a></p>\n<ul>\n<li>Connect 로 해당 DB접속</li>\n</ul>\n<h3 id=\"2-Database-생성\"><a href=\"#2-Database-생성\" class=\"headerlink\" title=\"2. Database 생성\"></a>2. Database 생성</h3><h4 id=\"1-UI로-생성하는-방법\"><a href=\"#1-UI로-생성하는-방법\" class=\"headerlink\" title=\"1) UI로 생성하는 방법\"></a>1) UI로 생성하는 방법</h4><ul>\n<li>i) replica set으로 보이는 전체 데이터베이스 (마우스우클릭)→ (Add Database)</li>\n</ul>\n<h4 id=\"2-Linux에서-Cmd로-생성하는-방법\"><a href=\"#2-Linux에서-Cmd로-생성하는-방법\" class=\"headerlink\" title=\"2) Linux에서 Cmd로 생성하는 방법\"></a>2) Linux에서 Cmd로 생성하는 방법</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\"> </span><br><span class=\"line\">show dbs                            //Database 목록 확인용</span><br><span class=\"line\">use [DATABASE_NAME]                 //데이터베이스 사용or생성</span><br><span class=\"line\">switched to db [DATABASE_NAME]      //데이터베이스를 상대로 변경</span><br><span class=\"line\">db.runCommand( &#123; serverStatus: 1 &#125;) //데이터베이스 상태확인</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"3-프로그램으로-생성\"><a href=\"#3-프로그램으로-생성\" class=\"headerlink\" title=\"3) 프로그램으로 생성\"></a>3) 프로그램으로 생성</h4><ul>\n<li>i) <a href=\"https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/connect_programmatically.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/connect_programmatically.html</a></li>\n</ul>\n<h3 id=\"3-Collection-생성\"><a href=\"#3-Collection-생성\" class=\"headerlink\" title=\"3. Collection 생성\"></a>3. Collection 생성</h3><h4 id=\"1-UI로-생성하는-방법-1\"><a href=\"#1-UI로-생성하는-방법-1\" class=\"headerlink\" title=\"1) UI로 생성하는 방법\"></a>1) UI로 생성하는 방법</h4><ul>\n<li>i) 폴더모양의 Collections를 (마우스우클릭)→ (Add Collection)</li>\n</ul>\n<h4 id=\"2-Linux에서-Cmd로-생성하는-방법-1\"><a href=\"#2-Linux에서-Cmd로-생성하는-방법-1\" class=\"headerlink\" title=\"2) Linux에서 Cmd로 생성하는 방법\"></a>2) Linux에서 Cmd로 생성하는 방법</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\"> </span><br><span class=\"line\">db.[COLLECTION_NAME]</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"3-프로그램으로-생성-1\"><a href=\"#3-프로그램으로-생성-1\" class=\"headerlink\" title=\"3) 프로그램으로 생성\"></a>3) 프로그램으로 생성</h4><ul>\n<li>i) <a href=\"https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/connect_programmatically.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/documentdb/latest/developerguide/connect_programmatically.html</a></li>\n</ul>\n<h3 id=\"4-Indexing-생성\"><a href=\"#4-Indexing-생성\" class=\"headerlink\" title=\"4. Indexing 생성\"></a>4. Indexing 생성</h3><ul>\n<li>우선, Collection을 생성하면 기본으로 _id 라는 키값이 자동으로 잡힌다. </li>\n<li>아마도 DocumentDB내에서 자체 인덱싱을 위해 쓰는 것으로 보여지며, 이걸 생성안한다고 하면 Collection이 아예 생성되지 않는다.</li>\n</ul>\n<h4 id=\"1-UI로-생성하는-방법-2\"><a href=\"#1-UI로-생성하는-방법-2\" class=\"headerlink\" title=\"1) UI로 생성하는 방법\"></a>1) UI로 생성하는 방법</h4><ul>\n<li>i) 생성하고자 하는 Collection (마우스우클릭)→ (Add Index..)  [Drop Index 는 삭제]</li>\n</ul>\n<h4 id=\"2-Linux에서-Cmd로-생성하는-방법-2\"><a href=\"#2-Linux에서-Cmd로-생성하는-방법-2\" class=\"headerlink\" title=\"2) Linux에서 Cmd로 생성하는 방법\"></a>2) Linux에서 Cmd로 생성하는 방법</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\"> </span><br><span class=\"line\">db.[COLLECTION_NAME].createIndex(&#123;[KEY]:-1&#125;, &#123;background: <span class=\"literal\">true</span>&#125;); //1은 ascending, -1은 descending / background는 아래 설명</span><br></pre></td></tr></table></figure></div>\n\n<p><a href=\"(https://user-images.githubusercontent.com/56995911/107318654-97fb9d00-6ae0-11eb-8a56-6f2921e6a40d.png)\"><img src=\"https://user-images.githubusercontent.com/56995911/107318654-97fb9d00-6ae0-11eb-8a56-6f2921e6a40d.png\" alt=\"image\"></a></p>\n<h3 id=\"5-CRUD\"><a href=\"#5-CRUD\" class=\"headerlink\" title=\"5. CRUD\"></a>5. CRUD</h3><h4 id=\"1-SELECT\"><a href=\"#1-SELECT\" class=\"headerlink\" title=\"1) SELECT\"></a>1) SELECT</h4><h5 id=\"i-UI를-통한-Select\"><a href=\"#i-UI를-통한-Select\" class=\"headerlink\" title=\"i) UI를 통한 Select\"></a>i) UI를 통한 Select</h5><p><a href=\"https://user-images.githubusercontent.com/56995911/107318707-b2ce1180-6ae0-11eb-8ff8-d01453b8f7cb.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107318707-b2ce1180-6ae0-11eb-8ff8-d01453b8f7cb.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/107318732-c6797800-6ae0-11eb-88df-97fc6d6fe3dc.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107318732-c6797800-6ae0-11eb-88df-97fc6d6fe3dc.png\" alt=\"image\"></a></p>\n<ul>\n<li>MongoDB와 같은 Docuent성 NoSQL을 처음 쓴다면, UI로 자동완성 시켜주는 쿼리메이커가 유용히 쓰일 수 있다.</li>\n<li>또한, Query Code탭을 통해 각종언어에 따른 예제를 만들어낼 수 있다.(실제 구동이 된다)</li>\n<li>Function 기반 Call에 익숙치 않다면, SQL 탭에서 기존에 쓰던 Select 문을 통해 자동완성 된 코드를 받아볼 수 있다.</li>\n</ul>\n<p><a href=\"https://user-images.githubusercontent.com/56995911/107318761-d5f8c100-6ae0-11eb-9527-a57f7fd7b190.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/107318761-d5f8c100-6ae0-11eb-9527-a57f7fd7b190.png\" alt=\"image\"></a></p>\n<h5 id=\"ii-쿼리Function을-통한-Select\"><a href=\"#ii-쿼리Function을-통한-Select\" class=\"headerlink\" title=\"ii) 쿼리Function을 통한 Select\"></a>ii) 쿼리Function을 통한 Select</h5><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\">// 전체 Select</span><br><span class=\"line\">db.[COLLECTION_NAME].find();</span><br><span class=\"line\"> </span><br><span class=\"line\">// 조건 Select</span><br><span class=\"line\">db.[COLLECTION_NAME].find(&#123;<span class=\"string\">'name'</span>:<span class=\"string\">'Frank'</span>&#125;);</span><br><span class=\"line\">db.[COLLECTION_NAME].find(&#123;<span class=\"string\">'status'</span>:&#123;<span class=\"variable\">$in</span>:[<span class=\"string\">'active'</span>]&#125;&#125;);</span><br><span class=\"line\"> </span><br><span class=\"line\">// 조건+옵션</span><br><span class=\"line\">// https://docs.mongodb.com/manual/reference/method/</span><br><span class=\"line\">db.getCollection(<span class=\"string\">\"profiles\"</span>).find(&#123;<span class=\"string\">\"status\"</span> : <span class=\"string\">\"active\"</span>&#125;).skip(1).<span class=\"built_in\">limit</span>(1).pretty();</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"2-UPDATE\"><a href=\"#2-UPDATE\" class=\"headerlink\" title=\"2) UPDATE\"></a>2) UPDATE</h4><h5 id=\"i-다수-Update\"><a href=\"#i-다수-Update\" class=\"headerlink\" title=\"i) 다수 Update\"></a>i) 다수 Update</h5><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\">// nice컬럼과 meet 컬럼에 to,you 인 값을 포함하고 있는 document는 전부 meet컬럼을 me로 수정.</span><br><span class=\"line\">db.[COLLECTION_NAME].findAndModify(&#123;query:&#123;nice:<span class=\"string\">\"to\"</span>,meet:<span class=\"string\">\"you\"</span>&#125;,update:&#123;<span class=\"variable\">$set</span>:&#123;meet:<span class=\"string\">\"me\"</span>&#125;&#125;, upsert:<span class=\"literal\">true</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">// 어떤컬럼이건 상관없이 meet컬럼을 모두 me로 업데이트</span><br><span class=\"line\">db.[COLLECTION_NAME].findAndModify(&#123;query:&#123;&#125;,update:&#123;<span class=\"variable\">$set</span>:&#123;meet:<span class=\"string\">\"me\"</span>&#125;&#125;, upsert:<span class=\"literal\">true</span>);</span><br></pre></td></tr></table></figure></div>\n\n<h5 id=\"ii-일부-Update\"><a href=\"#ii-일부-Update\" class=\"headerlink\" title=\"ii) 일부 Update\"></a>ii) 일부 Update</h5><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\">// nice컬럼과 meet 컬럼에 to,you 인 값을 포함하고 있는 document는 전부 meet컬럼을 me로 수정.</span><br><span class=\"line\">db.[COLLECTION_NAME].findAndModify(&#123;query:&#123;nice:<span class=\"string\">\"to\"</span>,meet:<span class=\"string\">\"you\"</span>&#125;,update:&#123;<span class=\"variable\">$set</span>:&#123;meet:<span class=\"string\">\"me\"</span>&#125;&#125;, upsert:<span class=\"literal\">true</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">// status 가 active이면서 name이 Karen일 경우 status를 inactive로 변경</span><br><span class=\"line\">db.[COLLECTION_NAME].findOneAndUpdate(&#123;status : <span class=\"string\">'active'</span>, name:<span class=\"string\">'Karen'</span>&#125;, &#123;<span class=\"variable\">$set</span>:&#123;status:<span class=\"string\">'inactive'</span>&#125;&#125;);</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"3-INSERT\"><a href=\"#3-INSERT\" class=\"headerlink\" title=\"3) INSERT\"></a>3) INSERT</h4><h5 id=\"i-단일-Insert\"><a href=\"#i-단일-Insert\" class=\"headerlink\" title=\"i) 단일 Insert\"></a>i) 단일 Insert</h5><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\"> </span><br><span class=\"line\">db.[COLLECTION_NAME].insert(&#123;<span class=\"string\">\"nice\"</span>:<span class=\"string\">\"to\"</span>,<span class=\"string\">\"meet\"</span>:<span class=\"string\">\"you\"</span>&#125;);</span><br></pre></td></tr></table></figure></div>\n\n<h5 id=\"ii-다수-Insert\"><a href=\"#ii-다수-Insert\" class=\"headerlink\" title=\"ii) 다수 Insert\"></a>ii) 다수 Insert</h5><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\"> </span><br><span class=\"line\">db.[COLLECTION_NAME].insert([&#123;<span class=\"string\">\"nice\"</span>:<span class=\"string\">\"to\"</span>,<span class=\"string\">\"meet\"</span>:<span class=\"string\">\"you\"</span>&#125;, &#123;..........&#125;]);</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"4-DELETE\"><a href=\"#4-DELETE\" class=\"headerlink\" title=\"4) DELETE\"></a>4) DELETE</h4><h5 id=\"i-전체-Delete\"><a href=\"#i-전체-Delete\" class=\"headerlink\" title=\"i) 전체 Delete\"></a>i) 전체 Delete</h5><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\"> </span><br><span class=\"line\">db.[COLLECTION_NAME].remove( &#123; &#125; )</span><br></pre></td></tr></table></figure></div>\n\n<h5 id=\"ii-조건-Delete\"><a href=\"#ii-조건-Delete\" class=\"headerlink\" title=\"ii) 조건 Delete\"></a>ii) 조건 Delete</h5><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rs0:PRIMARY&gt;    </span><br><span class=\"line\"> </span><br><span class=\"line\">//1개의 조건</span><br><span class=\"line\">db.[COLLECTION_NAME].remove( &#123; name: <span class=\"string\">\"Frank\"</span> &#125; );</span><br><span class=\"line\"> </span><br><span class=\"line\">//2개 이상 조건</span><br><span class=\"line\">db.[COLLECTION_NAME].remove( &#123; nice : <span class=\"string\">\"to\"</span>, meet : <span class=\"string\">\"you\"</span>&#125; );</span><br></pre></td></tr></table></figure></div>\n","text":"서문Document DB 사용을 원활하게 하기 위하여 Studio 3T를 활용해보기로 한다.우선, 해당 툴은 유료툴인데 돈이 아깝지 않은 성능을 보여준다.Collection을 생성하고 index 작업 및 CRUD 작업에 대하여 툴에서 사용하는 방법과 ","link":"","raw":null,"photos":[],"categories":[{"name":"AWS","slug":"AWS","count":3,"path":"api/categories/AWS.json"}],"tags":[{"name":"Document DB","slug":"Document-DB","count":3,"path":"api/tags/Document-DB.json"},{"name":"Mongo","slug":"Mongo","count":3,"path":"api/tags/Mongo.json"}]}]}