{"name":"secretsmanager","slug":"secretsmanager","count":2,"posts":[{"title":"SNS","slug":"SNS","date":"2020-05-06T05:26:34.000Z","updated":"2020-11-23T01:31:25.299Z","comments":true,"pin":null,"path":"api/articles/SNS.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/62123161/81143669-536d2f00-8fad-11ea-8ade-3a21d5987656.png","content":"<h2 id=\"개발환경-구축\"><a href=\"#개발환경-구축\" class=\"headerlink\" title=\"개발환경 구축\"></a>개발환경 구축</h2><p>※ 기본 개발환경</p>\n<ul>\n<li>IntelliJ</li>\n<li>Java, Spring</li>\n<li>AWS Console</li>\n</ul>\n<h2 id=\"SNS-설명\"><a href=\"#SNS-설명\" class=\"headerlink\" title=\"SNS 설명\"></a>SNS 설명</h2><ul>\n<li>사용자에게 Noti 보내주는게 주요 임무.</li>\n<li>기본 기능으로는 Push(FCM, GCM), 이메일, SMS, 등 … 다용도로 보낼 수 있다.</li>\n</ul>\n<h3 id=\"1-SNS-Topic\"><a href=\"#1-SNS-Topic\" class=\"headerlink\" title=\"1) SNS Topic\"></a>1) SNS Topic</h3><p><a href=\"https://user-images.githubusercontent.com/62123161/81143669-536d2f00-8fad-11ea-8ade-3a21d5987656.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81143669-536d2f00-8fad-11ea-8ade-3a21d5987656.png\" alt=\"sns_02\"></a></p>\n<ul>\n<li>Topic이라는 그룹개념을 생성하고, 메세지를 받을 Subscription들을 등록하면 된다. 원하는 Protocol을 설정하면 그대로 받을 수 있다.</li>\n<li>참고사항 : 서울 리전(ap-northeast-2)는 문자서비스(SMS)를 사용할 수 없다. 도쿄리전이나, Virginia 리전을 이용하면 좋다. </li>\n<li>그리고, 기본 Limit은 말도안되지만 1달러이다. 한도를 증액 요청해야 한다.</li>\n</ul>\n<h3 id=\"2-SNS-Subscription\"><a href=\"#2-SNS-Subscription\" class=\"headerlink\" title=\"2) SNS Subscription\"></a>2) SNS Subscription</h3><p><a href=\"https://user-images.githubusercontent.com/62123161/81143663-51a36b80-8fad-11ea-922e-568047d624c5.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81143663-51a36b80-8fad-11ea-922e-568047d624c5.png\" alt=\"sns_01\"></a></p>\n<ul>\n<li>Subscription은 말그대로 구독자다. </li>\n<li>HTTP(80), HTTPS(443), Email, SQS, Lambda 등 각종 AWS서비스와 3rd party 애플리케이션에 보낼 수 있다.</li>\n</ul>\n<h3 id=\"3-SNS-Publish-Message\"><a href=\"#3-SNS-Publish-Message\" class=\"headerlink\" title=\"3) SNS Publish Message\"></a>3) SNS Publish Message</h3><p><a href=\"https://user-images.githubusercontent.com/62123161/81143668-52d49880-8fad-11ea-99b6-946c8cbec576.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81143668-52d49880-8fad-11ea-99b6-946c8cbec576.png\" alt=\"sns_03\"></a></p>\n<ul>\n<li>Publish는 간단히 제목과 본문으로 보내줘도 된다. 큰 의미가 없다.</li>\n</ul>\n<h3 id=\"4-Subscriptions에-여러-EndPoint를-등록할-수-있고-각-Endpoint들을-그룹으로-묶어줄-수-있다\"><a href=\"#4-Subscriptions에-여러-EndPoint를-등록할-수-있고-각-Endpoint들을-그룹으로-묶어줄-수-있다\" class=\"headerlink\" title=\"4) Subscriptions에 여러 EndPoint를 등록할 수 있고, 각 Endpoint들을 그룹으로 묶어줄 수 있다.\"></a>4) Subscriptions에 여러 EndPoint를 등록할 수 있고, 각 Endpoint들을 그룹으로 묶어줄 수 있다.</h3><p><a href=\"https://user-images.githubusercontent.com/62123161/81145089-8533c500-8fb0-11ea-8ed7-96c10b10cc60.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81145089-8533c500-8fb0-11ea-8ed7-96c10b10cc60.png\" alt=\"sns_04\"></a></p>\n<h2 id=\"소스\"><a href=\"#소스\" class=\"headerlink\" title=\"소스\"></a>소스</h2><h3 id=\"1-Credentials\"><a href=\"#1-Credentials\" class=\"headerlink\" title=\"1) Credentials\"></a>1) Credentials</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>인증생성</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static BasicAWSCredentials creds = new BasicAWSCredentials(<span class=\"string\">\"ACCESS_KEY\"</span>,<span class=\"string\">\"SECRET_KEY\"</span>);</span><br><span class=\"line\">    public static AmazonSNSClient client = (AmazonSNSClient)((AmazonSNSClientBuilder)((AmazonSNSClientBuilder)AmazonSNSClient.builder().withCredentials(new AWSStaticCredentialsProvider(creds))).withRegion(aws_region)).build(); //provide credentials here</span><br><span class=\"line\">    public static AmazonSNS snsClient = (AmazonSNS)((AmazonSNSClientBuilder)((AmazonSNSClientBuilder) AmazonSNSClient.builder().withCredentials(new AWSStaticCredentialsProvider(creds))).withRegion(aws_region)).build();</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"2-Create-Topic\"><a href=\"#2-Create-Topic\" class=\"headerlink\" title=\"2) Create Topic\"></a>2) Create Topic</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>토픽 생성</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//Create Topic</span><br><span class=\"line\">BasicAWSCredentials creds = new BasicAWSCredentials(aws_access_key_id,aws_secret_access_key);</span><br><span class=\"line\">AmazonSNS snsClient = (AmazonSNS)((AmazonSNSClientBuilder)((AmazonSNSClientBuilder) AmazonSNSClient.builder().withCredentials(new AWSStaticCredentialsProvider(creds))).withRegion(aws_region)).build();</span><br><span class=\"line\">CreateTopicResult createTopicResult = snsClient.createTopic(<span class=\"string\">\"myTopic\"</span>);</span><br><span class=\"line\">String topicArn = createTopicResult.getTopicArn();</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"3-Delete-Topic\"><a href=\"#3-Delete-Topic\" class=\"headerlink\" title=\"3) Delete Topic\"></a>3) Delete Topic</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>토픽삭제</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//Delete Topic</span><br><span class=\"line\">BasicAWSCredentials creds = new BasicAWSCredentials(aws_access_key_id,aws_secret_access_key);</span><br><span class=\"line\">AmazonSNS snsClient = (AmazonSNS)((AmazonSNSClientBuilder)((AmazonSNSClientBuilder) AmazonSNSClient.builder().withCredentials(new AWSStaticCredentialsProvider(creds))).withRegion(aws_region)).build();</span><br><span class=\"line\">snsClient.deleteTopic(<span class=\"string\">\"myTopic\"</span>);</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"4-Get-Topic-list\"><a href=\"#4-Get-Topic-list\" class=\"headerlink\" title=\"4) Get Topic list\"></a>4) Get Topic list</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>SNS내 토픽리스트 받아오기.</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//////TODO:SNS (List)</span><br><span class=\"line\">            ListTopicsResult listTopicsResult = snsClient.listTopics();</span><br><span class=\"line\">            HashMap&lt;String, String&gt; listTopics = new HashMap&lt;String, String&gt;();</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(int i = 0; i&lt;listTopicsResult.getTopics().size();i++)&#123;</span><br><span class=\"line\">                String topic_arn = listTopicsResult.getTopics().get(i).toString().replace(<span class=\"string\">\"TopicArn: \"</span>,<span class=\"string\">\"\"</span>).replace(<span class=\"string\">\"&#123;\"</span>,<span class=\"string\">\"\"</span>).replace(<span class=\"string\">\"&#125;\"</span>,<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">                String[] topicSplit = topic_arn.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">                String topic_name = topicSplit[topicSplit.length-1];</span><br><span class=\"line\"></span><br><span class=\"line\">                listTopics.put(topic_name, topic_arn);</span><br><span class=\"line\">            &#125;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"5-Publish-Message-Send\"><a href=\"#5-Publish-Message-Send\" class=\"headerlink\" title=\"5) Publish Message(Send)\"></a>5) Publish Message(Send)</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>TopicArn과 msg로 전달가능</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Publish a message to an Amazon SNS topic.</span><br><span class=\"line\">final String msg = <span class=\"string\">\"If you receive this message, publishing a message to an Amazon SNS topic works.\"</span>;</span><br><span class=\"line\">final PublishRequest publishRequest = new PublishRequest(topicArn, msg);</span><br><span class=\"line\">final PublishResult publishResponse = snsClient.publish(publishRequest);</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"6-Etc…\"><a href=\"#6-Etc…\" class=\"headerlink\" title=\"6) Etc….\"></a>6) Etc….</h3><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>(번외)SQS에 보내서 Queue 방식으로 SNS에 전송</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">            //TODO: search from topic list</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(findSNSArn.length() &gt; 0)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (findSQSArn.length() &gt; 0) &#123;</span><br><span class=\"line\">                    //TODO: subscribe!!!</span><br><span class=\"line\">                    Topics.subscribeQueue(snsClient, sqsClient, findSNSArn, findSQSArn);</span><br><span class=\"line\">                    //TODO: save the token to sns</span><br><span class=\"line\">                    String token_ARN = registerWithSNS(smartPhoneKey);</span><br><span class=\"line\">                    //TODO: userSeq, smartPhoneKey, smartPhoneType, token_ARN .....mySQL</span><br><span class=\"line\">                    String[] <span class=\"built_in\">where</span> = &#123;<span class=\"string\">\"USER_SEQ\"</span>, Integer.toString(userSeq)&#125;; //&#123;<span class=\"string\">\"gid\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"uid\"</span>,<span class=\"string\">\"2\"</span>,<span class=\"string\">\"CountryCD\"</span>,<span class=\"string\">\"1\"</span>,<span class=\"string\">\"test\"</span>&#125;;</span><br><span class=\"line\">                    ResultSet resultSet = mysqlCRUD_R(<span class=\"built_in\">where</span>, <span class=\"string\">\"\"</span>);</span><br><span class=\"line\">                    int row = rowCount(resultSet);</span><br><span class=\"line\">                    //<span class=\"keyword\">if</span>, row exist : update</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(row &gt; 0)&#123;</span><br><span class=\"line\">                        mysqlCRUD_CU(<span class=\"string\">\"Update\"</span>, token_ARN);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    //<span class=\"keyword\">if</span>, row not exist : insert</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        mysqlCRUD_CU(<span class=\"string\">\"Create\"</span>, token_ARN);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//                //메세지전송!!</span><br><span class=\"line\">//                snsClient.publish(new PublishRequest(findSNSArn, <span class=\"string\">\"Hello SNS World\"</span>).withSubject(<span class=\"string\">\"Subject\"</span>));</span><br><span class=\"line\">//</span><br><span class=\"line\">//                List&lt;Message&gt; messages = sqsClient.receiveMessage(new ReceiveMessageRequest(findSQSArn).getMessages();</span><br><span class=\"line\">//                <span class=\"keyword\">if</span> (messages.size() &gt; 0) &#123;</span><br><span class=\"line\">//                    byte[] decodedBytes = Base64.decodeBase64((messages.get(0)).getBody().getBytes());</span><br><span class=\"line\">//                    System.out.println(<span class=\"string\">\"Message: \"</span> +  new String(decodedBytes));</span><br><span class=\"line\">//                &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">return</span> new GatewayResponse(<span class=\"string\">\"[SQS]Topic Arn does not exist.\"</span>, headers, 400);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">return</span> new GatewayResponse(<span class=\"string\">\"[SNS]Topic Arn does not exist.\"</span>, headers, 400);</span><br><span class=\"line\">            &#125;</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><figcaption><span>(번외) Util들..</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    //TODO:find value from topic list</span><br><span class=\"line\">    public static String topicSearch(HashMap&lt;String, String&gt; hashMap, String topicName)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(hashMap.size() &gt; 0)&#123;</span><br><span class=\"line\">            String value = hashMap.get(topicName);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(value.length() &lt; 1)&#123;</span><br><span class=\"line\">                <span class=\"built_in\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">return</span> value;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class=\"line\">    public String registerWithSNS(String token) &#123;</span><br><span class=\"line\">        String endpointArn = retrieveEndpointArn();</span><br><span class=\"line\"></span><br><span class=\"line\">        boolean updateNeeded = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        boolean createNeeded = (null == endpointArn);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (createNeeded) &#123;</span><br><span class=\"line\">            // No platform endpoint ARN is stored; need to call createEndpoint.</span><br><span class=\"line\">            endpointArn = createEndpoint(token, platformApplication_ARN);</span><br><span class=\"line\">            createNeeded = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Retrieving platform endpoint data...\"</span>);</span><br><span class=\"line\">        // Look up the platform endpoint and make sure the data <span class=\"keyword\">in</span> it is current, even <span class=\"keyword\">if</span></span><br><span class=\"line\">        // it was just created.</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            GetEndpointAttributesRequest geaReq =</span><br><span class=\"line\">                    new GetEndpointAttributesRequest()</span><br><span class=\"line\">                            .withEndpointArn(endpointArn);</span><br><span class=\"line\">            GetEndpointAttributesResult geaRes =</span><br><span class=\"line\">                    client.getEndpointAttributes(geaReq);</span><br><span class=\"line\"></span><br><span class=\"line\">            updateNeeded = !geaRes.getAttributes().get(<span class=\"string\">\"Token\"</span>).equals(token)</span><br><span class=\"line\">                    || !geaRes.getAttributes().get(<span class=\"string\">\"Enabled\"</span>).equalsIgnoreCase(<span class=\"string\">\"true\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; catch (NotFoundException nfe) &#123;</span><br><span class=\"line\">            // We had a stored ARN, but the platform endpoint associated with it</span><br><span class=\"line\">            // disappeared. Recreate it.</span><br><span class=\"line\">            createNeeded = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (createNeeded) &#123;</span><br><span class=\"line\">            createEndpoint(token, platformApplication_ARN);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"updateNeeded = \"</span> + updateNeeded);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (updateNeeded) &#123;</span><br><span class=\"line\">            // The platform endpoint is out of sync with the current data;</span><br><span class=\"line\">            // update the token and <span class=\"built_in\">enable</span> it.</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"Updating platform endpoint \"</span> + endpointArn);</span><br><span class=\"line\">            Map attribs = new HashMap();</span><br><span class=\"line\">            attribs.put(<span class=\"string\">\"Token\"</span>, token);</span><br><span class=\"line\">            attribs.put(<span class=\"string\">\"Enabled\"</span>, <span class=\"string\">\"true\"</span>);</span><br><span class=\"line\">            SetEndpointAttributesRequest saeReq =</span><br><span class=\"line\">                    new SetEndpointAttributesRequest()</span><br><span class=\"line\">                            .withEndpointArn(endpointArn)</span><br><span class=\"line\">                            .withAttributes(attribs);</span><br><span class=\"line\">            client.setEndpointAttributes(saeReq);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> endpointArn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * @<span class=\"built_in\">return</span> never null</span><br><span class=\"line\">     * */</span><br><span class=\"line\">    private String createEndpoint(String token, String PlatformApplicationARN) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        String endpointArn = null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"Creating platform endpoint with token \"</span> + token);</span><br><span class=\"line\">            CreatePlatformEndpointRequest cpeReq =</span><br><span class=\"line\">                    new CreatePlatformEndpointRequest()</span><br><span class=\"line\">//                            .withPlatformApplicationArn(applicationArn)</span><br><span class=\"line\">                            .withPlatformApplicationArn(platformApplication_ARN)</span><br><span class=\"line\">                            .withToken(token);</span><br><span class=\"line\">            CreatePlatformEndpointResult cpeRes = client</span><br><span class=\"line\">                    .createPlatformEndpoint(cpeReq);</span><br><span class=\"line\">            endpointArn = cpeRes.getEndpointArn();</span><br><span class=\"line\">        &#125; catch (InvalidParameterException ipe) &#123;</span><br><span class=\"line\">            String message = ipe.getErrorMessage();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"Exception message: \"</span> + message);</span><br><span class=\"line\">            Pattern p = Pattern</span><br><span class=\"line\">                    .compile(<span class=\"string\">\".*Endpoint (arn:aws:sns[^ ]+) already exists \"</span> +</span><br><span class=\"line\">                            <span class=\"string\">\"with the same [Tt]oken.*\"</span>);</span><br><span class=\"line\">            Matcher m = p.matcher(message);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (m.matches()) &#123;</span><br><span class=\"line\">                // The platform endpoint already exists <span class=\"keyword\">for</span> this token, but with</span><br><span class=\"line\">                // additional custom data that</span><br><span class=\"line\">                // createEndpoint does not want to overwrite. Just use the</span><br><span class=\"line\">                // existing platform endpoint.</span><br><span class=\"line\">                endpointArn = m.group(1);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                // Rethrow the exception, the input is actually bad.</span><br><span class=\"line\">                throw ipe;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        storeEndpointArn(endpointArn);</span><br><span class=\"line\">        <span class=\"built_in\">return</span> endpointArn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * @<span class=\"built_in\">return</span> the ARN the app was registered under previously, or null <span class=\"keyword\">if</span> no</span><br><span class=\"line\">     *         platform endpoint ARN is stored.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private String <span class=\"function\"><span class=\"title\">retrieveEndpointArn</span></span>() &#123;</span><br><span class=\"line\">        // Retrieve the platform endpoint ARN from permanent storage,</span><br><span class=\"line\">        // or <span class=\"built_in\">return</span> null <span class=\"keyword\">if</span> null is stored.</span><br><span class=\"line\">        <span class=\"built_in\">return</span> arnStorage;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * Stores the platform endpoint ARN <span class=\"keyword\">in</span> permanent storage <span class=\"keyword\">for</span> lookup next time.</span><br><span class=\"line\">     * */</span><br><span class=\"line\">    private void storeEndpointArn(String endpointArn) &#123;</span><br><span class=\"line\">        // Write the platform endpoint ARN to permanent storage.</span><br><span class=\"line\">        arnStorage = endpointArn;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////</span><br><span class=\"line\">    public static ResultSet mysqlCRUD_R(String[] <span class=\"built_in\">where</span>, String orderby)&#123;</span><br><span class=\"line\">        Connection conn = null;</span><br><span class=\"line\">        Statement stmt = null;</span><br><span class=\"line\"></span><br><span class=\"line\">        try&#123;</span><br><span class=\"line\">            Class.forName(JDBC_DRIVER);</span><br><span class=\"line\">            conn = DriverManager.getConnection(mySQLConnection,USERNAME,PASSWORD);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"\\n- MySQL Connection\"</span>);</span><br><span class=\"line\">            stmt = conn.createStatement(</span><br><span class=\"line\">                    ResultSet.TYPE_SCROLL_INSENSITIVE,</span><br><span class=\"line\">                    ResultSet.CONCUR_READ_ONLY);</span><br><span class=\"line\"></span><br><span class=\"line\">            String sql;</span><br><span class=\"line\">            sql = <span class=\"string\">\"SELECT * FROM \"</span>+insertDataTableName;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(where.length &gt; 0) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((where.length % 2) == 0) &#123;//Even Number</span><br><span class=\"line\">                    String str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">                    str += <span class=\"string\">\" WHERE \"</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (int i = 0; i &lt; where.length; i++) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>((where.length/2) == ((i/2)+1))&#123;//final</span><br><span class=\"line\">                            str += <span class=\"built_in\">where</span>[i] + <span class=\"string\">\"='\"</span> + <span class=\"built_in\">where</span>[i + 1] + <span class=\"string\">\"' \"</span>;</span><br><span class=\"line\">                            i++;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                            str += <span class=\"built_in\">where</span>[i] + <span class=\"string\">\"='\"</span> + <span class=\"built_in\">where</span>[i + 1] + <span class=\"string\">\"' AND \"</span>;</span><br><span class=\"line\">                            i++;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    sql += str;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123; //Odd Number</span><br><span class=\"line\">                    String str = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">                    str += <span class=\"string\">\" WHERE \"</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (int i = 0; i &lt; where.length - 1; i++) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>((where.length/2) == ((i/2)+1))&#123;//final</span><br><span class=\"line\">                            str += <span class=\"built_in\">where</span>[i] + <span class=\"string\">\"='\"</span> + <span class=\"built_in\">where</span>[i + 1] + <span class=\"string\">\"' \"</span>;</span><br><span class=\"line\">                            i++;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                            str += <span class=\"built_in\">where</span>[i] + <span class=\"string\">\"='\"</span> + <span class=\"built_in\">where</span>[i + 1] + <span class=\"string\">\"' AND \"</span>;</span><br><span class=\"line\">                            i++;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    sql += str;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(orderby.length()&gt;0)&#123;</span><br><span class=\"line\">                sql += orderby;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            rs = stmt.executeQuery(sql);</span><br><span class=\"line\">            int row = rowCount(rs);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(rs.next())&#123;</span><br><span class=\"line\">                String groupName = rs.getString(<span class=\"string\">\"USER_SEQ\"</span>);</span><br><span class=\"line\">                String memberName = rs.getString(<span class=\"string\">\"SMARTPHONE_KEY\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">                System.out.print(<span class=\"string\">\"\\n** USER_SEQ : \"</span> + groupName);</span><br><span class=\"line\">                System.out.print(<span class=\"string\">\"\\n    -&gt; SMARTPHONE_KEY: \"</span> + memberName);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            //rs.close();</span><br><span class=\"line\">            //stmt.close();</span><br><span class=\"line\">            //conn.close();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;catch(SQLException se1)&#123;</span><br><span class=\"line\">            se1.printStackTrace();</span><br><span class=\"line\">        &#125;catch(Exception ex)&#123;</span><br><span class=\"line\">            ex.printStackTrace();</span><br><span class=\"line\">        &#125;finally&#123;</span><br><span class=\"line\">//            try&#123;</span><br><span class=\"line\">//                <span class=\"keyword\">if</span>(stmt!=null)</span><br><span class=\"line\">//                    stmt.close();</span><br><span class=\"line\">//            &#125;catch(SQLException se2)&#123;</span><br><span class=\"line\">//</span><br><span class=\"line\">//            &#125;</span><br><span class=\"line\">//            try&#123;</span><br><span class=\"line\">//                <span class=\"keyword\">if</span>(conn!=null)</span><br><span class=\"line\">//                    conn.close();</span><br><span class=\"line\">//            &#125;catch(SQLException se)&#123;</span><br><span class=\"line\">//                se.printStackTrace();</span><br><span class=\"line\">//            &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"\\n\\n- MySQL Connection Close\"</span>);</span><br><span class=\"line\">            <span class=\"built_in\">return</span> rs;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static int rowCount(ResultSet resultSet)&#123;</span><br><span class=\"line\">        int size = 0;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            resultSet.last();</span><br><span class=\"line\">            size = resultSet.getRow();</span><br><span class=\"line\">            resultSet.beforeFirst();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch(Exception ex) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">return</span> 0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> size;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    public static ResultSet mysqlCRUD_CU(String devide, String token_ARN)&#123;</span><br><span class=\"line\">        Connection con = null;</span><br><span class=\"line\">        PreparedStatement pstmt = null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            String SQL = null;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(devide == <span class=\"string\">\"Create\"</span>)&#123;</span><br><span class=\"line\">                SQL = <span class=\"string\">\"INSERT문\"</span>;</span><br><span class=\"line\">                Class.forName(JDBC_DRIVER);</span><br><span class=\"line\">                con = DriverManager.getConnection(mySQLConnection, USERNAME, PASSWORD);</span><br><span class=\"line\">                java.util.Date utilDate = new java.util.Date ();</span><br><span class=\"line\">                pstmt = con.prepareStatement(SQL);</span><br><span class=\"line\">                pstmt.setInt(N,VALUE);</span><br><span class=\"line\">                pstmt.setString(N, VALUE);</span><br><span class=\"line\">                pstmt.setNull(N, Types.VARCHAR); //java.sql.Types.NULL</span><br><span class=\"line\">                pstmt.setDate(N, java.sql.Date.valueOf(java.time.LocalDate.now()));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(devide == <span class=\"string\">\"Update\"</span>)&#123;</span><br><span class=\"line\">                SQL = <span class=\"string\">\"UPDATE문\"</span>;</span><br><span class=\"line\">                Class.forName(JDBC_DRIVER);</span><br><span class=\"line\">                con = DriverManager.getConnection(mySQLConnection, USERNAME, PASSWORD);</span><br><span class=\"line\">                java.util.Date utilDate = new java.util.Date ();</span><br><span class=\"line\">                pstmt = con.prepareStatement(SQL);</span><br><span class=\"line\">                pstmt.setString(N, VALUE);</span><br><span class=\"line\">                pstmt.setInt(N, VALUE);</span><br><span class=\"line\">                pstmt.setNull(N, Types.VARCHAR); //java.sql.Types.NULL</span><br><span class=\"line\">                pstmt.setDate(N, java.sql.Date.valueOf(java.time.LocalDate.now()));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">return</span> rs;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            int r = pstmt.executeUpdate();</span><br><span class=\"line\">        &#125; catch (SQLException e) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">return</span> rs=null;</span><br><span class=\"line\">        &#125; catch (ClassNotFoundException e1) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">return</span> rs=null;</span><br><span class=\"line\">        &#125; finally &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (pstmt != null) &#123;</span><br><span class=\"line\">                try &#123;</span><br><span class=\"line\">                    pstmt.close();</span><br><span class=\"line\">                &#125; catch (SQLException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (con != null) &#123;</span><br><span class=\"line\">                try &#123;</span><br><span class=\"line\">                    con.close();</span><br><span class=\"line\">                &#125; catch (SQLException e) &#123;</span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">return</span> rs;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"번외\"><a href=\"#번외\" class=\"headerlink\" title=\"번외\"></a>번외</h3><ul>\n<li>각 유형의 가입자에게 다른 컨텐츠를 보내려면 “각 전송 프로토콜에 대한 사용자 정의 페이로드”를 선택한 다음 각 프로토콜에 대한 지시 사항이있는 JSON 오브젝트를 삽입<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"default\"</span>: <span class=\"string\">\"Sample fallback message\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"email\"</span>: <span class=\"string\">\"Sample message for email endpoints\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"sqs\"</span>: <span class=\"string\">\"Sample message for Amazon SQS endpoints\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"lambda\"</span>: <span class=\"string\">\"Sample message for AWS Lambda endpoints\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"http\"</span>: <span class=\"string\">\"Sample message for HTTP endpoints\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"https\"</span>: <span class=\"string\">\"Sample message for HTTPS endpoints\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"sms\"</span>: <span class=\"string\">\"Sample message for SMS endpoints\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"APNS\"</span>: <span class=\"string\">\"&#123;\\\"aps\\\":&#123;\\\"alert\\\": \\\"Sample message for iOS endpoints\\\"&#125; &#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"APNS_SANDBOX\"</span>: <span class=\"string\">\"&#123;\\\"aps\\\":&#123;\\\"alert\\\":\\\"Sample message for iOS development endpoints\\\"&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"APNS_VOIP\"</span>: <span class=\"string\">\"&#123;\\\"aps\\\":&#123;\\\"alert\\\":\\\"Sample message for Apple VoIP endpoints\\\"&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"APNS_VOIP_SANDBOX\"</span>: <span class=\"string\">\"&#123;\\\"aps\\\":&#123;\\\"alert\\\": \\\"Sample message for Apple VoIP development endpoints\\\"&#125; &#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"MACOS\"</span>: <span class=\"string\">\"&#123;\\\"aps\\\":&#123;\\\"alert\\\":\\\"Sample message for MacOS endpoints\\\"&#125;&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"MACOS_SANDBOX\"</span>: <span class=\"string\">\"&#123;\\\"aps\\\":&#123;\\\"alert\\\": \\\"Sample message for MacOS development endpoints\\\"&#125; &#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"GCM\"</span>: <span class=\"string\">\"&#123; \\\"data\\\": &#123; \\\"message\\\": \\\"Sample message for Android endpoints\\\" &#125; &#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"ADM\"</span>: <span class=\"string\">\"&#123; \\\"data\\\": &#123; \\\"message\\\": \\\"Sample message for FireOS endpoints\\\" &#125; &#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"BAIDU\"</span>: <span class=\"string\">\"&#123;\\\"title\\\":\\\"Sample message title\\\",\\\"description\\\":\\\"Sample message for Baidu endpoints\\\"&#125;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"MPNS\"</span>: <span class=\"string\">\"&lt;?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?&gt;&lt;wp:Notification xmlns:wp=\\\"WPNotification\\\"&gt;&lt;wp:Tile&gt;&lt;wp:Count&gt;ENTER COUNT&lt;/wp:Count&gt;&lt;wp:Title&gt;Sample message for Windows Phone 7+ endpoints&lt;/wp:Title&gt;&lt;/wp:Tile&gt;&lt;/wp:Notification&gt;\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"WNS\"</span>: <span class=\"string\">\"&lt;badge version=\\\"1\\\" value=\\\"42\\\"/&gt;\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div></li>\n</ul>\n","text":"개발환경 구축※ 기본 개발환경IntelliJJava, SpringAWS ConsoleSNS 설명사용자에게 Noti 보내주는게 주요 임무.기본 기능으로는 Push(FCM, GCM), 이메일, SMS, 등 … 다용도로 보낼 수 있다.1) SNS Topic","link":"","raw":null,"photos":[],"categories":[{"name":"aws","slug":"aws","count":12,"path":"api/categories/aws.json"}],"tags":[{"name":"AWS","slug":"AWS","count":14,"path":"api/tags/AWS.json"},{"name":"secretsmanager","slug":"secretsmanager","count":2,"path":"api/tags/secretsmanager.json"},{"name":"Secret","slug":"Secret","count":2,"path":"api/tags/Secret.json"}]},{"title":"Secretmanager","slug":"Secretmanager","date":"2020-05-06T05:09:57.000Z","updated":"2020-11-23T01:31:25.299Z","comments":true,"pin":null,"path":"api/articles/Secretmanager.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/62123161/81140306-e1441c80-8fa3-11ea-83b9-f4eed46627c9.png","content":"<h2 id=\"개발환경-구축\"><a href=\"#개발환경-구축\" class=\"headerlink\" title=\"개발환경 구축\"></a>개발환경 구축</h2><p>※ 기본 개발환경</p>\n<ul>\n<li>IntelliJ</li>\n<li>Java, Spring</li>\n<li>AWS Console</li>\n</ul>\n<h2 id=\"SecretsManager-설명\"><a href=\"#SecretsManager-설명\" class=\"headerlink\" title=\"SecretsManager 설명\"></a>SecretsManager 설명</h2><ul>\n<li><p>이름에서 유추가 가능하지 않은가? 비밀스런 Key를 가지고 있는(관리하는) 서비스라고 보면 쉽다.</p>\n</li>\n<li><p>사실 비밀까지는 아니지만 환경변수를 받아서 사용하는 용도로 쓰고 있다. 자주 변하지 않는 변수로는 아래와 같은….<br>1) RDS 접속정보(주소, ID, PW)<br>2) SNS 그룹, 기능사양인 알림 메세지<br>3) Access Key, Secret Key<br>4) IoT Core 접속이나 Control을 위한 ARN들…<br>5) 외부 FTP 접속정보<br>6) 회원정보 관리를 위한 Cognito 접속정보<br><a href=\"https://user-images.githubusercontent.com/62123161/81140306-e1441c80-8fa3-11ea-83b9-f4eed46627c9.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81140306-e1441c80-8fa3-11ea-83b9-f4eed46627c9.png\" alt=\"secretmanager_01\"></a></p>\n</li>\n<li><p>참고로, Secrets Manager에 값을 넣는 것은 CLI와 콘솔 두개뿐이다. (API 호출로 넣을 수 없다는 소리이다.)</p>\n</li>\n<li><p>코딩으로 할 수 있는건 조회만 가능하다. (더 이상의 설명은 생략한다.)</p>\n</li>\n</ul>\n<h3 id=\"1-Secret-생성\"><a href=\"#1-Secret-생성\" class=\"headerlink\" title=\"1) Secret 생성\"></a>1) Secret 생성</h3><h4 id=\"Secret-Type\"><a href=\"#Secret-Type\" class=\"headerlink\" title=\"Secret Type\"></a>Secret Type</h4><p><a href=\"https://user-images.githubusercontent.com/62123161/81145165-b7ddbd80-8fb0-11ea-839a-4fb3f7e37f28.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81145165-b7ddbd80-8fb0-11ea-839a-4fb3f7e37f28.png\" alt=\"secretmanager_02\"></a></p>\n<ul>\n<li>너무 직관적으로 다 써져있기에 크게 설명할게 없다. 우선, 우리 Secrets Manager는 모두 “Other type of Secret”을 사용하고 있음(API 호출 용도)</li>\n<li>다른 type을 선택하면 해당 DB 인스턴스에 접근이 쉽게 가능하다.</li>\n<li>다른 type들은 직접 설정해서 테스트해보기 바란다. (근데 나는 한번하고 안해봤다..)</li>\n</ul>\n<h4 id=\"Key-Value\"><a href=\"#Key-Value\" class=\"headerlink\" title=\"Key / Value\"></a>Key / Value</h4><p><a href=\"https://user-images.githubusercontent.com/62123161/81140303-e0ab8600-8fa3-11ea-8c3a-1609cca6120e.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81140303-e0ab8600-8fa3-11ea-8c3a-1609cca6120e.png\" alt=\"secretmanager_03\"></a></p>\n<ul>\n<li>Key &amp; Value를 Json형태로 작성해도 좋고, MessageBox에 작성하여도 좋다. (어째든 받아 쓸때는 Json이다.)</li>\n<li>Encryption Key는 가급적 기본으로…(암호화를 원한다면 직접 해주어도 좋다. 다만, 호출해서 꺼내쓸때 복호화를 해줘야 읽을 수 있다.)</li>\n</ul>\n<h4 id=\"Name-and-Description\"><a href=\"#Name-and-Description\" class=\"headerlink\" title=\"Name and Description\"></a>Name and Description</h4><p><a href=\"https://user-images.githubusercontent.com/62123161/81140301-e012ef80-8fa3-11ea-854b-295e78aff2a2.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81140301-e012ef80-8fa3-11ea-854b-295e78aff2a2.png\" alt=\"secretmanager_04\"></a></p>\n<ul>\n<li>설명은 따로 하지않겠다. 이제 이쯤 되면 봐도 알지 않는가?</li>\n</ul>\n<h4 id=\"Configure-rotation\"><a href=\"#Configure-rotation\" class=\"headerlink\" title=\"Configure rotation\"></a>Configure rotation</h4><p><a href=\"https://user-images.githubusercontent.com/62123161/81140297-dee1c280-8fa3-11ea-9e65-1830cb3b5dc2.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81140297-dee1c280-8fa3-11ea-9e65-1830cb3b5dc2.png\" alt=\"secretmanager_05\"></a></p>\n<ul>\n<li>회전주기라고 읽지말고… 번역기 돌리면 그렇게 나온다..</li>\n<li>말그대로 Key/Value에 대해 Rotation 돌리면서 특정 값을 변경해주는 것이다. </li>\n<li>Lambda를 만들어서 주기적으로 Value를 변경해주는 기능인데, 주기적으로 변경을 해줘야하는 값(암호 및 키)의 경우 이 기능을 사용하면 좋다.(참고로, 만들어두면 자동으로 돌아준다.)</li>\n</ul>\n<h4 id=\"Sample-Code\"><a href=\"#Sample-Code\" class=\"headerlink\" title=\"Sample Code\"></a>Sample Code</h4><p><a href=\"https://user-images.githubusercontent.com/62123161/81140411-31bb7a00-8fa4-11ea-83b7-4c2e57b494cd.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81140411-31bb7a00-8fa4-11ea-83b7-4c2e57b494cd.png\" alt=\"secretmanager_06\"></a></p>\n<ul>\n<li>내가 소스를 설명하거나 찾아야 할 필요 없이, 설명도 해주고 알아서 만들어준다.</li>\n<li>물론, 조회만이니까 어마어마한 양의 소스가 들은 것은 아니다.</li>\n<li>총 6가지의 언어에 대해 지원한다.</li>\n</ul>\n<h3 id=\"2-소스\"><a href=\"#2-소스\" class=\"headerlink\" title=\"2) 소스\"></a>2) 소스</h3><h4 id=\"Gradle\"><a href=\"#Gradle\" class=\"headerlink\" title=\"Gradle\"></a>Gradle</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">compileJava &#123;</span><br><span class=\"line\">    sourceCompatibility = 1.8</span><br><span class=\"line\">    targetCompatibility = 1.8</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">compileJava.options.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">compileTestJava.options.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-secretsmanager</span><br><span class=\"line\">    compile group: <span class=\"string\">'com.amazonaws'</span>, name: <span class=\"string\">'aws-java-sdk-secretsmanager'</span>, version: <span class=\"string\">'1.11.683'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"샘플도-있는데-이게-필요한지-모르겠다-그래도-대충이나마-만들었으니-참고하기-바람\"><a href=\"#샘플도-있는데-이게-필요한지-모르겠다-그래도-대충이나마-만들었으니-참고하기-바람\" class=\"headerlink\" title=\"샘플도 있는데 이게 필요한지 모르겠다.(그래도 대충이나마 만들었으니 참고하기 바람.)\"></a>샘플도 있는데 이게 필요한지 모르겠다.(그래도 대충이나마 만들었으니 참고하기 바람.)</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void <span class=\"function\"><span class=\"title\">getSecret</span></span>() &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">        String secretName = <span class=\"string\">\"MyTestDatabaseMasterSecret\"</span>;</span><br><span class=\"line\">        String endpoint = <span class=\"string\">\"secretsmanager.ap-northeast-2.amazonaws.com\"</span>;</span><br><span class=\"line\">        String region = <span class=\"string\">\"ap-northeast-2\"</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">        AwsClientBuilder.EndpointConfiguration config = new AwsClientBuilder.EndpointConfiguration(endpoint, region);</span><br><span class=\"line\">        AWSSecretsManagerClientBuilder clientBuilder = AWSSecretsManagerClientBuilder.standard();</span><br><span class=\"line\">        clientBuilder.setEndpointConfiguration(config);</span><br><span class=\"line\">        AWSSecretsManager client = clientBuilder.build();</span><br><span class=\"line\"> </span><br><span class=\"line\">        String secret;</span><br><span class=\"line\">        ByteBuffer binarySecretData;</span><br><span class=\"line\">        GetSecretValueRequest getSecretValueRequest = new GetSecretValueRequest()</span><br><span class=\"line\">                .withSecretId(secretName).withVersionStage(<span class=\"string\">\"AWSCURRENT\"</span>);</span><br><span class=\"line\">        GetSecretValueResult getSecretValueResult = null;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            getSecretValueResult = client.getSecretValue(getSecretValueRequest);</span><br><span class=\"line\"> </span><br><span class=\"line\">        &#125; catch(ResourceNotFoundException e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"The requested secret \"</span> + secretName + <span class=\"string\">\" was not found\"</span>);</span><br><span class=\"line\">        &#125; catch (InvalidRequestException e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"The request was invalid due to: \"</span> + e.getMessage());</span><br><span class=\"line\">        &#125; catch (InvalidParameterException e) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"The request had invalid params: \"</span> + e.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        String json = getSecretValueResult.getSecretString();</span><br><span class=\"line\">        try&#123;</span><br><span class=\"line\">            JsonNode eventNode = OBJECT_MAPPER.readTree(json);</span><br><span class=\"line\">            String username = eventNode.path(<span class=\"string\">\"username\"</span>).asText();</span><br><span class=\"line\">            String password = eventNode.path(<span class=\"string\">\"password\"</span>).asText();</span><br><span class=\"line\">            String engine = eventNode.path(<span class=\"string\">\"engine\"</span>).asText();</span><br><span class=\"line\">            String host = eventNode.path(<span class=\"string\">\"host\"</span>).asText();</span><br><span class=\"line\">            String port = eventNode.path(<span class=\"string\">\"port\"</span>).asText();</span><br><span class=\"line\">            String dbname = eventNode.path(<span class=\"string\">\"dbname\"</span>).asText();</span><br><span class=\"line\">            String dbInstanceIdentifier = eventNode.path(<span class=\"string\">\"dbInstanceIdentifier\"</span>).asText();</span><br><span class=\"line\">            String name = eventNode.path(<span class=\"string\">\"name\"</span>).asText();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch(Exception e)&#123;</span><br><span class=\"line\">            System.out.println(e.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(getSecretValueResult == null) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        // Depending on whether the secret was a string or binary, one of these fields will be populated</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(getSecretValueResult.getSecretString() != null) &#123;</span><br><span class=\"line\">            secret = getSecretValueResult.getSecretString();</span><br><span class=\"line\">            System.out.println(secret);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            binarySecretData = getSecretValueResult.getSecretBinary();</span><br><span class=\"line\">            System.out.println(binarySecretData.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></div>\n\n<h4 id=\"클래스화-한-소스\"><a href=\"#클래스화-한-소스\" class=\"headerlink\" title=\"클래스화 한 소스\"></a>클래스화 한 소스</h4><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"BASH\"><figure class=\"iseeu highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class SecretManagerHelper &#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    private static SecretManagerHelper secretManagerHelper;</span><br><span class=\"line\">    private static AWSSecretsManager awsSecretsManager;</span><br><span class=\"line\"> </span><br><span class=\"line\">    public static void init() throws IOException &#123;</span><br><span class=\"line\">        secretManagerHelper = new SecretManagerHelper();</span><br><span class=\"line\"> </span><br><span class=\"line\">        awsSecretsManager  = AWSSecretsManagerClientBuilder.standard()</span><br><span class=\"line\">                .withRegion(Config.AWS_SECRET_REGION)</span><br><span class=\"line\">                .build();</span><br><span class=\"line\"> </span><br><span class=\"line\">        getSecretValue();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    public static SecretManagerHelper getInstance() throws IOException&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(null == secretManagerHelper)&#123;</span><br><span class=\"line\">            secretManagerHelper = new SecretManagerHelper();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(null == awsSecretsManager)&#123;</span><br><span class=\"line\">            init();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">return</span> secretManagerHelper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    public static AWSSecretsManager getAWSSecretsManager() throws IOException&#123;</span><br><span class=\"line\">        getInstance();</span><br><span class=\"line\">        <span class=\"built_in\">return</span> awsSecretsManager;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    private static void getSecretValue() throws IOException &#123;</span><br><span class=\"line\">        try&#123;</span><br><span class=\"line\">            GetSecretValueRequest getCredentialRequest = new GetSecretValueRequest()</span><br><span class=\"line\">                    .withSecretId(Config.SECRET_IOT_CREDENTIALS);</span><br><span class=\"line\">            GetSecretValueResult getCredentialResult = awsSecretsManager.getSecretValue(getCredentialRequest);</span><br><span class=\"line\">            String credentialString = getCredentialResult.getSecretString();</span><br><span class=\"line\">            Config.IOT_CREDENTIALS_NODE = new ObjectMapper().readTree(credentialString);</span><br><span class=\"line\"> </span><br><span class=\"line\">            GetSecretValueRequest getRdsRequest = new GetSecretValueRequest()</span><br><span class=\"line\">                    .withSecretId(Config.SECRET_IOT_RDS);</span><br><span class=\"line\">            GetSecretValueResult getRdsResult = awsSecretsManager.getSecretValue(getRdsRequest);</span><br><span class=\"line\">            String rdsString = getRdsResult.getSecretString();</span><br><span class=\"line\">            Config.IOT_RDS_NODE = new ObjectMapper().readTree(rdsString);</span><br><span class=\"line\"> </span><br><span class=\"line\">            GetSecretValueRequest getSnsRequest = new GetSecretValueRequest()</span><br><span class=\"line\">                    .withSecretId(Config.SECRET_IOT_SNS);</span><br><span class=\"line\">            GetSecretValueResult getSnsResult = awsSecretsManager.getSecretValue(getSnsRequest);</span><br><span class=\"line\">            String snsString = getSnsResult.getSecretString();</span><br><span class=\"line\">            Config.IOT_SNS_NODE = new ObjectMapper().readTree(snsString);</span><br><span class=\"line\"> </span><br><span class=\"line\">            GetSecretValueRequest getCoreRequest = new GetSecretValueRequest()</span><br><span class=\"line\">                    .withSecretId(Config.SECRET_IOT_CORE);</span><br><span class=\"line\">            GetSecretValueResult getCoreResult = awsSecretsManager.getSecretValue(getCoreRequest);</span><br><span class=\"line\">            String coreString = getCoreResult.getSecretString();</span><br><span class=\"line\">            Config.IOT_CORE_NODE = new ObjectMapper().readTree(coreString);</span><br><span class=\"line\"> </span><br><span class=\"line\">            GetSecretValueRequest getKWeatherRequest = new GetSecretValueRequest()</span><br><span class=\"line\">                    .withSecretId(Config.SECRET_IOT_KWEATHER);</span><br><span class=\"line\">            GetSecretValueResult getKWeatherResult = awsSecretsManager.getSecretValue(getKWeatherRequest);</span><br><span class=\"line\">            String kWeatherString = getKWeatherResult.getSecretString();</span><br><span class=\"line\">            Config.IOT_KWEATHER_NODE = new ObjectMapper().readTree(kWeatherString);</span><br><span class=\"line\"> </span><br><span class=\"line\">//            String username = eventNode.path(<span class=\"string\">\"username\"</span>).asText();</span><br><span class=\"line\">//            String password = eventNode.path(<span class=\"string\">\"password\"</span>).asText();</span><br><span class=\"line\">//            String engine = eventNode.path(<span class=\"string\">\"engine\"</span>).asText();</span><br><span class=\"line\">//            String host = eventNode.path(<span class=\"string\">\"host\"</span>).asText();</span><br><span class=\"line\">//            String port = eventNode.path(<span class=\"string\">\"port\"</span>).asText();</span><br><span class=\"line\">//            String dbname = eventNode.path(<span class=\"string\">\"dbname\"</span>).asText();</span><br><span class=\"line\">//            String dbInstanceIdentifier = eventNode.path(<span class=\"string\">\"dbInstanceIdentifier\"</span>).asText();</span><br><span class=\"line\">//            String name = eventNode.path(<span class=\"string\">\"name\"</span>).asText();</span><br><span class=\"line\"> </span><br><span class=\"line\">        &#125; catch (Exception ex)&#123;</span><br><span class=\"line\">            throw ex;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">//        String secret = null, decodedBinarySecret;</span><br><span class=\"line\">//        GetSecretValueRequest getSecretValueRequest = new GetSecretValueRequest()</span><br><span class=\"line\">//                .withSecretId(Config.SECRET_IOT_CREDENTIALS);</span><br><span class=\"line\">//        GetSecretValueResult getSecretValueResult = null;</span><br><span class=\"line\">//</span><br><span class=\"line\">//        try &#123;</span><br><span class=\"line\">//            getSecretValueResult = awsSecretsManager.getSecretValue(getSecretValueRequest);</span><br><span class=\"line\">//        &#125; catch (DecryptionFailureException e) &#123;</span><br><span class=\"line\">//            // SecretsManager can not decrypt the protected secret text using the provided KMS key.</span><br><span class=\"line\">//            // Deal with the exception here, and/or rethrow at your discretion.</span><br><span class=\"line\">//            throw e;</span><br><span class=\"line\">//        &#125; catch (InternalServiceErrorException e) &#123;</span><br><span class=\"line\">//            // An error occurred on the server side.</span><br><span class=\"line\">//            // Deal with the exception here, and/or rethrow at your discretion.</span><br><span class=\"line\">//            throw e;</span><br><span class=\"line\">//        &#125; catch (InvalidParameterException e) &#123;</span><br><span class=\"line\">//            // You provided an invalid value <span class=\"keyword\">for</span> a parameter.</span><br><span class=\"line\">//            // Deal with the exception here, and/or rethrow at your discretion.</span><br><span class=\"line\">//            throw e;</span><br><span class=\"line\">//        &#125; catch (InvalidRequestException e) &#123;</span><br><span class=\"line\">//            // You provided a parameter value that is not valid <span class=\"keyword\">for</span> the current state of the resource.</span><br><span class=\"line\">//            // Deal with the exception here, and/or rethrow at your discretion.</span><br><span class=\"line\">//            throw e;</span><br><span class=\"line\">//        &#125; catch (ResourceNotFoundException e) &#123;</span><br><span class=\"line\">//            // We can not find the resource that you asked <span class=\"keyword\">for</span>.</span><br><span class=\"line\">//            // Deal with the exception here, and/or rethrow at your discretion.</span><br><span class=\"line\">//            throw e;</span><br><span class=\"line\">//        &#125;</span><br><span class=\"line\">//</span><br><span class=\"line\">//        // Decrypts secret using the associated KMS CMK.</span><br><span class=\"line\">//        // Depending on whether the secret is a string or binary, one of these fields will be populated.</span><br><span class=\"line\">//        <span class=\"keyword\">if</span> (getSecretValueResult.getSecretString() != null) &#123;</span><br><span class=\"line\">//            secret = getSecretValueResult.getSecretString();</span><br><span class=\"line\">//        &#125;</span><br><span class=\"line\">//        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">//            decodedBinarySecret = new String(Base64.getDecoder().decode(getSecretValueResult.getSecretBinary()).array());</span><br><span class=\"line\">//        &#125;</span><br><span class=\"line\">//        // Your code goes here.</span><br><span class=\"line\">//        try&#123;</span><br><span class=\"line\">//            JsonNode eventNode = new ObjectMapper().readTree(secret);</span><br><span class=\"line\">//        &#125;</span><br><span class=\"line\">//        catch(Exception e)&#123;</span><br><span class=\"line\">//            System.out.println(e.getMessage());</span><br><span class=\"line\">//        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n<h3 id=\"3-결론\"><a href=\"#3-결론\" class=\"headerlink\" title=\"3) 결론\"></a>3) 결론</h3><ul>\n<li>조회쪽만 코딩하면 된다.</li>\n<li>고정적으로 변하지 않는 값을 저장해두고 쓰기 좋다.(소스를 건드릴 필요가 없으므로…)</li>\n<li>DB Instance를 설정해서 값을 불러오기 좋고, Rotation 기능을 활용하여 암호주기를 설정하고 자동으로 바꿔주기 좋다.</li>\n<li>별 거 아닌 내용이지만, 거의 대부분에서 쓰일정도로 쓰임새가 좋다.</li>\n</ul>\n","text":"개발환경 구축※ 기본 개발환경IntelliJJava, SpringAWS ConsoleSecretsManager 설명이름에서 유추가 가능하지 않은가? 비밀스런 Key를 가지고 있는(관리하는) 서비스라고 보면 쉽다.사실 비밀까지는 아니지만 환경변수를 받아","link":"","raw":null,"photos":[],"categories":[{"name":"awws","slug":"awws","count":1,"path":"api/categories/awws.json"}],"tags":[{"name":"AWS","slug":"AWS","count":14,"path":"api/tags/AWS.json"},{"name":"secretsmanager","slug":"secretsmanager","count":2,"path":"api/tags/secretsmanager.json"},{"name":"Secret","slug":"Secret","count":2,"path":"api/tags/Secret.json"}]}]}