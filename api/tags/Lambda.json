{"name":"Lambda","slug":"Lambda","count":2,"posts":[{"title":"Container-Lambda","slug":"Container-Lambda","date":"2021-03-26T03:46:18.000Z","updated":"2021-03-30T07:30:14.098Z","comments":true,"pin":null,"path":"api/articles/Container-Lambda.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/56995911/112574344-69881600-8e31-11eb-806d-741718653ca7.png","content":"<h2 id=\"컨테이너의-개념\"><a href=\"#컨테이너의-개념\" class=\"headerlink\" title=\"컨테이너의 개념\"></a>컨테이너의 개념</h2><ul>\n<li><p>선박의 컨테이너처럼 프로세스가 사용하는 자원을 격리하는 것.<br><a href=\"https://user-images.githubusercontent.com/56995911/112574344-69881600-8e31-11eb-806d-741718653ca7.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112574344-69881600-8e31-11eb-806d-741718653ca7.png\" alt=\"image\"></a></p>\n</li>\n<li><p>가상머신과 마찬가지로 애플리케이션을 관련 라이브러리 및 종속 항목과 함께 패키지로 묶어 소프트웨어 서비스를 위한 격리환경에서 구동</p>\n</li>\n<li><p>장점</p>\n<ul>\n<li>가벼움<ul>\n<li>Request Traffic에 따라 추가배포가 가능.</li>\n<li>가상머신은 수 GB의 무거운 환경을 구성해야 하지만, Container는 GuestOS가 없으므로 MB단위의 구동환경을 가짐.</li>\n</ul>\n</li>\n<li>탄력성<ul>\n<li>운영체제(Linux, Windows 등), 가상머신, 로컬, 운영PC, 클라우드 등 어느 환경에서나 구동이 가능하므로 개발/배포가 쉬움.</li>\n</ul>\n</li>\n<li>유지 관리 효율<ul>\n<li>커널이 하나뿐이어서 업데이트/패치를 수행하면 전체적용이 되므로 효율적으로 유지관리 가능.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>도커의 작동순서<br><a href=\"https://user-images.githubusercontent.com/56995911/112584661-96412b00-8e3b-11eb-8274-900aeffd4ec2.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112584661-96412b00-8e3b-11eb-8274-900aeffd4ec2.png\" alt=\"image\"></a></p>\n<ol>\n<li>코드개발</li>\n<li>Dockerfile 생성</li>\n<li>Dockerfile Image 생성(핵심 : 코드를 이미지화 하여 배포)</li>\n<li>Container Orchestrator를 통한 배포</li>\n<li>Container run</li>\n<li>Container image Push</li>\n</ol>\n</li>\n<li><p>도커파일 예제</p>\n<ul>\n<li><a href=\"https://javacan.tistory.com/entry/docker-start-7-create-image-using-dockerfile\" target=\"_blank\" rel=\"noopener\">https://javacan.tistory.com/entry/docker-start-7-create-image-using-dockerfile</a></li>\n</ul>\n</li>\n<li><p>[Container 시리즈] 02. Docker사용법 Docker Basic Command (osci.kr)(<a href=\"https://tech.osci.kr/2020/03/03/91690192/\" target=\"_blank\" rel=\"noopener\">https://tech.osci.kr/2020/03/03/91690192/</a>)</p>\n</li>\n</ul>\n<h2 id=\"Lambda-작성-및-시연\"><a href=\"#Lambda-작성-및-시연\" class=\"headerlink\" title=\"Lambda 작성 및 시연\"></a>Lambda 작성 및 시연</h2><h3 id=\"설정\"><a href=\"#설정\" class=\"headerlink\" title=\"설정\"></a>설정</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/112585029-67778480-8e3c-11eb-9ce6-2a4bfd4db374.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112585029-67778480-8e3c-11eb-9ce6-2a4bfd4db374.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/112585035-6b0b0b80-8e3c-11eb-80bf-7961f577cf28.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112585035-6b0b0b80-8e3c-11eb-80bf-7961f577cf28.png\" alt=\"image\"></a></p>\n<ul>\n<li>위와 같은 화면이 나오기 위해서는 AWS Sam(다람쥐) 설치하여야 한다.</li>\n<li>Configure-Plugins 내에서 AWS ToolKit을 설치.</li>\n<li>또한, Docker는 필수. </li>\n</ul>\n<h3 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/112586776-b672e900-8e3f-11eb-8253-dc407c41a8b2.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112586776-b672e900-8e3f-11eb-8253-dc407c41a8b2.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/112586785-bbd03380-8e3f-11eb-9389-d5abb4dd7de1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112586785-bbd03380-8e3f-11eb-9389-d5abb4dd7de1.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/112586790-bf63ba80-8e3f-11eb-8c2c-46beccfc5e15.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112586790-bf63ba80-8e3f-11eb-8c2c-46beccfc5e15.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/112586797-c1c61480-8e3f-11eb-94f6-c9fe9e3d01fa.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112586797-c1c61480-8e3f-11eb-94f6-c9fe9e3d01fa.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/112586804-c4286e80-8e3f-11eb-84bf-9687952ef1de.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112586804-c4286e80-8e3f-11eb-84bf-9687952ef1de.png\" alt=\"image\"></a></p>\n<h3 id=\"Node-Js\"><a href=\"#Node-Js\" class=\"headerlink\" title=\"Node.Js\"></a>Node.Js</h3><p><a href=\"https://user-images.githubusercontent.com/56995911/112586925-f8039400-8e3f-11eb-9947-ed02d7fad936.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112586925-f8039400-8e3f-11eb-9947-ed02d7fad936.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/112586929-fa65ee00-8e3f-11eb-82ce-d0abf9405385.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112586929-fa65ee00-8e3f-11eb-82ce-d0abf9405385.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/112586934-fcc84800-8e3f-11eb-9bf5-c5e2859151f1.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112586934-fcc84800-8e3f-11eb-9bf5-c5e2859151f1.png\" alt=\"image\"></a><br><a href=\"https://user-images.githubusercontent.com/56995911/112586939-ff2aa200-8e3f-11eb-96dc-83597e3839db.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/56995911/112586939-ff2aa200-8e3f-11eb-96dc-83597e3839db.png\" alt=\"image\"></a></p>\n","text":"컨테이너의 개념선박의 컨테이너처럼 프로세스가 사용하는 자원을 격리하는 것.<br> [Figure] ","link":"","raw":null,"photos":[],"categories":[{"name":"aws","slug":"aws","count":18,"path":"api/categories/aws.json"}],"tags":[{"name":"AWS","slug":"AWS","count":20,"path":"api/tags/AWS.json"},{"name":"Container","slug":"Container","count":1,"path":"api/tags/Container.json"},{"name":"Lambda","slug":"Lambda","count":2,"path":"api/tags/Lambda.json"}]},{"title":"Lambda","slug":"Lambda","date":"2020-05-07T02:49:14.000Z","updated":"2020-11-23T01:31:25.287Z","comments":true,"pin":null,"path":"api/articles/Lambda.json","excerpt":"","keywords":null,"cover":"https://user-images.githubusercontent.com/62123161/81253068-88878900-9062-11ea-87b3-9a3713b6bd1d.png","content":"<h2 id=\"개발환경-구축\"><a href=\"#개발환경-구축\" class=\"headerlink\" title=\"개발환경 구축\"></a>개발환경 구축</h2><p>※ 기본 개발환경</p>\n<ul>\n<li>IntelliJ</li>\n<li>Java 8, 11</li>\n<li>AWS Console</li>\n</ul>\n<h2 id=\"Lambda-설명\"><a href=\"#Lambda-설명\" class=\"headerlink\" title=\"Lambda 설명\"></a>Lambda 설명</h2><h3 id=\"1-람다는-메모리에-따라-돌아가는-환경이-달라진다\"><a href=\"#1-람다는-메모리에-따라-돌아가는-환경이-달라진다\" class=\"headerlink\" title=\"1. 람다는 메모리에 따라 돌아가는 환경이 달라진다.\"></a>1. 람다는 메모리에 따라 돌아가는 환경이 달라진다.</h3><ul>\n<li>m5-Large, t2-small 등.. OS환경은 모두 Linux 환경이지만, Node와 Python 등은 Linux2에서 동작하고, 대부분의 언어는 Linux환경에서 돌아간다.)<h3 id=\"2-a람다-b람다-a람다-콜도-가능하다\"><a href=\"#2-a람다-b람다-a람다-콜도-가능하다\" class=\"headerlink\" title=\"2. a람다-b람다-a람다 콜도 가능하다.\"></a>2. a람다-b람다-a람다 콜도 가능하다.</h3><h3 id=\"3-람다는-동기식-비동기식의-선택이-가능하다\"><a href=\"#3-람다는-동기식-비동기식의-선택이-가능하다\" class=\"headerlink\" title=\"3. 람다는 동기식, 비동기식의 선택이 가능하다.\"></a>3. 람다는 동기식, 비동기식의 선택이 가능하다.</h3></li>\n<li>경동에서 사용하는 람다들은 모두 동기식이다. 비동기식은 몇가지 안된다.</li>\n</ul>\n<h3 id=\"4-Node-js-Python\"><a href=\"#4-Node-js-Python\" class=\"headerlink\" title=\"4. Node.js, Python\"></a>4. Node.js, Python</h3><ul>\n<li>AWS Lambda 콘솔, Cloud9, IDE 플러그인이 포함된 Visual Studio/PyCharm으로 작성가능.</li>\n<li>Cloud9은 웹 자체에서 디버깅(BreakPoint 가능)이 가능하며, 동시에 여러명이서 수정이 된다.</li>\n<li>실시간으로 페이지가 갱신되므로 다른사람과 같이 작업하면, 다른사람이 작업한 내용의 수정내용을 볼 수 있다. </li>\n</ul>\n<h3 id=\"5-한도\"><a href=\"#5-한도\" class=\"headerlink\" title=\"5. 한도\"></a>5. 한도</h3><ul>\n<li><p>총 람다 동시실행 갯수: 1000개 / 75GB 가 한도이며, VPC당 인터페이스 250개까지 지원한다.</p>\n</li>\n<li><p>현재 동시실행 갯수를 운영서버계정은 2500개까지 열어두었다. </p>\n</li>\n<li><p>사실 리밋은 언제든지 Support팀에 요청하면 풀 수 있다. 리밋을 상향한다고 하여도 추가비용이 발생하지는 않는다.</p>\n</li>\n<li><p>기본적으로 1000개인 Limit을 5000개까지는 올리고 싶다. 용량 75GB는 상향의 필요성을 못느낀다.(개인생각)</p>\n</li>\n<li><p>각 람다 별 제한사항<br><a href=\"https://user-images.githubusercontent.com/62123161/81253068-88878900-9062-11ea-87b3-9a3713b6bd1d.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81253068-88878900-9062-11ea-87b3-9a3713b6bd1d.png\" alt=\"lambda_01\"></a></p>\n</li>\n</ul>\n<h3 id=\"6-Trigger-출발점-과-Destination-목적점-을-직접-지정해줄-수도-있다\"><a href=\"#6-Trigger-출발점-과-Destination-목적점-을-직접-지정해줄-수도-있다\" class=\"headerlink\" title=\"6. Trigger(출발점)과 Destination(목적점)을 직접 지정해줄 수도 있다.\"></a>6. Trigger(출발점)과 Destination(목적점)을 직접 지정해줄 수도 있다.</h3><p><a href=\"https://user-images.githubusercontent.com/62123161/81251406-29277a00-905e-11ea-8afd-d501dfb1cbd0.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81251406-29277a00-905e-11ea-8afd-d501dfb1cbd0.png\" alt=\"lambda_02\"></a></p>\n<ul>\n<li>Trigger / Destination List<br><a href=\"https://user-images.githubusercontent.com/62123161/81251405-288ee380-905e-11ea-9ed2-d6cdc2f61c0d.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81251405-288ee380-905e-11ea-9ed2-d6cdc2f61c0d.png\" alt=\"lambda_03\"></a><br><a href=\"https://user-images.githubusercontent.com/62123161/81251404-288ee380-905e-11ea-80fa-3d4775ad102d.png\" target=\"_blank\" rel=\"noopener\"><img src=\"https://user-images.githubusercontent.com/62123161/81251404-288ee380-905e-11ea-80fa-3d4775ad102d.png\" alt=\"lambda_04\"></a></li>\n</ul>\n<h3 id=\"7-람다를-내부에서-실행시켜-외부의-값을-가져오려고-할때는-아래와-같은-순서를-따르면-된다\"><a href=\"#7-람다를-내부에서-실행시켜-외부의-값을-가져오려고-할때는-아래와-같은-순서를-따르면-된다\" class=\"headerlink\" title=\"7. 람다를 내부에서 실행시켜 외부의 값을 가져오려고 할때는 아래와 같은 순서를 따르면 된다.\"></a>7. 람다를 내부에서 실행시켜 외부의 값을 가져오려고 할때는 아래와 같은 순서를 따르면 된다.</h3><ul>\n<li>온수매트의 Kweather정보는 상관없으나, TAC의 AirKorea는 반드시 이 설정을 해주어야 한다.</li>\n<li>Lambda 함수를 Private Subnet에 위치시키고,(콘솔화면 기준 : VPC - RouteTable - Lambda 함수가 설정된 VPC - Subnet의 RouteTable 설정)</li>\n<li>RouteTable 정책을 Lambda Subnet을 0.0.0.0/0 인터넷망을 나갈때 NAT Gateway를 통하도록 설정(VPC - NAT Gatewat 에서 IP 를 확인하시고, 해당 Elastic IP(고정 IP)를 Whitelist 로 넣어줌) <a href=\"https://www.slideshare.net/addnull/aws-lambdas-with-a-static-outgoing-ip\" target=\"_blank\" rel=\"noopener\">https://www.slideshare.net/addnull/aws-lambdas-with-a-static-outgoing-ip</a></li>\n</ul>\n<h3 id=\"8-모니터링\"><a href=\"#8-모니터링\" class=\"headerlink\" title=\"8. 모니터링\"></a>8. 모니터링</h3><ul>\n<li>아래 그림처럼 수행 구간별로 구분해서 분석이 가능함. (참고용… 중요하지 않음)<img width=\"420\" alt=\"lambda_05\" src=\"https://user-images.githubusercontent.com/62123161/81251472-56742800-905e-11ea-9142-0687f7ccb0de.png\">\n\n</li>\n</ul>\n<h3 id=\"9-SDK\"><a href=\"#9-SDK\" class=\"headerlink\" title=\"9. SDK\"></a>9. SDK</h3><ul>\n<li>Java에 적용된 SDK들은 이미 Node.js나 Python에 적용 되어 있다.</li>\n<li>우리가 쓰고자 하는 기능은 당연히 이미 SDK로 나와있다. 예) Dynamo 제어, S3 Bucket 제어, RDS 제어, Kinesis 제어 등등….  </li>\n<li>위 a번의 근거는, 람다를 스크립트언어로 사용하는 곳이 많기에 우선적으로 라이브러리를 지원해주기 때문.</li>\n<li>상대적으로 람다를 Java로 쓰는 곳은 그다지 많이 없다.(구동에 시간이 많이 들기에 빠른반응을 해줘야하는 서비스의 경우 Java를 안쓴다고 전해들었다.)</li>\n</ul>\n<h3 id=\"10-Lambda-RDS\"><a href=\"#10-Lambda-RDS\" class=\"headerlink\" title=\"10. Lambda - RDS\"></a>10. Lambda - RDS</h3><p>Python AWS 공식 자습서 예제 : <a href=\"https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/services-rds-tutorial.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/services-rds-tutorial.html</a><br>일반 블로그 Node.js 예제 : <a href=\"https://grip.news/archives/1411\" target=\"_blank\" rel=\"noopener\">https://grip.news/archives/1411</a><br>Node.js AWS 공식 설명서 예제 : <a href=\"https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/lambda-nodejs.html\" target=\"_blank\" rel=\"noopener\">https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/lambda-nodejs.html</a></p>\n<h2 id=\"결론\"><a href=\"#결론\" class=\"headerlink\" title=\"결론\"></a>결론</h2><p>위와 같은 람다의 특성으로 미루어 볼 때, 체크해야될 리스트는 아래와 같다.</p>\n<ol>\n<li>람다→람다를 호출하는 과정이 있을 수 있을지 설계단에서 한번 보아야 한다.</li>\n</ol>\n<ul>\n<li>스마트톡에는 람다→ 람다를 호출하는 과정이 없이, 기능별로만 쪼개놓은 상황이고, 기능이 겹친다고 하더라도 다 따로 만들어주었다.</li>\n</ul>\n<ol start=\"2\">\n<li>여러사람이 개발을 진행해야 한다면, Script언어를 같이 개발할 수 있는 Cloud9검토가 필요하다.(디버깅이 가능하고, 동시개발이 가능한점이 큰 이점. 히스토리도 AWS가 갖고있다.)</li>\n<li>한도는 최대한으로 늘려놓는 것이 좋을 것 같다. 1000→ 5000개정도. 또한, 각 람다별 메모리도 일단은 1024 이상으로 올려 사용하다가 사용량을 비교하여 낮추는 방향도 고려필요.</li>\n<li>VPC위에 lambda를 올려 실행시키는 방법을 미리 고민해두어야 함.</li>\n<li>SDK는 모두 제공하므로 걱정안해도 됨.</li>\n</ol>\n","text":"개발환경 구축※ 기본 개발환경IntelliJJava 8, 11AWS ConsoleLambda 설명1. 람다는 메모리에 따라 돌아가는 환경이 달라진다.m5-Large, t2-small 등.. OS환경은 모두 Linux 환경이지만, Node와 Python","link":"","raw":null,"photos":[],"categories":[{"name":"aws","slug":"aws","count":18,"path":"api/categories/aws.json"}],"tags":[{"name":"AWS","slug":"AWS","count":20,"path":"api/tags/AWS.json"},{"name":"Lambda","slug":"Lambda","count":2,"path":"api/tags/Lambda.json"},{"name":"java","slug":"java","count":1,"path":"api/tags/java.json"}]}]}